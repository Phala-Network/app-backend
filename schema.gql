# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Accounts {
  _count: AccountsCount
  address: String
  id: Int!
  stakePoolStakers(cursor: StakePoolStakersWhereUniqueInput, distinct: [StakePoolStakersScalarFieldEnum!], orderBy: [StakePoolStakersOrderByWithRelationInput!], skip: Int, take: Int, where: StakePoolStakersWhereInput): [StakePoolStakers!]!
  stakePools(cursor: StakePoolsWhereUniqueInput, distinct: [StakePoolsScalarFieldEnum!], orderBy: [StakePoolsOrderByWithRelationInput!], skip: Int, take: Int, where: StakePoolsWhereInput): [StakePools!]!
  workerActivities(cursor: WorkerActivitiesWhereUniqueInput, distinct: [WorkerActivitiesScalarFieldEnum!], orderBy: [WorkerActivitiesOrderByWithRelationInput!], skip: Int, take: Int, where: WorkerActivitiesWhereInput): [WorkerActivities!]!
  workers(cursor: WorkersWhereUniqueInput, distinct: [WorkersScalarFieldEnum!], orderBy: [WorkersOrderByWithRelationInput!], skip: Int, take: Int, where: WorkersWhereInput): [Workers!]!
}

type AccountsAvgAggregate {
  id: Float
}

input AccountsAvgOrderByAggregateInput {
  id: SortOrder
}

type AccountsCount {
  stakePoolStakers: Int!
  stakePools: Int!
  workerActivities: Int!
  workers: Int!
}

type AccountsCountAggregate {
  _all: Int!
  address: Int!
  id: Int!
}

input AccountsCountOrderByAggregateInput {
  address: SortOrder
  id: SortOrder
}

type AccountsGroupBy {
  _avg: AccountsAvgAggregate
  _count: AccountsCountAggregate
  _max: AccountsMaxAggregate
  _min: AccountsMinAggregate
  _sum: AccountsSumAggregate
  address: String
  id: Int!
}

type AccountsMaxAggregate {
  address: String
  id: Int
}

input AccountsMaxOrderByAggregateInput {
  address: SortOrder
  id: SortOrder
}

type AccountsMinAggregate {
  address: String
  id: Int
}

input AccountsMinOrderByAggregateInput {
  address: SortOrder
  id: SortOrder
}

input AccountsOrderByWithAggregationInput {
  _avg: AccountsAvgOrderByAggregateInput
  _count: AccountsCountOrderByAggregateInput
  _max: AccountsMaxOrderByAggregateInput
  _min: AccountsMinOrderByAggregateInput
  _sum: AccountsSumOrderByAggregateInput
  address: SortOrder
  id: SortOrder
}

input AccountsOrderByWithRelationInput {
  address: SortOrder
  id: SortOrder
  stakePoolStakers: StakePoolStakersOrderByRelationAggregateInput
  stakePools: StakePoolsOrderByRelationAggregateInput
  workerActivities: WorkerActivitiesOrderByRelationAggregateInput
  workers: WorkersOrderByRelationAggregateInput
}

input AccountsRelationFilter {
  is: AccountsWhereInput
  isNot: AccountsWhereInput
}

enum AccountsScalarFieldEnum {
  address
  id
}

input AccountsScalarWhereWithAggregatesInput {
  AND: [AccountsScalarWhereWithAggregatesInput!]
  NOT: [AccountsScalarWhereWithAggregatesInput!]
  OR: [AccountsScalarWhereWithAggregatesInput!]
  address: StringNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
}

type AccountsSumAggregate {
  id: Int
}

input AccountsSumOrderByAggregateInput {
  id: SortOrder
}

input AccountsUpdateInput {
  address: NullableStringFieldUpdateOperationsInput
  stakePoolStakers: StakePoolStakersUpdateManyWithoutAccountsInput
  stakePools: StakePoolsUpdateManyWithoutAccountsInput
  workerActivities: WorkerActivitiesUpdateManyWithoutAccountsInput
  workers: WorkersUpdateManyWithoutAccountsInput
}

input AccountsUpdateManyMutationInput {
  address: NullableStringFieldUpdateOperationsInput
}

input AccountsUpdateOneRequiredWithoutStakePoolStakersInput {
  connect: AccountsWhereUniqueInput
  update: AccountsUpdateWithoutStakePoolStakersInput
}

input AccountsUpdateOneRequiredWithoutStakePoolsInput {
  connect: AccountsWhereUniqueInput
  update: AccountsUpdateWithoutStakePoolsInput
}

input AccountsUpdateOneWithoutWorkerActivitiesInput {
  connect: AccountsWhereUniqueInput
  delete: Boolean
  disconnect: Boolean
  update: AccountsUpdateWithoutWorkerActivitiesInput
}

input AccountsUpdateOneWithoutWorkersInput {
  connect: AccountsWhereUniqueInput
  delete: Boolean
  disconnect: Boolean
  update: AccountsUpdateWithoutWorkersInput
}

input AccountsUpdateWithoutStakePoolStakersInput {
  address: NullableStringFieldUpdateOperationsInput
  stakePools: StakePoolsUpdateManyWithoutAccountsInput
  workerActivities: WorkerActivitiesUpdateManyWithoutAccountsInput
  workers: WorkersUpdateManyWithoutAccountsInput
}

input AccountsUpdateWithoutStakePoolsInput {
  address: NullableStringFieldUpdateOperationsInput
  stakePoolStakers: StakePoolStakersUpdateManyWithoutAccountsInput
  workerActivities: WorkerActivitiesUpdateManyWithoutAccountsInput
  workers: WorkersUpdateManyWithoutAccountsInput
}

input AccountsUpdateWithoutWorkerActivitiesInput {
  address: NullableStringFieldUpdateOperationsInput
  stakePoolStakers: StakePoolStakersUpdateManyWithoutAccountsInput
  stakePools: StakePoolsUpdateManyWithoutAccountsInput
  workers: WorkersUpdateManyWithoutAccountsInput
}

input AccountsUpdateWithoutWorkersInput {
  address: NullableStringFieldUpdateOperationsInput
  stakePoolStakers: StakePoolStakersUpdateManyWithoutAccountsInput
  stakePools: StakePoolsUpdateManyWithoutAccountsInput
  workerActivities: WorkerActivitiesUpdateManyWithoutAccountsInput
}

input AccountsWhereInput {
  AND: [AccountsWhereInput!]
  NOT: [AccountsWhereInput!]
  OR: [AccountsWhereInput!]
  address: StringNullableFilter
  id: IntFilter
  stakePoolStakers: StakePoolStakersListRelationFilter
  stakePools: StakePoolsListRelationFilter
  workerActivities: WorkerActivitiesListRelationFilter
  workers: WorkersListRelationFilter
}

input AccountsWhereUniqueInput {
  address: String
  id: Int
}

type AffectedRowsOutput {
  count: Int!
}

type AggregateAccounts {
  _avg: AccountsAvgAggregate
  _count: AccountsCountAggregate
  _max: AccountsMaxAggregate
  _min: AccountsMinAggregate
  _sum: AccountsSumAggregate
}

type AggregateArInternalMetadata {
  _count: ArInternalMetadataCountAggregate
  _max: ArInternalMetadataMaxAggregate
  _min: ArInternalMetadataMinAggregate
}

type AggregateEvents {
  _avg: EventsAvgAggregate
  _count: EventsCountAggregate
  _max: EventsMaxAggregate
  _min: EventsMinAggregate
  _sum: EventsSumAggregate
}

type AggregateMiners {
  _avg: MinersAvgAggregate
  _count: MinersCountAggregate
  _max: MinersMaxAggregate
  _min: MinersMinAggregate
  _sum: MinersSumAggregate
}

type AggregateSchemaMigrations {
  _count: SchemaMigrationsCountAggregate
  _max: SchemaMigrationsMaxAggregate
  _min: SchemaMigrationsMinAggregate
}

type AggregateStakePoolActivities {
  _avg: StakePoolActivitiesAvgAggregate
  _count: StakePoolActivitiesCountAggregate
  _max: StakePoolActivitiesMaxAggregate
  _min: StakePoolActivitiesMinAggregate
  _sum: StakePoolActivitiesSumAggregate
}

type AggregateStakePoolStakerActivities {
  _avg: StakePoolStakerActivitiesAvgAggregate
  _count: StakePoolStakerActivitiesCountAggregate
  _max: StakePoolStakerActivitiesMaxAggregate
  _min: StakePoolStakerActivitiesMinAggregate
  _sum: StakePoolStakerActivitiesSumAggregate
}

type AggregateStakePoolStakers {
  _avg: StakePoolStakersAvgAggregate
  _count: StakePoolStakersCountAggregate
  _max: StakePoolStakersMaxAggregate
  _min: StakePoolStakersMinAggregate
  _sum: StakePoolStakersSumAggregate
}

type AggregateStakePools {
  _avg: StakePoolsAvgAggregate
  _count: StakePoolsCountAggregate
  _max: StakePoolsMaxAggregate
  _min: StakePoolsMinAggregate
  _sum: StakePoolsSumAggregate
}

type AggregateStates {
  _avg: StatesAvgAggregate
  _count: StatesCountAggregate
  _max: StatesMaxAggregate
  _min: StatesMinAggregate
  _sum: StatesSumAggregate
}

type AggregateWorkerActivities {
  _avg: WorkerActivitiesAvgAggregate
  _count: WorkerActivitiesCountAggregate
  _max: WorkerActivitiesMaxAggregate
  _min: WorkerActivitiesMinAggregate
  _sum: WorkerActivitiesSumAggregate
}

type AggregateWorkers {
  _avg: WorkersAvgAggregate
  _count: WorkersCountAggregate
  _max: WorkersMaxAggregate
  _min: WorkersMinAggregate
  _sum: WorkersSumAggregate
}

type ArInternalMetadata {
  key: String!
  value: String
}

type ArInternalMetadataCountAggregate {
  _all: Int!
  key: Int!
  value: Int!
}

input ArInternalMetadataCountOrderByAggregateInput {
  key: SortOrder
  value: SortOrder
}

type ArInternalMetadataGroupBy {
  _count: ArInternalMetadataCountAggregate
  _max: ArInternalMetadataMaxAggregate
  _min: ArInternalMetadataMinAggregate
  key: String!
  value: String
}

type ArInternalMetadataMaxAggregate {
  key: String
  value: String
}

input ArInternalMetadataMaxOrderByAggregateInput {
  key: SortOrder
  value: SortOrder
}

type ArInternalMetadataMinAggregate {
  key: String
  value: String
}

input ArInternalMetadataMinOrderByAggregateInput {
  key: SortOrder
  value: SortOrder
}

input ArInternalMetadataOrderByWithAggregationInput {
  _count: ArInternalMetadataCountOrderByAggregateInput
  _max: ArInternalMetadataMaxOrderByAggregateInput
  _min: ArInternalMetadataMinOrderByAggregateInput
  key: SortOrder
  value: SortOrder
}

input ArInternalMetadataOrderByWithRelationInput {
  key: SortOrder
  value: SortOrder
}

enum ArInternalMetadataScalarFieldEnum {
  key
  value
}

input ArInternalMetadataScalarWhereWithAggregatesInput {
  AND: [ArInternalMetadataScalarWhereWithAggregatesInput!]
  NOT: [ArInternalMetadataScalarWhereWithAggregatesInput!]
  OR: [ArInternalMetadataScalarWhereWithAggregatesInput!]
  key: StringWithAggregatesFilter
  value: StringNullableWithAggregatesFilter
}

input ArInternalMetadataUpdateInput {
  key: StringFieldUpdateOperationsInput
  value: NullableStringFieldUpdateOperationsInput
}

input ArInternalMetadataUpdateManyMutationInput {
  key: StringFieldUpdateOperationsInput
  value: NullableStringFieldUpdateOperationsInput
}

input ArInternalMetadataWhereInput {
  AND: [ArInternalMetadataWhereInput!]
  NOT: [ArInternalMetadataWhereInput!]
  OR: [ArInternalMetadataWhereInput!]
  key: StringFilter
  value: StringNullableFilter
}

input ArInternalMetadataWhereUniqueInput {
  key: String
}

"""
The `BigInt` scalar type represents non-fractional signed whole numeric values.
"""
scalar BigInt

input BigIntFieldUpdateOperationsInput {
  decrement: BigInt
  divide: BigInt
  increment: BigInt
  multiply: BigInt
  set: BigInt
}

input BigIntFilter {
  equals: BigInt
  gt: BigInt
  gte: BigInt
  in: [BigInt!]
  lt: BigInt
  lte: BigInt
  not: NestedBigIntFilter
  notIn: [BigInt!]
}

input BigIntNullableFilter {
  equals: BigInt
  gt: BigInt
  gte: BigInt
  in: [BigInt!]
  lt: BigInt
  lte: BigInt
  not: NestedBigIntNullableFilter
  notIn: [BigInt!]
}

input BigIntNullableWithAggregatesFilter {
  _avg: NestedFloatNullableFilter
  _count: NestedIntNullableFilter
  _max: NestedBigIntNullableFilter
  _min: NestedBigIntNullableFilter
  _sum: NestedBigIntNullableFilter
  equals: BigInt
  gt: BigInt
  gte: BigInt
  in: [BigInt!]
  lt: BigInt
  lte: BigInt
  not: NestedBigIntNullableWithAggregatesFilter
  notIn: [BigInt!]
}

input BigIntWithAggregatesFilter {
  _avg: NestedFloatFilter
  _count: NestedIntFilter
  _max: NestedBigIntFilter
  _min: NestedBigIntFilter
  _sum: NestedBigIntFilter
  equals: BigInt
  gt: BigInt
  gte: BigInt
  in: [BigInt!]
  lt: BigInt
  lte: BigInt
  not: NestedBigIntWithAggregatesFilter
  notIn: [BigInt!]
}

input BoolFieldUpdateOperationsInput {
  set: Boolean
}

input BoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input BoolNullableFilter {
  equals: Boolean
  not: NestedBoolNullableFilter
}

input BoolNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedBoolNullableFilter
  _min: NestedBoolNullableFilter
  equals: Boolean
  not: NestedBoolNullableWithAggregatesFilter
}

input BoolWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedBoolFilter
  _min: NestedBoolFilter
  equals: Boolean
  not: NestedBoolWithAggregatesFilter
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

input DateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input DateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input DateTimeNullableFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableFilter
  notIn: [DateTime!]
}

input DateTimeNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedDateTimeNullableFilter
  _min: NestedDateTimeNullableFilter
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableWithAggregatesFilter
  notIn: [DateTime!]
}

input DateTimeWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedDateTimeFilter
  _min: NestedDateTimeFilter
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeWithAggregatesFilter
  notIn: [DateTime!]
}

"""
GraphQL Scalar representing the Prisma.Decimal type, based on Decimal.js library.
"""
scalar Decimal

input DecimalFieldUpdateOperationsInput {
  decrement: Decimal
  divide: Decimal
  increment: Decimal
  multiply: Decimal
  set: Decimal
}

input DecimalFilter {
  equals: Decimal
  gt: Decimal
  gte: Decimal
  in: [Decimal!]
  lt: Decimal
  lte: Decimal
  not: NestedDecimalFilter
  notIn: [Decimal!]
}

input DecimalNullableFilter {
  equals: Decimal
  gt: Decimal
  gte: Decimal
  in: [Decimal!]
  lt: Decimal
  lte: Decimal
  not: NestedDecimalNullableFilter
  notIn: [Decimal!]
}

input DecimalNullableWithAggregatesFilter {
  _avg: NestedDecimalNullableFilter
  _count: NestedIntNullableFilter
  _max: NestedDecimalNullableFilter
  _min: NestedDecimalNullableFilter
  _sum: NestedDecimalNullableFilter
  equals: Decimal
  gt: Decimal
  gte: Decimal
  in: [Decimal!]
  lt: Decimal
  lte: Decimal
  not: NestedDecimalNullableWithAggregatesFilter
  notIn: [Decimal!]
}

input DecimalWithAggregatesFilter {
  _avg: NestedDecimalFilter
  _count: NestedIntFilter
  _max: NestedDecimalFilter
  _min: NestedDecimalFilter
  _sum: NestedDecimalFilter
  equals: Decimal
  gt: Decimal
  gte: Decimal
  in: [Decimal!]
  lt: Decimal
  lte: Decimal
  not: NestedDecimalWithAggregatesFilter
  notIn: [Decimal!]
}

type Events {
  _count: EventsCount
  blockNumber: BigInt!
  createdAt: DateTime
  data: String
  id: Int!
  name: String!
  note: String
  processedAt: DateTime
  section: String!
  skipped: Boolean!
  stakePoolActivities(cursor: StakePoolActivitiesWhereUniqueInput, distinct: [StakePoolActivitiesScalarFieldEnum!], orderBy: [StakePoolActivitiesOrderByWithRelationInput!], skip: Int, take: Int, where: StakePoolActivitiesWhereInput): [StakePoolActivities!]!
  stakePoolStakerActivities(cursor: StakePoolStakerActivitiesWhereUniqueInput, distinct: [StakePoolStakerActivitiesScalarFieldEnum!], orderBy: [StakePoolStakerActivitiesOrderByWithRelationInput!], skip: Int, take: Int, where: StakePoolStakerActivitiesWhereInput): [StakePoolStakerActivities!]!
  timestamp: DateTime!
  tokenomicVersion: Int!
  workerActivities(cursor: WorkerActivitiesWhereUniqueInput, distinct: [WorkerActivitiesScalarFieldEnum!], orderBy: [WorkerActivitiesOrderByWithRelationInput!], skip: Int, take: Int, where: WorkerActivitiesWhereInput): [WorkerActivities!]!
}

type EventsAvgAggregate {
  blockNumber: Float
  id: Float
  tokenomicVersion: Float
}

input EventsAvgOrderByAggregateInput {
  blockNumber: SortOrder
  id: SortOrder
  tokenomicVersion: SortOrder
}

type EventsCount {
  stakePoolActivities: Int!
  stakePoolStakerActivities: Int!
  workerActivities: Int!
}

type EventsCountAggregate {
  _all: Int!
  blockNumber: Int!
  createdAt: Int!
  data: Int!
  id: Int!
  name: Int!
  note: Int!
  processedAt: Int!
  section: Int!
  skipped: Int!
  timestamp: Int!
  tokenomicVersion: Int!
}

input EventsCountOrderByAggregateInput {
  blockNumber: SortOrder
  createdAt: SortOrder
  data: SortOrder
  id: SortOrder
  name: SortOrder
  note: SortOrder
  processedAt: SortOrder
  section: SortOrder
  skipped: SortOrder
  timestamp: SortOrder
  tokenomicVersion: SortOrder
}

input EventsCreateInput {
  blockNumber: BigInt!
  createdAt: DateTime
  data: String
  name: String!
  note: String
  processedAt: DateTime
  section: String!
  skipped: Boolean
  stakePoolActivities: StakePoolActivitiesCreateNestedManyWithoutEventsInput
  stakePoolStakerActivities: StakePoolStakerActivitiesCreateNestedManyWithoutEventsInput
  timestamp: DateTime!
  tokenomicVersion: Int!
  workerActivities: WorkerActivitiesCreateNestedManyWithoutEventsInput
}

input EventsCreateOrConnectWithoutStakePoolActivitiesInput {
  create: EventsCreateWithoutStakePoolActivitiesInput!
  where: EventsWhereUniqueInput!
}

input EventsCreateOrConnectWithoutStakePoolStakerActivitiesInput {
  create: EventsCreateWithoutStakePoolStakerActivitiesInput!
  where: EventsWhereUniqueInput!
}

input EventsCreateOrConnectWithoutWorkerActivitiesInput {
  create: EventsCreateWithoutWorkerActivitiesInput!
  where: EventsWhereUniqueInput!
}

input EventsCreateWithoutStakePoolActivitiesInput {
  blockNumber: BigInt!
  createdAt: DateTime
  data: String
  name: String!
  note: String
  processedAt: DateTime
  section: String!
  skipped: Boolean
  stakePoolStakerActivities: StakePoolStakerActivitiesCreateNestedManyWithoutEventsInput
  timestamp: DateTime!
  tokenomicVersion: Int!
  workerActivities: WorkerActivitiesCreateNestedManyWithoutEventsInput
}

input EventsCreateWithoutStakePoolStakerActivitiesInput {
  blockNumber: BigInt!
  createdAt: DateTime
  data: String
  name: String!
  note: String
  processedAt: DateTime
  section: String!
  skipped: Boolean
  stakePoolActivities: StakePoolActivitiesCreateNestedManyWithoutEventsInput
  timestamp: DateTime!
  tokenomicVersion: Int!
  workerActivities: WorkerActivitiesCreateNestedManyWithoutEventsInput
}

input EventsCreateWithoutWorkerActivitiesInput {
  blockNumber: BigInt!
  createdAt: DateTime
  data: String
  name: String!
  note: String
  processedAt: DateTime
  section: String!
  skipped: Boolean
  stakePoolActivities: StakePoolActivitiesCreateNestedManyWithoutEventsInput
  stakePoolStakerActivities: StakePoolStakerActivitiesCreateNestedManyWithoutEventsInput
  timestamp: DateTime!
  tokenomicVersion: Int!
}

type EventsGroupBy {
  _avg: EventsAvgAggregate
  _count: EventsCountAggregate
  _max: EventsMaxAggregate
  _min: EventsMinAggregate
  _sum: EventsSumAggregate
  blockNumber: BigInt!
  createdAt: DateTime
  data: String
  id: Int!
  name: String!
  note: String
  processedAt: DateTime
  section: String!
  skipped: Boolean!
  timestamp: DateTime!
  tokenomicVersion: Int!
}

type EventsMaxAggregate {
  blockNumber: BigInt
  createdAt: DateTime
  data: String
  id: Int
  name: String
  note: String
  processedAt: DateTime
  section: String
  skipped: Boolean
  timestamp: DateTime
  tokenomicVersion: Int
}

input EventsMaxOrderByAggregateInput {
  blockNumber: SortOrder
  createdAt: SortOrder
  data: SortOrder
  id: SortOrder
  name: SortOrder
  note: SortOrder
  processedAt: SortOrder
  section: SortOrder
  skipped: SortOrder
  timestamp: SortOrder
  tokenomicVersion: SortOrder
}

type EventsMinAggregate {
  blockNumber: BigInt
  createdAt: DateTime
  data: String
  id: Int
  name: String
  note: String
  processedAt: DateTime
  section: String
  skipped: Boolean
  timestamp: DateTime
  tokenomicVersion: Int
}

input EventsMinOrderByAggregateInput {
  blockNumber: SortOrder
  createdAt: SortOrder
  data: SortOrder
  id: SortOrder
  name: SortOrder
  note: SortOrder
  processedAt: SortOrder
  section: SortOrder
  skipped: SortOrder
  timestamp: SortOrder
  tokenomicVersion: SortOrder
}

input EventsOrderByWithAggregationInput {
  _avg: EventsAvgOrderByAggregateInput
  _count: EventsCountOrderByAggregateInput
  _max: EventsMaxOrderByAggregateInput
  _min: EventsMinOrderByAggregateInput
  _sum: EventsSumOrderByAggregateInput
  blockNumber: SortOrder
  createdAt: SortOrder
  data: SortOrder
  id: SortOrder
  name: SortOrder
  note: SortOrder
  processedAt: SortOrder
  section: SortOrder
  skipped: SortOrder
  timestamp: SortOrder
  tokenomicVersion: SortOrder
}

input EventsOrderByWithRelationInput {
  blockNumber: SortOrder
  createdAt: SortOrder
  data: SortOrder
  id: SortOrder
  name: SortOrder
  note: SortOrder
  processedAt: SortOrder
  section: SortOrder
  skipped: SortOrder
  stakePoolActivities: StakePoolActivitiesOrderByRelationAggregateInput
  stakePoolStakerActivities: StakePoolStakerActivitiesOrderByRelationAggregateInput
  timestamp: SortOrder
  tokenomicVersion: SortOrder
  workerActivities: WorkerActivitiesOrderByRelationAggregateInput
}

input EventsRelationFilter {
  is: EventsWhereInput
  isNot: EventsWhereInput
}

enum EventsScalarFieldEnum {
  blockNumber
  createdAt
  data
  id
  name
  note
  processedAt
  section
  skipped
  timestamp
  tokenomicVersion
}

input EventsScalarWhereWithAggregatesInput {
  AND: [EventsScalarWhereWithAggregatesInput!]
  NOT: [EventsScalarWhereWithAggregatesInput!]
  OR: [EventsScalarWhereWithAggregatesInput!]
  blockNumber: BigIntWithAggregatesFilter
  createdAt: DateTimeNullableWithAggregatesFilter
  data: StringNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  name: StringWithAggregatesFilter
  note: StringNullableWithAggregatesFilter
  processedAt: DateTimeNullableWithAggregatesFilter
  section: StringWithAggregatesFilter
  skipped: BoolWithAggregatesFilter
  timestamp: DateTimeWithAggregatesFilter
  tokenomicVersion: IntWithAggregatesFilter
}

type EventsSumAggregate {
  blockNumber: BigInt
  id: Int
  tokenomicVersion: Int
}

input EventsSumOrderByAggregateInput {
  blockNumber: SortOrder
  id: SortOrder
  tokenomicVersion: SortOrder
}

input EventsUpdateInput {
  blockNumber: BigIntFieldUpdateOperationsInput
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  data: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  note: NullableStringFieldUpdateOperationsInput
  processedAt: NullableDateTimeFieldUpdateOperationsInput
  section: StringFieldUpdateOperationsInput
  skipped: BoolFieldUpdateOperationsInput
  stakePoolActivities: StakePoolActivitiesUpdateManyWithoutEventsInput
  stakePoolStakerActivities: StakePoolStakerActivitiesUpdateManyWithoutEventsInput
  timestamp: DateTimeFieldUpdateOperationsInput
  tokenomicVersion: IntFieldUpdateOperationsInput
  workerActivities: WorkerActivitiesUpdateManyWithoutEventsInput
}

input EventsUpdateManyMutationInput {
  blockNumber: BigIntFieldUpdateOperationsInput
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  data: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  note: NullableStringFieldUpdateOperationsInput
  processedAt: NullableDateTimeFieldUpdateOperationsInput
  section: StringFieldUpdateOperationsInput
  skipped: BoolFieldUpdateOperationsInput
  timestamp: DateTimeFieldUpdateOperationsInput
  tokenomicVersion: IntFieldUpdateOperationsInput
}

input EventsUpdateOneWithoutStakePoolActivitiesInput {
  connect: EventsWhereUniqueInput
  connectOrCreate: EventsCreateOrConnectWithoutStakePoolActivitiesInput
  create: EventsCreateWithoutStakePoolActivitiesInput
  delete: Boolean
  disconnect: Boolean
  update: EventsUpdateWithoutStakePoolActivitiesInput
  upsert: EventsUpsertWithoutStakePoolActivitiesInput
}

input EventsUpdateOneWithoutStakePoolStakerActivitiesInput {
  connect: EventsWhereUniqueInput
  connectOrCreate: EventsCreateOrConnectWithoutStakePoolStakerActivitiesInput
  create: EventsCreateWithoutStakePoolStakerActivitiesInput
  delete: Boolean
  disconnect: Boolean
  update: EventsUpdateWithoutStakePoolStakerActivitiesInput
  upsert: EventsUpsertWithoutStakePoolStakerActivitiesInput
}

input EventsUpdateOneWithoutWorkerActivitiesInput {
  connect: EventsWhereUniqueInput
  connectOrCreate: EventsCreateOrConnectWithoutWorkerActivitiesInput
  create: EventsCreateWithoutWorkerActivitiesInput
  delete: Boolean
  disconnect: Boolean
  update: EventsUpdateWithoutWorkerActivitiesInput
  upsert: EventsUpsertWithoutWorkerActivitiesInput
}

input EventsUpdateWithoutStakePoolActivitiesInput {
  blockNumber: BigIntFieldUpdateOperationsInput
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  data: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  note: NullableStringFieldUpdateOperationsInput
  processedAt: NullableDateTimeFieldUpdateOperationsInput
  section: StringFieldUpdateOperationsInput
  skipped: BoolFieldUpdateOperationsInput
  stakePoolStakerActivities: StakePoolStakerActivitiesUpdateManyWithoutEventsInput
  timestamp: DateTimeFieldUpdateOperationsInput
  tokenomicVersion: IntFieldUpdateOperationsInput
  workerActivities: WorkerActivitiesUpdateManyWithoutEventsInput
}

input EventsUpdateWithoutStakePoolStakerActivitiesInput {
  blockNumber: BigIntFieldUpdateOperationsInput
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  data: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  note: NullableStringFieldUpdateOperationsInput
  processedAt: NullableDateTimeFieldUpdateOperationsInput
  section: StringFieldUpdateOperationsInput
  skipped: BoolFieldUpdateOperationsInput
  stakePoolActivities: StakePoolActivitiesUpdateManyWithoutEventsInput
  timestamp: DateTimeFieldUpdateOperationsInput
  tokenomicVersion: IntFieldUpdateOperationsInput
  workerActivities: WorkerActivitiesUpdateManyWithoutEventsInput
}

input EventsUpdateWithoutWorkerActivitiesInput {
  blockNumber: BigIntFieldUpdateOperationsInput
  createdAt: NullableDateTimeFieldUpdateOperationsInput
  data: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  note: NullableStringFieldUpdateOperationsInput
  processedAt: NullableDateTimeFieldUpdateOperationsInput
  section: StringFieldUpdateOperationsInput
  skipped: BoolFieldUpdateOperationsInput
  stakePoolActivities: StakePoolActivitiesUpdateManyWithoutEventsInput
  stakePoolStakerActivities: StakePoolStakerActivitiesUpdateManyWithoutEventsInput
  timestamp: DateTimeFieldUpdateOperationsInput
  tokenomicVersion: IntFieldUpdateOperationsInput
}

input EventsUpsertWithoutStakePoolActivitiesInput {
  create: EventsCreateWithoutStakePoolActivitiesInput!
  update: EventsUpdateWithoutStakePoolActivitiesInput!
}

input EventsUpsertWithoutStakePoolStakerActivitiesInput {
  create: EventsCreateWithoutStakePoolStakerActivitiesInput!
  update: EventsUpdateWithoutStakePoolStakerActivitiesInput!
}

input EventsUpsertWithoutWorkerActivitiesInput {
  create: EventsCreateWithoutWorkerActivitiesInput!
  update: EventsUpdateWithoutWorkerActivitiesInput!
}

input EventsWhereInput {
  AND: [EventsWhereInput!]
  NOT: [EventsWhereInput!]
  OR: [EventsWhereInput!]
  blockNumber: BigIntFilter
  createdAt: DateTimeNullableFilter
  data: StringNullableFilter
  id: IntFilter
  name: StringFilter
  note: StringNullableFilter
  processedAt: DateTimeNullableFilter
  section: StringFilter
  skipped: BoolFilter
  stakePoolActivities: StakePoolActivitiesListRelationFilter
  stakePoolStakerActivities: StakePoolStakerActivitiesListRelationFilter
  timestamp: DateTimeFilter
  tokenomicVersion: IntFilter
  workerActivities: WorkerActivitiesListRelationFilter
}

input EventsWhereUniqueInput {
  id: Int
}

input IntFieldUpdateOperationsInput {
  decrement: Int
  divide: Int
  increment: Int
  multiply: Int
  set: Int
}

input IntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input IntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

input IntNullableWithAggregatesFilter {
  _avg: NestedFloatNullableFilter
  _count: NestedIntNullableFilter
  _max: NestedIntNullableFilter
  _min: NestedIntNullableFilter
  _sum: NestedIntNullableFilter
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableWithAggregatesFilter
  notIn: [Int!]
}

input IntWithAggregatesFilter {
  _avg: NestedFloatFilter
  _count: NestedIntFilter
  _max: NestedIntFilter
  _min: NestedIntFilter
  _sum: NestedIntFilter
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntWithAggregatesFilter
  notIn: [Int!]
}

type Miners {
  address: String!
  id: Int!
  lastUpdatedBlockNumber: BigInt!
  lastUpdatedTimestamp: DateTime!
  pInit: Int!
  pInstant: Int!
  share: Decimal!
  stakePoolId: Int
  stakePools: StakePools
  state: String!
  totalReward: Decimal!
  v: Decimal!
  ve: Decimal!
  workerId: Int!
  workers: Workers!
}

type MinersAvgAggregate {
  id: Float
  lastUpdatedBlockNumber: Float
  pInit: Float
  pInstant: Float
  share: Decimal
  stakePoolId: Float
  totalReward: Decimal
  v: Decimal
  ve: Decimal
  workerId: Float
}

input MinersAvgOrderByAggregateInput {
  id: SortOrder
  lastUpdatedBlockNumber: SortOrder
  pInit: SortOrder
  pInstant: SortOrder
  share: SortOrder
  stakePoolId: SortOrder
  totalReward: SortOrder
  v: SortOrder
  ve: SortOrder
  workerId: SortOrder
}

type MinersCountAggregate {
  _all: Int!
  address: Int!
  id: Int!
  lastUpdatedBlockNumber: Int!
  lastUpdatedTimestamp: Int!
  pInit: Int!
  pInstant: Int!
  share: Int!
  stakePoolId: Int!
  state: Int!
  totalReward: Int!
  v: Int!
  ve: Int!
  workerId: Int!
}

input MinersCountOrderByAggregateInput {
  address: SortOrder
  id: SortOrder
  lastUpdatedBlockNumber: SortOrder
  lastUpdatedTimestamp: SortOrder
  pInit: SortOrder
  pInstant: SortOrder
  share: SortOrder
  stakePoolId: SortOrder
  state: SortOrder
  totalReward: SortOrder
  v: SortOrder
  ve: SortOrder
  workerId: SortOrder
}

type MinersGroupBy {
  _avg: MinersAvgAggregate
  _count: MinersCountAggregate
  _max: MinersMaxAggregate
  _min: MinersMinAggregate
  _sum: MinersSumAggregate
  address: String!
  id: Int!
  lastUpdatedBlockNumber: BigInt!
  lastUpdatedTimestamp: DateTime!
  pInit: Int!
  pInstant: Int!
  share: Decimal!
  stakePoolId: Int
  state: String!
  totalReward: Decimal!
  v: Decimal!
  ve: Decimal!
  workerId: Int!
}

input MinersListRelationFilter {
  every: MinersWhereInput
  none: MinersWhereInput
  some: MinersWhereInput
}

type MinersMaxAggregate {
  address: String
  id: Int
  lastUpdatedBlockNumber: BigInt
  lastUpdatedTimestamp: DateTime
  pInit: Int
  pInstant: Int
  share: Decimal
  stakePoolId: Int
  state: String
  totalReward: Decimal
  v: Decimal
  ve: Decimal
  workerId: Int
}

input MinersMaxOrderByAggregateInput {
  address: SortOrder
  id: SortOrder
  lastUpdatedBlockNumber: SortOrder
  lastUpdatedTimestamp: SortOrder
  pInit: SortOrder
  pInstant: SortOrder
  share: SortOrder
  stakePoolId: SortOrder
  state: SortOrder
  totalReward: SortOrder
  v: SortOrder
  ve: SortOrder
  workerId: SortOrder
}

type MinersMinAggregate {
  address: String
  id: Int
  lastUpdatedBlockNumber: BigInt
  lastUpdatedTimestamp: DateTime
  pInit: Int
  pInstant: Int
  share: Decimal
  stakePoolId: Int
  state: String
  totalReward: Decimal
  v: Decimal
  ve: Decimal
  workerId: Int
}

input MinersMinOrderByAggregateInput {
  address: SortOrder
  id: SortOrder
  lastUpdatedBlockNumber: SortOrder
  lastUpdatedTimestamp: SortOrder
  pInit: SortOrder
  pInstant: SortOrder
  share: SortOrder
  stakePoolId: SortOrder
  state: SortOrder
  totalReward: SortOrder
  v: SortOrder
  ve: SortOrder
  workerId: SortOrder
}

input MinersOrderByRelationAggregateInput {
  _count: SortOrder
}

input MinersOrderByWithAggregationInput {
  _avg: MinersAvgOrderByAggregateInput
  _count: MinersCountOrderByAggregateInput
  _max: MinersMaxOrderByAggregateInput
  _min: MinersMinOrderByAggregateInput
  _sum: MinersSumOrderByAggregateInput
  address: SortOrder
  id: SortOrder
  lastUpdatedBlockNumber: SortOrder
  lastUpdatedTimestamp: SortOrder
  pInit: SortOrder
  pInstant: SortOrder
  share: SortOrder
  stakePoolId: SortOrder
  state: SortOrder
  totalReward: SortOrder
  v: SortOrder
  ve: SortOrder
  workerId: SortOrder
}

input MinersOrderByWithRelationInput {
  address: SortOrder
  id: SortOrder
  lastUpdatedBlockNumber: SortOrder
  lastUpdatedTimestamp: SortOrder
  pInit: SortOrder
  pInstant: SortOrder
  share: SortOrder
  stakePoolId: SortOrder
  stakePools: StakePoolsOrderByWithRelationInput
  state: SortOrder
  totalReward: SortOrder
  v: SortOrder
  ve: SortOrder
  workerId: SortOrder
  workers: WorkersOrderByWithRelationInput
}

enum MinersScalarFieldEnum {
  address
  id
  lastUpdatedBlockNumber
  lastUpdatedTimestamp
  pInit
  pInstant
  share
  stakePoolId
  state
  totalReward
  v
  ve
  workerId
}

input MinersScalarWhereInput {
  AND: [MinersScalarWhereInput!]
  NOT: [MinersScalarWhereInput!]
  OR: [MinersScalarWhereInput!]
  address: StringFilter
  id: IntFilter
  lastUpdatedBlockNumber: BigIntFilter
  lastUpdatedTimestamp: DateTimeFilter
  pInit: IntFilter
  pInstant: IntFilter
  share: DecimalFilter
  stakePoolId: IntNullableFilter
  state: StringFilter
  totalReward: DecimalFilter
  v: DecimalFilter
  ve: DecimalFilter
  workerId: IntFilter
}

input MinersScalarWhereWithAggregatesInput {
  AND: [MinersScalarWhereWithAggregatesInput!]
  NOT: [MinersScalarWhereWithAggregatesInput!]
  OR: [MinersScalarWhereWithAggregatesInput!]
  address: StringWithAggregatesFilter
  id: IntWithAggregatesFilter
  lastUpdatedBlockNumber: BigIntWithAggregatesFilter
  lastUpdatedTimestamp: DateTimeWithAggregatesFilter
  pInit: IntWithAggregatesFilter
  pInstant: IntWithAggregatesFilter
  share: DecimalWithAggregatesFilter
  stakePoolId: IntNullableWithAggregatesFilter
  state: StringWithAggregatesFilter
  totalReward: DecimalWithAggregatesFilter
  v: DecimalWithAggregatesFilter
  ve: DecimalWithAggregatesFilter
  workerId: IntWithAggregatesFilter
}

type MinersSumAggregate {
  id: Int
  lastUpdatedBlockNumber: BigInt
  pInit: Int
  pInstant: Int
  share: Decimal
  stakePoolId: Int
  totalReward: Decimal
  v: Decimal
  ve: Decimal
  workerId: Int
}

input MinersSumOrderByAggregateInput {
  id: SortOrder
  lastUpdatedBlockNumber: SortOrder
  pInit: SortOrder
  pInstant: SortOrder
  share: SortOrder
  stakePoolId: SortOrder
  totalReward: SortOrder
  v: SortOrder
  ve: SortOrder
  workerId: SortOrder
}

input MinersUpdateInput {
  address: StringFieldUpdateOperationsInput
  lastUpdatedBlockNumber: BigIntFieldUpdateOperationsInput
  lastUpdatedTimestamp: DateTimeFieldUpdateOperationsInput
  pInit: IntFieldUpdateOperationsInput
  pInstant: IntFieldUpdateOperationsInput
  share: DecimalFieldUpdateOperationsInput
  stakePools: StakePoolsUpdateOneWithoutMinersInput
  state: StringFieldUpdateOperationsInput
  totalReward: DecimalFieldUpdateOperationsInput
  v: DecimalFieldUpdateOperationsInput
  ve: DecimalFieldUpdateOperationsInput
  workers: WorkersUpdateOneRequiredWithoutMinersInput
}

input MinersUpdateManyMutationInput {
  address: StringFieldUpdateOperationsInput
  lastUpdatedBlockNumber: BigIntFieldUpdateOperationsInput
  lastUpdatedTimestamp: DateTimeFieldUpdateOperationsInput
  pInit: IntFieldUpdateOperationsInput
  pInstant: IntFieldUpdateOperationsInput
  share: DecimalFieldUpdateOperationsInput
  state: StringFieldUpdateOperationsInput
  totalReward: DecimalFieldUpdateOperationsInput
  v: DecimalFieldUpdateOperationsInput
  ve: DecimalFieldUpdateOperationsInput
}

input MinersUpdateManyWithWhereWithoutStakePoolsInput {
  data: MinersUpdateManyMutationInput!
  where: MinersScalarWhereInput!
}

input MinersUpdateManyWithWhereWithoutWorkersInput {
  data: MinersUpdateManyMutationInput!
  where: MinersScalarWhereInput!
}

input MinersUpdateManyWithoutStakePoolsInput {
  connect: [MinersWhereUniqueInput!]
  delete: [MinersWhereUniqueInput!]
  deleteMany: [MinersScalarWhereInput!]
  disconnect: [MinersWhereUniqueInput!]
  set: [MinersWhereUniqueInput!]
  update: [MinersUpdateWithWhereUniqueWithoutStakePoolsInput!]
  updateMany: [MinersUpdateManyWithWhereWithoutStakePoolsInput!]
}

input MinersUpdateManyWithoutWorkersInput {
  connect: [MinersWhereUniqueInput!]
  delete: [MinersWhereUniqueInput!]
  deleteMany: [MinersScalarWhereInput!]
  disconnect: [MinersWhereUniqueInput!]
  set: [MinersWhereUniqueInput!]
  update: [MinersUpdateWithWhereUniqueWithoutWorkersInput!]
  updateMany: [MinersUpdateManyWithWhereWithoutWorkersInput!]
}

input MinersUpdateWithWhereUniqueWithoutStakePoolsInput {
  data: MinersUpdateWithoutStakePoolsInput!
  where: MinersWhereUniqueInput!
}

input MinersUpdateWithWhereUniqueWithoutWorkersInput {
  data: MinersUpdateWithoutWorkersInput!
  where: MinersWhereUniqueInput!
}

input MinersUpdateWithoutStakePoolsInput {
  address: StringFieldUpdateOperationsInput
  lastUpdatedBlockNumber: BigIntFieldUpdateOperationsInput
  lastUpdatedTimestamp: DateTimeFieldUpdateOperationsInput
  pInit: IntFieldUpdateOperationsInput
  pInstant: IntFieldUpdateOperationsInput
  share: DecimalFieldUpdateOperationsInput
  state: StringFieldUpdateOperationsInput
  totalReward: DecimalFieldUpdateOperationsInput
  v: DecimalFieldUpdateOperationsInput
  ve: DecimalFieldUpdateOperationsInput
  workers: WorkersUpdateOneRequiredWithoutMinersInput
}

input MinersUpdateWithoutWorkersInput {
  address: StringFieldUpdateOperationsInput
  lastUpdatedBlockNumber: BigIntFieldUpdateOperationsInput
  lastUpdatedTimestamp: DateTimeFieldUpdateOperationsInput
  pInit: IntFieldUpdateOperationsInput
  pInstant: IntFieldUpdateOperationsInput
  share: DecimalFieldUpdateOperationsInput
  stakePools: StakePoolsUpdateOneWithoutMinersInput
  state: StringFieldUpdateOperationsInput
  totalReward: DecimalFieldUpdateOperationsInput
  v: DecimalFieldUpdateOperationsInput
  ve: DecimalFieldUpdateOperationsInput
}

input MinersWhereInput {
  AND: [MinersWhereInput!]
  NOT: [MinersWhereInput!]
  OR: [MinersWhereInput!]
  address: StringFilter
  id: IntFilter
  lastUpdatedBlockNumber: BigIntFilter
  lastUpdatedTimestamp: DateTimeFilter
  pInit: IntFilter
  pInstant: IntFilter
  share: DecimalFilter
  stakePoolId: IntNullableFilter
  stakePools: StakePoolsRelationFilter
  state: StringFilter
  totalReward: DecimalFilter
  v: DecimalFilter
  ve: DecimalFilter
  workerId: IntFilter
  workers: WorkersRelationFilter
}

input MinersWhereUniqueInput {
  address: String
  id: Int
}

type Mutation {
  createEvents(data: EventsCreateInput!): Events!
  createSchemaMigrations(data: SchemaMigrationsCreateInput!): SchemaMigrations!
  deleteAccounts(where: AccountsWhereUniqueInput!): Accounts
  deleteArInternalMetadata(where: ArInternalMetadataWhereUniqueInput!): ArInternalMetadata
  deleteEvents(where: EventsWhereUniqueInput!): Events
  deleteManyAccounts(where: AccountsWhereInput): AffectedRowsOutput!
  deleteManyArInternalMetadata(where: ArInternalMetadataWhereInput): AffectedRowsOutput!
  deleteManyEvents(where: EventsWhereInput): AffectedRowsOutput!
  deleteManyMiners(where: MinersWhereInput): AffectedRowsOutput!
  deleteManySchemaMigrations(where: SchemaMigrationsWhereInput): AffectedRowsOutput!
  deleteManyStakePoolActivities(where: StakePoolActivitiesWhereInput): AffectedRowsOutput!
  deleteManyStakePoolStakerActivities(where: StakePoolStakerActivitiesWhereInput): AffectedRowsOutput!
  deleteManyStakePoolStakers(where: StakePoolStakersWhereInput): AffectedRowsOutput!
  deleteManyStakePools(where: StakePoolsWhereInput): AffectedRowsOutput!
  deleteManyStates(where: StatesWhereInput): AffectedRowsOutput!
  deleteManyWorkerActivities(where: WorkerActivitiesWhereInput): AffectedRowsOutput!
  deleteManyWorkers(where: WorkersWhereInput): AffectedRowsOutput!
  deleteMiners(where: MinersWhereUniqueInput!): Miners
  deleteSchemaMigrations(where: SchemaMigrationsWhereUniqueInput!): SchemaMigrations
  deleteStakePoolActivities(where: StakePoolActivitiesWhereUniqueInput!): StakePoolActivities
  deleteStakePoolStakerActivities(where: StakePoolStakerActivitiesWhereUniqueInput!): StakePoolStakerActivities
  deleteStakePoolStakers(where: StakePoolStakersWhereUniqueInput!): StakePoolStakers
  deleteStakePools(where: StakePoolsWhereUniqueInput!): StakePools
  deleteStates(where: StatesWhereUniqueInput!): States
  deleteWorkerActivities(where: WorkerActivitiesWhereUniqueInput!): WorkerActivities
  deleteWorkers(where: WorkersWhereUniqueInput!): Workers
  updateAccounts(data: AccountsUpdateInput!, where: AccountsWhereUniqueInput!): Accounts
  updateArInternalMetadata(data: ArInternalMetadataUpdateInput!, where: ArInternalMetadataWhereUniqueInput!): ArInternalMetadata
  updateEvents(data: EventsUpdateInput!, where: EventsWhereUniqueInput!): Events
  updateManyAccounts(data: AccountsUpdateManyMutationInput!, where: AccountsWhereInput): AffectedRowsOutput!
  updateManyArInternalMetadata(data: ArInternalMetadataUpdateManyMutationInput!, where: ArInternalMetadataWhereInput): AffectedRowsOutput!
  updateManyEvents(data: EventsUpdateManyMutationInput!, where: EventsWhereInput): AffectedRowsOutput!
  updateManyMiners(data: MinersUpdateManyMutationInput!, where: MinersWhereInput): AffectedRowsOutput!
  updateManySchemaMigrations(data: SchemaMigrationsUpdateManyMutationInput!, where: SchemaMigrationsWhereInput): AffectedRowsOutput!
  updateManyStakePoolActivities(data: StakePoolActivitiesUpdateManyMutationInput!, where: StakePoolActivitiesWhereInput): AffectedRowsOutput!
  updateManyStakePoolStakerActivities(data: StakePoolStakerActivitiesUpdateManyMutationInput!, where: StakePoolStakerActivitiesWhereInput): AffectedRowsOutput!
  updateManyStakePoolStakers(data: StakePoolStakersUpdateManyMutationInput!, where: StakePoolStakersWhereInput): AffectedRowsOutput!
  updateManyStakePools(data: StakePoolsUpdateManyMutationInput!, where: StakePoolsWhereInput): AffectedRowsOutput!
  updateManyStates(data: StatesUpdateManyMutationInput!, where: StatesWhereInput): AffectedRowsOutput!
  updateManyWorkerActivities(data: WorkerActivitiesUpdateManyMutationInput!, where: WorkerActivitiesWhereInput): AffectedRowsOutput!
  updateManyWorkers(data: WorkersUpdateManyMutationInput!, where: WorkersWhereInput): AffectedRowsOutput!
  updateMiners(data: MinersUpdateInput!, where: MinersWhereUniqueInput!): Miners
  updateSchemaMigrations(data: SchemaMigrationsUpdateInput!, where: SchemaMigrationsWhereUniqueInput!): SchemaMigrations
  updateStakePoolActivities(data: StakePoolActivitiesUpdateInput!, where: StakePoolActivitiesWhereUniqueInput!): StakePoolActivities
  updateStakePoolStakerActivities(data: StakePoolStakerActivitiesUpdateInput!, where: StakePoolStakerActivitiesWhereUniqueInput!): StakePoolStakerActivities
  updateStakePoolStakers(data: StakePoolStakersUpdateInput!, where: StakePoolStakersWhereUniqueInput!): StakePoolStakers
  updateStakePools(data: StakePoolsUpdateInput!, where: StakePoolsWhereUniqueInput!): StakePools
  updateStates(data: StatesUpdateInput!, where: StatesWhereUniqueInput!): States
  updateWorkerActivities(data: WorkerActivitiesUpdateInput!, where: WorkerActivitiesWhereUniqueInput!): WorkerActivities
  updateWorkers(data: WorkersUpdateInput!, where: WorkersWhereUniqueInput!): Workers
  upsertEvents(create: EventsCreateInput!, update: EventsUpdateInput!, where: EventsWhereUniqueInput!): Events!
  upsertSchemaMigrations(create: SchemaMigrationsCreateInput!, update: SchemaMigrationsUpdateInput!, where: SchemaMigrationsWhereUniqueInput!): SchemaMigrations!
}

input NestedBigIntFilter {
  equals: BigInt
  gt: BigInt
  gte: BigInt
  in: [BigInt!]
  lt: BigInt
  lte: BigInt
  not: NestedBigIntFilter
  notIn: [BigInt!]
}

input NestedBigIntNullableFilter {
  equals: BigInt
  gt: BigInt
  gte: BigInt
  in: [BigInt!]
  lt: BigInt
  lte: BigInt
  not: NestedBigIntNullableFilter
  notIn: [BigInt!]
}

input NestedBigIntNullableWithAggregatesFilter {
  _avg: NestedFloatNullableFilter
  _count: NestedIntNullableFilter
  _max: NestedBigIntNullableFilter
  _min: NestedBigIntNullableFilter
  _sum: NestedBigIntNullableFilter
  equals: BigInt
  gt: BigInt
  gte: BigInt
  in: [BigInt!]
  lt: BigInt
  lte: BigInt
  not: NestedBigIntNullableWithAggregatesFilter
  notIn: [BigInt!]
}

input NestedBigIntWithAggregatesFilter {
  _avg: NestedFloatFilter
  _count: NestedIntFilter
  _max: NestedBigIntFilter
  _min: NestedBigIntFilter
  _sum: NestedBigIntFilter
  equals: BigInt
  gt: BigInt
  gte: BigInt
  in: [BigInt!]
  lt: BigInt
  lte: BigInt
  not: NestedBigIntWithAggregatesFilter
  notIn: [BigInt!]
}

input NestedBoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input NestedBoolNullableFilter {
  equals: Boolean
  not: NestedBoolNullableFilter
}

input NestedBoolNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedBoolNullableFilter
  _min: NestedBoolNullableFilter
  equals: Boolean
  not: NestedBoolNullableWithAggregatesFilter
}

input NestedBoolWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedBoolFilter
  _min: NestedBoolFilter
  equals: Boolean
  not: NestedBoolWithAggregatesFilter
}

input NestedDateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input NestedDateTimeNullableFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableFilter
  notIn: [DateTime!]
}

input NestedDateTimeNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedDateTimeNullableFilter
  _min: NestedDateTimeNullableFilter
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableWithAggregatesFilter
  notIn: [DateTime!]
}

input NestedDateTimeWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedDateTimeFilter
  _min: NestedDateTimeFilter
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeWithAggregatesFilter
  notIn: [DateTime!]
}

input NestedDecimalFilter {
  equals: Decimal
  gt: Decimal
  gte: Decimal
  in: [Decimal!]
  lt: Decimal
  lte: Decimal
  not: NestedDecimalFilter
  notIn: [Decimal!]
}

input NestedDecimalNullableFilter {
  equals: Decimal
  gt: Decimal
  gte: Decimal
  in: [Decimal!]
  lt: Decimal
  lte: Decimal
  not: NestedDecimalNullableFilter
  notIn: [Decimal!]
}

input NestedDecimalNullableWithAggregatesFilter {
  _avg: NestedDecimalNullableFilter
  _count: NestedIntNullableFilter
  _max: NestedDecimalNullableFilter
  _min: NestedDecimalNullableFilter
  _sum: NestedDecimalNullableFilter
  equals: Decimal
  gt: Decimal
  gte: Decimal
  in: [Decimal!]
  lt: Decimal
  lte: Decimal
  not: NestedDecimalNullableWithAggregatesFilter
  notIn: [Decimal!]
}

input NestedDecimalWithAggregatesFilter {
  _avg: NestedDecimalFilter
  _count: NestedIntFilter
  _max: NestedDecimalFilter
  _min: NestedDecimalFilter
  _sum: NestedDecimalFilter
  equals: Decimal
  gt: Decimal
  gte: Decimal
  in: [Decimal!]
  lt: Decimal
  lte: Decimal
  not: NestedDecimalWithAggregatesFilter
  notIn: [Decimal!]
}

input NestedFloatFilter {
  equals: Float
  gt: Float
  gte: Float
  in: [Float!]
  lt: Float
  lte: Float
  not: NestedFloatFilter
  notIn: [Float!]
}

input NestedFloatNullableFilter {
  equals: Float
  gt: Float
  gte: Float
  in: [Float!]
  lt: Float
  lte: Float
  not: NestedFloatNullableFilter
  notIn: [Float!]
}

input NestedIntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input NestedIntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

input NestedIntNullableWithAggregatesFilter {
  _avg: NestedFloatNullableFilter
  _count: NestedIntNullableFilter
  _max: NestedIntNullableFilter
  _min: NestedIntNullableFilter
  _sum: NestedIntNullableFilter
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableWithAggregatesFilter
  notIn: [Int!]
}

input NestedIntWithAggregatesFilter {
  _avg: NestedFloatFilter
  _count: NestedIntFilter
  _max: NestedIntFilter
  _min: NestedIntFilter
  _sum: NestedIntFilter
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntWithAggregatesFilter
  notIn: [Int!]
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedStringNullableFilter
  _min: NestedStringNullableFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableWithAggregatesFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedStringFilter
  _min: NestedStringFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringWithAggregatesFilter
  notIn: [String!]
  startsWith: String
}

input NullableBigIntFieldUpdateOperationsInput {
  decrement: BigInt
  divide: BigInt
  increment: BigInt
  multiply: BigInt
  set: BigInt
}

input NullableBoolFieldUpdateOperationsInput {
  set: Boolean
}

input NullableDateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input NullableDecimalFieldUpdateOperationsInput {
  decrement: Decimal
  divide: Decimal
  increment: Decimal
  multiply: Decimal
  set: Decimal
}

input NullableIntFieldUpdateOperationsInput {
  decrement: Int
  divide: Int
  increment: Int
  multiply: Int
  set: Int
}

input NullableStringFieldUpdateOperationsInput {
  set: String
}

type Query {
  aggregateAccounts(cursor: AccountsWhereUniqueInput, orderBy: [AccountsOrderByWithRelationInput!], skip: Int, take: Int, where: AccountsWhereInput): AggregateAccounts!
  aggregateArInternalMetadata(cursor: ArInternalMetadataWhereUniqueInput, orderBy: [ArInternalMetadataOrderByWithRelationInput!], skip: Int, take: Int, where: ArInternalMetadataWhereInput): AggregateArInternalMetadata!
  aggregateEvents(cursor: EventsWhereUniqueInput, orderBy: [EventsOrderByWithRelationInput!], skip: Int, take: Int, where: EventsWhereInput): AggregateEvents!
  aggregateMiners(cursor: MinersWhereUniqueInput, orderBy: [MinersOrderByWithRelationInput!], skip: Int, take: Int, where: MinersWhereInput): AggregateMiners!
  aggregateSchemaMigrations(cursor: SchemaMigrationsWhereUniqueInput, orderBy: [SchemaMigrationsOrderByWithRelationInput!], skip: Int, take: Int, where: SchemaMigrationsWhereInput): AggregateSchemaMigrations!
  aggregateStakePoolActivities(cursor: StakePoolActivitiesWhereUniqueInput, orderBy: [StakePoolActivitiesOrderByWithRelationInput!], skip: Int, take: Int, where: StakePoolActivitiesWhereInput): AggregateStakePoolActivities!
  aggregateStakePoolStakerActivities(cursor: StakePoolStakerActivitiesWhereUniqueInput, orderBy: [StakePoolStakerActivitiesOrderByWithRelationInput!], skip: Int, take: Int, where: StakePoolStakerActivitiesWhereInput): AggregateStakePoolStakerActivities!
  aggregateStakePoolStakers(cursor: StakePoolStakersWhereUniqueInput, orderBy: [StakePoolStakersOrderByWithRelationInput!], skip: Int, take: Int, where: StakePoolStakersWhereInput): AggregateStakePoolStakers!
  aggregateStakePools(cursor: StakePoolsWhereUniqueInput, orderBy: [StakePoolsOrderByWithRelationInput!], skip: Int, take: Int, where: StakePoolsWhereInput): AggregateStakePools!
  aggregateStates(cursor: StatesWhereUniqueInput, orderBy: [StatesOrderByWithRelationInput!], skip: Int, take: Int, where: StatesWhereInput): AggregateStates!
  aggregateWorkerActivities(cursor: WorkerActivitiesWhereUniqueInput, orderBy: [WorkerActivitiesOrderByWithRelationInput!], skip: Int, take: Int, where: WorkerActivitiesWhereInput): AggregateWorkerActivities!
  aggregateWorkers(cursor: WorkersWhereUniqueInput, orderBy: [WorkersOrderByWithRelationInput!], skip: Int, take: Int, where: WorkersWhereInput): AggregateWorkers!
  findFirstAccounts(cursor: AccountsWhereUniqueInput, distinct: [AccountsScalarFieldEnum!], orderBy: [AccountsOrderByWithRelationInput!], skip: Int, take: Int, where: AccountsWhereInput): Accounts
  findFirstArInternalMetadata(cursor: ArInternalMetadataWhereUniqueInput, distinct: [ArInternalMetadataScalarFieldEnum!], orderBy: [ArInternalMetadataOrderByWithRelationInput!], skip: Int, take: Int, where: ArInternalMetadataWhereInput): ArInternalMetadata
  findFirstEvents(cursor: EventsWhereUniqueInput, distinct: [EventsScalarFieldEnum!], orderBy: [EventsOrderByWithRelationInput!], skip: Int, take: Int, where: EventsWhereInput): Events
  findFirstMiners(cursor: MinersWhereUniqueInput, distinct: [MinersScalarFieldEnum!], orderBy: [MinersOrderByWithRelationInput!], skip: Int, take: Int, where: MinersWhereInput): Miners
  findFirstSchemaMigrations(cursor: SchemaMigrationsWhereUniqueInput, distinct: [SchemaMigrationsScalarFieldEnum!], orderBy: [SchemaMigrationsOrderByWithRelationInput!], skip: Int, take: Int, where: SchemaMigrationsWhereInput): SchemaMigrations
  findFirstStakePoolActivities(cursor: StakePoolActivitiesWhereUniqueInput, distinct: [StakePoolActivitiesScalarFieldEnum!], orderBy: [StakePoolActivitiesOrderByWithRelationInput!], skip: Int, take: Int, where: StakePoolActivitiesWhereInput): StakePoolActivities
  findFirstStakePoolStakerActivities(cursor: StakePoolStakerActivitiesWhereUniqueInput, distinct: [StakePoolStakerActivitiesScalarFieldEnum!], orderBy: [StakePoolStakerActivitiesOrderByWithRelationInput!], skip: Int, take: Int, where: StakePoolStakerActivitiesWhereInput): StakePoolStakerActivities
  findFirstStakePoolStakers(cursor: StakePoolStakersWhereUniqueInput, distinct: [StakePoolStakersScalarFieldEnum!], orderBy: [StakePoolStakersOrderByWithRelationInput!], skip: Int, take: Int, where: StakePoolStakersWhereInput): StakePoolStakers
  findFirstStakePools(cursor: StakePoolsWhereUniqueInput, distinct: [StakePoolsScalarFieldEnum!], orderBy: [StakePoolsOrderByWithRelationInput!], skip: Int, take: Int, where: StakePoolsWhereInput): StakePools
  findFirstStates(cursor: StatesWhereUniqueInput, distinct: [StatesScalarFieldEnum!], orderBy: [StatesOrderByWithRelationInput!], skip: Int, take: Int, where: StatesWhereInput): States
  findFirstWorkerActivities(cursor: WorkerActivitiesWhereUniqueInput, distinct: [WorkerActivitiesScalarFieldEnum!], orderBy: [WorkerActivitiesOrderByWithRelationInput!], skip: Int, take: Int, where: WorkerActivitiesWhereInput): WorkerActivities
  findFirstWorkers(cursor: WorkersWhereUniqueInput, distinct: [WorkersScalarFieldEnum!], orderBy: [WorkersOrderByWithRelationInput!], skip: Int, take: Int, where: WorkersWhereInput): Workers
  findManyAccounts(cursor: AccountsWhereUniqueInput, distinct: [AccountsScalarFieldEnum!], orderBy: [AccountsOrderByWithRelationInput!], skip: Int, take: Int, where: AccountsWhereInput): [Accounts!]!
  findManyArInternalMetadata(cursor: ArInternalMetadataWhereUniqueInput, distinct: [ArInternalMetadataScalarFieldEnum!], orderBy: [ArInternalMetadataOrderByWithRelationInput!], skip: Int, take: Int, where: ArInternalMetadataWhereInput): [ArInternalMetadata!]!
  findManyEvents(cursor: EventsWhereUniqueInput, distinct: [EventsScalarFieldEnum!], orderBy: [EventsOrderByWithRelationInput!], skip: Int, take: Int, where: EventsWhereInput): [Events!]!
  findManyMiners(cursor: MinersWhereUniqueInput, distinct: [MinersScalarFieldEnum!], orderBy: [MinersOrderByWithRelationInput!], skip: Int, take: Int, where: MinersWhereInput): [Miners!]!
  findManySchemaMigrations(cursor: SchemaMigrationsWhereUniqueInput, distinct: [SchemaMigrationsScalarFieldEnum!], orderBy: [SchemaMigrationsOrderByWithRelationInput!], skip: Int, take: Int, where: SchemaMigrationsWhereInput): [SchemaMigrations!]!
  findManyStakePoolActivities(cursor: StakePoolActivitiesWhereUniqueInput, distinct: [StakePoolActivitiesScalarFieldEnum!], orderBy: [StakePoolActivitiesOrderByWithRelationInput!], skip: Int, take: Int, where: StakePoolActivitiesWhereInput): [StakePoolActivities!]!
  findManyStakePoolStakerActivities(cursor: StakePoolStakerActivitiesWhereUniqueInput, distinct: [StakePoolStakerActivitiesScalarFieldEnum!], orderBy: [StakePoolStakerActivitiesOrderByWithRelationInput!], skip: Int, take: Int, where: StakePoolStakerActivitiesWhereInput): [StakePoolStakerActivities!]!
  findManyStakePoolStakers(cursor: StakePoolStakersWhereUniqueInput, distinct: [StakePoolStakersScalarFieldEnum!], orderBy: [StakePoolStakersOrderByWithRelationInput!], skip: Int, take: Int, where: StakePoolStakersWhereInput): [StakePoolStakers!]!
  findManyStakePools(cursor: StakePoolsWhereUniqueInput, distinct: [StakePoolsScalarFieldEnum!], orderBy: [StakePoolsOrderByWithRelationInput!], skip: Int, take: Int, where: StakePoolsWhereInput): [StakePools!]!
  findManyStates(cursor: StatesWhereUniqueInput, distinct: [StatesScalarFieldEnum!], orderBy: [StatesOrderByWithRelationInput!], skip: Int, take: Int, where: StatesWhereInput): [States!]!
  findManyWorkerActivities(cursor: WorkerActivitiesWhereUniqueInput, distinct: [WorkerActivitiesScalarFieldEnum!], orderBy: [WorkerActivitiesOrderByWithRelationInput!], skip: Int, take: Int, where: WorkerActivitiesWhereInput): [WorkerActivities!]!
  findManyWorkers(cursor: WorkersWhereUniqueInput, distinct: [WorkersScalarFieldEnum!], orderBy: [WorkersOrderByWithRelationInput!], skip: Int, take: Int, where: WorkersWhereInput): [Workers!]!
  findUniqueAccounts(where: AccountsWhereUniqueInput!): Accounts
  findUniqueArInternalMetadata(where: ArInternalMetadataWhereUniqueInput!): ArInternalMetadata
  findUniqueEvents(where: EventsWhereUniqueInput!): Events
  findUniqueMiners(where: MinersWhereUniqueInput!): Miners
  findUniqueSchemaMigrations(where: SchemaMigrationsWhereUniqueInput!): SchemaMigrations
  findUniqueStakePoolActivities(where: StakePoolActivitiesWhereUniqueInput!): StakePoolActivities
  findUniqueStakePoolStakerActivities(where: StakePoolStakerActivitiesWhereUniqueInput!): StakePoolStakerActivities
  findUniqueStakePoolStakers(where: StakePoolStakersWhereUniqueInput!): StakePoolStakers
  findUniqueStakePools(where: StakePoolsWhereUniqueInput!): StakePools
  findUniqueStates(where: StatesWhereUniqueInput!): States
  findUniqueWorkerActivities(where: WorkerActivitiesWhereUniqueInput!): WorkerActivities
  findUniqueWorkers(where: WorkersWhereUniqueInput!): Workers
  groupByAccounts(by: [AccountsScalarFieldEnum!]!, having: AccountsScalarWhereWithAggregatesInput, orderBy: [AccountsOrderByWithAggregationInput!], skip: Int, take: Int, where: AccountsWhereInput): [AccountsGroupBy!]!
  groupByArInternalMetadata(by: [ArInternalMetadataScalarFieldEnum!]!, having: ArInternalMetadataScalarWhereWithAggregatesInput, orderBy: [ArInternalMetadataOrderByWithAggregationInput!], skip: Int, take: Int, where: ArInternalMetadataWhereInput): [ArInternalMetadataGroupBy!]!
  groupByEvents(by: [EventsScalarFieldEnum!]!, having: EventsScalarWhereWithAggregatesInput, orderBy: [EventsOrderByWithAggregationInput!], skip: Int, take: Int, where: EventsWhereInput): [EventsGroupBy!]!
  groupByMiners(by: [MinersScalarFieldEnum!]!, having: MinersScalarWhereWithAggregatesInput, orderBy: [MinersOrderByWithAggregationInput!], skip: Int, take: Int, where: MinersWhereInput): [MinersGroupBy!]!
  groupBySchemaMigrations(by: [SchemaMigrationsScalarFieldEnum!]!, having: SchemaMigrationsScalarWhereWithAggregatesInput, orderBy: [SchemaMigrationsOrderByWithAggregationInput!], skip: Int, take: Int, where: SchemaMigrationsWhereInput): [SchemaMigrationsGroupBy!]!
  groupByStakePoolActivities(by: [StakePoolActivitiesScalarFieldEnum!]!, having: StakePoolActivitiesScalarWhereWithAggregatesInput, orderBy: [StakePoolActivitiesOrderByWithAggregationInput!], skip: Int, take: Int, where: StakePoolActivitiesWhereInput): [StakePoolActivitiesGroupBy!]!
  groupByStakePoolStakerActivities(by: [StakePoolStakerActivitiesScalarFieldEnum!]!, having: StakePoolStakerActivitiesScalarWhereWithAggregatesInput, orderBy: [StakePoolStakerActivitiesOrderByWithAggregationInput!], skip: Int, take: Int, where: StakePoolStakerActivitiesWhereInput): [StakePoolStakerActivitiesGroupBy!]!
  groupByStakePoolStakers(by: [StakePoolStakersScalarFieldEnum!]!, having: StakePoolStakersScalarWhereWithAggregatesInput, orderBy: [StakePoolStakersOrderByWithAggregationInput!], skip: Int, take: Int, where: StakePoolStakersWhereInput): [StakePoolStakersGroupBy!]!
  groupByStakePools(by: [StakePoolsScalarFieldEnum!]!, having: StakePoolsScalarWhereWithAggregatesInput, orderBy: [StakePoolsOrderByWithAggregationInput!], skip: Int, take: Int, where: StakePoolsWhereInput): [StakePoolsGroupBy!]!
  groupByStates(by: [StatesScalarFieldEnum!]!, having: StatesScalarWhereWithAggregatesInput, orderBy: [StatesOrderByWithAggregationInput!], skip: Int, take: Int, where: StatesWhereInput): [StatesGroupBy!]!
  groupByWorkerActivities(by: [WorkerActivitiesScalarFieldEnum!]!, having: WorkerActivitiesScalarWhereWithAggregatesInput, orderBy: [WorkerActivitiesOrderByWithAggregationInput!], skip: Int, take: Int, where: WorkerActivitiesWhereInput): [WorkerActivitiesGroupBy!]!
  groupByWorkers(by: [WorkersScalarFieldEnum!]!, having: WorkersScalarWhereWithAggregatesInput, orderBy: [WorkersOrderByWithAggregationInput!], skip: Int, take: Int, where: WorkersWhereInput): [WorkersGroupBy!]!
}

type SchemaMigrations {
  version: String!
}

type SchemaMigrationsCountAggregate {
  _all: Int!
  version: Int!
}

input SchemaMigrationsCountOrderByAggregateInput {
  version: SortOrder
}

input SchemaMigrationsCreateInput {
  version: String!
}

type SchemaMigrationsGroupBy {
  _count: SchemaMigrationsCountAggregate
  _max: SchemaMigrationsMaxAggregate
  _min: SchemaMigrationsMinAggregate
  version: String!
}

type SchemaMigrationsMaxAggregate {
  version: String
}

input SchemaMigrationsMaxOrderByAggregateInput {
  version: SortOrder
}

type SchemaMigrationsMinAggregate {
  version: String
}

input SchemaMigrationsMinOrderByAggregateInput {
  version: SortOrder
}

input SchemaMigrationsOrderByWithAggregationInput {
  _count: SchemaMigrationsCountOrderByAggregateInput
  _max: SchemaMigrationsMaxOrderByAggregateInput
  _min: SchemaMigrationsMinOrderByAggregateInput
  version: SortOrder
}

input SchemaMigrationsOrderByWithRelationInput {
  version: SortOrder
}

enum SchemaMigrationsScalarFieldEnum {
  version
}

input SchemaMigrationsScalarWhereWithAggregatesInput {
  AND: [SchemaMigrationsScalarWhereWithAggregatesInput!]
  NOT: [SchemaMigrationsScalarWhereWithAggregatesInput!]
  OR: [SchemaMigrationsScalarWhereWithAggregatesInput!]
  version: StringWithAggregatesFilter
}

input SchemaMigrationsUpdateInput {
  version: StringFieldUpdateOperationsInput
}

input SchemaMigrationsUpdateManyMutationInput {
  version: StringFieldUpdateOperationsInput
}

input SchemaMigrationsWhereInput {
  AND: [SchemaMigrationsWhereInput!]
  NOT: [SchemaMigrationsWhereInput!]
  OR: [SchemaMigrationsWhereInput!]
  version: StringFilter
}

input SchemaMigrationsWhereUniqueInput {
  version: String
}

enum SortOrder {
  asc
  desc
}

type StakePoolActivities {
  apr: Decimal!
  blockNumber: BigInt!
  cap: Decimal!
  commission: Decimal!
  commissionRatio: Decimal!
  eventId: Int
  events: Events
  freeStake: Decimal!
  id: Int!
  miningWorkersCount: Int!
  ownerReward: Decimal!
  releasingStake: Decimal!
  rewardAcc: Decimal!
  stakePoolId: Int!
  stakePools: StakePools!
  stakersCount: Int!
  timestamp: DateTime!
  tokenomicVersion: Int!
  totalShares: Decimal!
  totalStake: Decimal!
  type: String!
  usedStake: Decimal!
  workersCount: Int!
}

type StakePoolActivitiesAvgAggregate {
  apr: Decimal
  blockNumber: Float
  cap: Decimal
  commission: Decimal
  commissionRatio: Decimal
  eventId: Float
  freeStake: Decimal
  id: Float
  miningWorkersCount: Float
  ownerReward: Decimal
  releasingStake: Decimal
  rewardAcc: Decimal
  stakePoolId: Float
  stakersCount: Float
  tokenomicVersion: Float
  totalShares: Decimal
  totalStake: Decimal
  usedStake: Decimal
  workersCount: Float
}

input StakePoolActivitiesAvgOrderByAggregateInput {
  apr: SortOrder
  blockNumber: SortOrder
  cap: SortOrder
  commission: SortOrder
  commissionRatio: SortOrder
  eventId: SortOrder
  freeStake: SortOrder
  id: SortOrder
  miningWorkersCount: SortOrder
  ownerReward: SortOrder
  releasingStake: SortOrder
  rewardAcc: SortOrder
  stakePoolId: SortOrder
  stakersCount: SortOrder
  tokenomicVersion: SortOrder
  totalShares: SortOrder
  totalStake: SortOrder
  usedStake: SortOrder
  workersCount: SortOrder
}

type StakePoolActivitiesCountAggregate {
  _all: Int!
  apr: Int!
  blockNumber: Int!
  cap: Int!
  commission: Int!
  commissionRatio: Int!
  eventId: Int!
  freeStake: Int!
  id: Int!
  miningWorkersCount: Int!
  ownerReward: Int!
  releasingStake: Int!
  rewardAcc: Int!
  stakePoolId: Int!
  stakersCount: Int!
  timestamp: Int!
  tokenomicVersion: Int!
  totalShares: Int!
  totalStake: Int!
  type: Int!
  usedStake: Int!
  workersCount: Int!
}

input StakePoolActivitiesCountOrderByAggregateInput {
  apr: SortOrder
  blockNumber: SortOrder
  cap: SortOrder
  commission: SortOrder
  commissionRatio: SortOrder
  eventId: SortOrder
  freeStake: SortOrder
  id: SortOrder
  miningWorkersCount: SortOrder
  ownerReward: SortOrder
  releasingStake: SortOrder
  rewardAcc: SortOrder
  stakePoolId: SortOrder
  stakersCount: SortOrder
  timestamp: SortOrder
  tokenomicVersion: SortOrder
  totalShares: SortOrder
  totalStake: SortOrder
  type: SortOrder
  usedStake: SortOrder
  workersCount: SortOrder
}

input StakePoolActivitiesCreateNestedManyWithoutEventsInput {
  connect: [StakePoolActivitiesWhereUniqueInput!]
}

type StakePoolActivitiesGroupBy {
  _avg: StakePoolActivitiesAvgAggregate
  _count: StakePoolActivitiesCountAggregate
  _max: StakePoolActivitiesMaxAggregate
  _min: StakePoolActivitiesMinAggregate
  _sum: StakePoolActivitiesSumAggregate
  apr: Decimal!
  blockNumber: BigInt!
  cap: Decimal!
  commission: Decimal!
  commissionRatio: Decimal!
  eventId: Int
  freeStake: Decimal!
  id: Int!
  miningWorkersCount: Int!
  ownerReward: Decimal!
  releasingStake: Decimal!
  rewardAcc: Decimal!
  stakePoolId: Int!
  stakersCount: Int!
  timestamp: DateTime!
  tokenomicVersion: Int!
  totalShares: Decimal!
  totalStake: Decimal!
  type: String!
  usedStake: Decimal!
  workersCount: Int!
}

input StakePoolActivitiesListRelationFilter {
  every: StakePoolActivitiesWhereInput
  none: StakePoolActivitiesWhereInput
  some: StakePoolActivitiesWhereInput
}

type StakePoolActivitiesMaxAggregate {
  apr: Decimal
  blockNumber: BigInt
  cap: Decimal
  commission: Decimal
  commissionRatio: Decimal
  eventId: Int
  freeStake: Decimal
  id: Int
  miningWorkersCount: Int
  ownerReward: Decimal
  releasingStake: Decimal
  rewardAcc: Decimal
  stakePoolId: Int
  stakersCount: Int
  timestamp: DateTime
  tokenomicVersion: Int
  totalShares: Decimal
  totalStake: Decimal
  type: String
  usedStake: Decimal
  workersCount: Int
}

input StakePoolActivitiesMaxOrderByAggregateInput {
  apr: SortOrder
  blockNumber: SortOrder
  cap: SortOrder
  commission: SortOrder
  commissionRatio: SortOrder
  eventId: SortOrder
  freeStake: SortOrder
  id: SortOrder
  miningWorkersCount: SortOrder
  ownerReward: SortOrder
  releasingStake: SortOrder
  rewardAcc: SortOrder
  stakePoolId: SortOrder
  stakersCount: SortOrder
  timestamp: SortOrder
  tokenomicVersion: SortOrder
  totalShares: SortOrder
  totalStake: SortOrder
  type: SortOrder
  usedStake: SortOrder
  workersCount: SortOrder
}

type StakePoolActivitiesMinAggregate {
  apr: Decimal
  blockNumber: BigInt
  cap: Decimal
  commission: Decimal
  commissionRatio: Decimal
  eventId: Int
  freeStake: Decimal
  id: Int
  miningWorkersCount: Int
  ownerReward: Decimal
  releasingStake: Decimal
  rewardAcc: Decimal
  stakePoolId: Int
  stakersCount: Int
  timestamp: DateTime
  tokenomicVersion: Int
  totalShares: Decimal
  totalStake: Decimal
  type: String
  usedStake: Decimal
  workersCount: Int
}

input StakePoolActivitiesMinOrderByAggregateInput {
  apr: SortOrder
  blockNumber: SortOrder
  cap: SortOrder
  commission: SortOrder
  commissionRatio: SortOrder
  eventId: SortOrder
  freeStake: SortOrder
  id: SortOrder
  miningWorkersCount: SortOrder
  ownerReward: SortOrder
  releasingStake: SortOrder
  rewardAcc: SortOrder
  stakePoolId: SortOrder
  stakersCount: SortOrder
  timestamp: SortOrder
  tokenomicVersion: SortOrder
  totalShares: SortOrder
  totalStake: SortOrder
  type: SortOrder
  usedStake: SortOrder
  workersCount: SortOrder
}

input StakePoolActivitiesOrderByRelationAggregateInput {
  _count: SortOrder
}

input StakePoolActivitiesOrderByWithAggregationInput {
  _avg: StakePoolActivitiesAvgOrderByAggregateInput
  _count: StakePoolActivitiesCountOrderByAggregateInput
  _max: StakePoolActivitiesMaxOrderByAggregateInput
  _min: StakePoolActivitiesMinOrderByAggregateInput
  _sum: StakePoolActivitiesSumOrderByAggregateInput
  apr: SortOrder
  blockNumber: SortOrder
  cap: SortOrder
  commission: SortOrder
  commissionRatio: SortOrder
  eventId: SortOrder
  freeStake: SortOrder
  id: SortOrder
  miningWorkersCount: SortOrder
  ownerReward: SortOrder
  releasingStake: SortOrder
  rewardAcc: SortOrder
  stakePoolId: SortOrder
  stakersCount: SortOrder
  timestamp: SortOrder
  tokenomicVersion: SortOrder
  totalShares: SortOrder
  totalStake: SortOrder
  type: SortOrder
  usedStake: SortOrder
  workersCount: SortOrder
}

input StakePoolActivitiesOrderByWithRelationInput {
  apr: SortOrder
  blockNumber: SortOrder
  cap: SortOrder
  commission: SortOrder
  commissionRatio: SortOrder
  eventId: SortOrder
  events: EventsOrderByWithRelationInput
  freeStake: SortOrder
  id: SortOrder
  miningWorkersCount: SortOrder
  ownerReward: SortOrder
  releasingStake: SortOrder
  rewardAcc: SortOrder
  stakePoolId: SortOrder
  stakePools: StakePoolsOrderByWithRelationInput
  stakersCount: SortOrder
  timestamp: SortOrder
  tokenomicVersion: SortOrder
  totalShares: SortOrder
  totalStake: SortOrder
  type: SortOrder
  usedStake: SortOrder
  workersCount: SortOrder
}

enum StakePoolActivitiesScalarFieldEnum {
  apr
  blockNumber
  cap
  commission
  commissionRatio
  eventId
  freeStake
  id
  miningWorkersCount
  ownerReward
  releasingStake
  rewardAcc
  stakePoolId
  stakersCount
  timestamp
  tokenomicVersion
  totalShares
  totalStake
  type
  usedStake
  workersCount
}

input StakePoolActivitiesScalarWhereInput {
  AND: [StakePoolActivitiesScalarWhereInput!]
  NOT: [StakePoolActivitiesScalarWhereInput!]
  OR: [StakePoolActivitiesScalarWhereInput!]
  apr: DecimalFilter
  blockNumber: BigIntFilter
  cap: DecimalFilter
  commission: DecimalFilter
  commissionRatio: DecimalFilter
  eventId: IntNullableFilter
  freeStake: DecimalFilter
  id: IntFilter
  miningWorkersCount: IntFilter
  ownerReward: DecimalFilter
  releasingStake: DecimalFilter
  rewardAcc: DecimalFilter
  stakePoolId: IntFilter
  stakersCount: IntFilter
  timestamp: DateTimeFilter
  tokenomicVersion: IntFilter
  totalShares: DecimalFilter
  totalStake: DecimalFilter
  type: StringFilter
  usedStake: DecimalFilter
  workersCount: IntFilter
}

input StakePoolActivitiesScalarWhereWithAggregatesInput {
  AND: [StakePoolActivitiesScalarWhereWithAggregatesInput!]
  NOT: [StakePoolActivitiesScalarWhereWithAggregatesInput!]
  OR: [StakePoolActivitiesScalarWhereWithAggregatesInput!]
  apr: DecimalWithAggregatesFilter
  blockNumber: BigIntWithAggregatesFilter
  cap: DecimalWithAggregatesFilter
  commission: DecimalWithAggregatesFilter
  commissionRatio: DecimalWithAggregatesFilter
  eventId: IntNullableWithAggregatesFilter
  freeStake: DecimalWithAggregatesFilter
  id: IntWithAggregatesFilter
  miningWorkersCount: IntWithAggregatesFilter
  ownerReward: DecimalWithAggregatesFilter
  releasingStake: DecimalWithAggregatesFilter
  rewardAcc: DecimalWithAggregatesFilter
  stakePoolId: IntWithAggregatesFilter
  stakersCount: IntWithAggregatesFilter
  timestamp: DateTimeWithAggregatesFilter
  tokenomicVersion: IntWithAggregatesFilter
  totalShares: DecimalWithAggregatesFilter
  totalStake: DecimalWithAggregatesFilter
  type: StringWithAggregatesFilter
  usedStake: DecimalWithAggregatesFilter
  workersCount: IntWithAggregatesFilter
}

type StakePoolActivitiesSumAggregate {
  apr: Decimal
  blockNumber: BigInt
  cap: Decimal
  commission: Decimal
  commissionRatio: Decimal
  eventId: Int
  freeStake: Decimal
  id: Int
  miningWorkersCount: Int
  ownerReward: Decimal
  releasingStake: Decimal
  rewardAcc: Decimal
  stakePoolId: Int
  stakersCount: Int
  tokenomicVersion: Int
  totalShares: Decimal
  totalStake: Decimal
  usedStake: Decimal
  workersCount: Int
}

input StakePoolActivitiesSumOrderByAggregateInput {
  apr: SortOrder
  blockNumber: SortOrder
  cap: SortOrder
  commission: SortOrder
  commissionRatio: SortOrder
  eventId: SortOrder
  freeStake: SortOrder
  id: SortOrder
  miningWorkersCount: SortOrder
  ownerReward: SortOrder
  releasingStake: SortOrder
  rewardAcc: SortOrder
  stakePoolId: SortOrder
  stakersCount: SortOrder
  tokenomicVersion: SortOrder
  totalShares: SortOrder
  totalStake: SortOrder
  usedStake: SortOrder
  workersCount: SortOrder
}

input StakePoolActivitiesUpdateInput {
  apr: DecimalFieldUpdateOperationsInput
  blockNumber: BigIntFieldUpdateOperationsInput
  cap: DecimalFieldUpdateOperationsInput
  commission: DecimalFieldUpdateOperationsInput
  commissionRatio: DecimalFieldUpdateOperationsInput
  events: EventsUpdateOneWithoutStakePoolActivitiesInput
  freeStake: DecimalFieldUpdateOperationsInput
  miningWorkersCount: IntFieldUpdateOperationsInput
  ownerReward: DecimalFieldUpdateOperationsInput
  releasingStake: DecimalFieldUpdateOperationsInput
  rewardAcc: DecimalFieldUpdateOperationsInput
  stakePools: StakePoolsUpdateOneRequiredWithoutStakePoolActivitiesInput
  stakersCount: IntFieldUpdateOperationsInput
  timestamp: DateTimeFieldUpdateOperationsInput
  tokenomicVersion: IntFieldUpdateOperationsInput
  totalShares: DecimalFieldUpdateOperationsInput
  totalStake: DecimalFieldUpdateOperationsInput
  type: StringFieldUpdateOperationsInput
  usedStake: DecimalFieldUpdateOperationsInput
  workersCount: IntFieldUpdateOperationsInput
}

input StakePoolActivitiesUpdateManyMutationInput {
  apr: DecimalFieldUpdateOperationsInput
  blockNumber: BigIntFieldUpdateOperationsInput
  cap: DecimalFieldUpdateOperationsInput
  commission: DecimalFieldUpdateOperationsInput
  commissionRatio: DecimalFieldUpdateOperationsInput
  freeStake: DecimalFieldUpdateOperationsInput
  miningWorkersCount: IntFieldUpdateOperationsInput
  ownerReward: DecimalFieldUpdateOperationsInput
  releasingStake: DecimalFieldUpdateOperationsInput
  rewardAcc: DecimalFieldUpdateOperationsInput
  stakersCount: IntFieldUpdateOperationsInput
  timestamp: DateTimeFieldUpdateOperationsInput
  tokenomicVersion: IntFieldUpdateOperationsInput
  totalShares: DecimalFieldUpdateOperationsInput
  totalStake: DecimalFieldUpdateOperationsInput
  type: StringFieldUpdateOperationsInput
  usedStake: DecimalFieldUpdateOperationsInput
  workersCount: IntFieldUpdateOperationsInput
}

input StakePoolActivitiesUpdateManyWithWhereWithoutEventsInput {
  data: StakePoolActivitiesUpdateManyMutationInput!
  where: StakePoolActivitiesScalarWhereInput!
}

input StakePoolActivitiesUpdateManyWithWhereWithoutStakePoolsInput {
  data: StakePoolActivitiesUpdateManyMutationInput!
  where: StakePoolActivitiesScalarWhereInput!
}

input StakePoolActivitiesUpdateManyWithoutEventsInput {
  connect: [StakePoolActivitiesWhereUniqueInput!]
  delete: [StakePoolActivitiesWhereUniqueInput!]
  deleteMany: [StakePoolActivitiesScalarWhereInput!]
  disconnect: [StakePoolActivitiesWhereUniqueInput!]
  set: [StakePoolActivitiesWhereUniqueInput!]
  update: [StakePoolActivitiesUpdateWithWhereUniqueWithoutEventsInput!]
  updateMany: [StakePoolActivitiesUpdateManyWithWhereWithoutEventsInput!]
}

input StakePoolActivitiesUpdateManyWithoutStakePoolsInput {
  connect: [StakePoolActivitiesWhereUniqueInput!]
  delete: [StakePoolActivitiesWhereUniqueInput!]
  deleteMany: [StakePoolActivitiesScalarWhereInput!]
  disconnect: [StakePoolActivitiesWhereUniqueInput!]
  set: [StakePoolActivitiesWhereUniqueInput!]
  update: [StakePoolActivitiesUpdateWithWhereUniqueWithoutStakePoolsInput!]
  updateMany: [StakePoolActivitiesUpdateManyWithWhereWithoutStakePoolsInput!]
}

input StakePoolActivitiesUpdateWithWhereUniqueWithoutEventsInput {
  data: StakePoolActivitiesUpdateWithoutEventsInput!
  where: StakePoolActivitiesWhereUniqueInput!
}

input StakePoolActivitiesUpdateWithWhereUniqueWithoutStakePoolsInput {
  data: StakePoolActivitiesUpdateWithoutStakePoolsInput!
  where: StakePoolActivitiesWhereUniqueInput!
}

input StakePoolActivitiesUpdateWithoutEventsInput {
  apr: DecimalFieldUpdateOperationsInput
  blockNumber: BigIntFieldUpdateOperationsInput
  cap: DecimalFieldUpdateOperationsInput
  commission: DecimalFieldUpdateOperationsInput
  commissionRatio: DecimalFieldUpdateOperationsInput
  freeStake: DecimalFieldUpdateOperationsInput
  miningWorkersCount: IntFieldUpdateOperationsInput
  ownerReward: DecimalFieldUpdateOperationsInput
  releasingStake: DecimalFieldUpdateOperationsInput
  rewardAcc: DecimalFieldUpdateOperationsInput
  stakePools: StakePoolsUpdateOneRequiredWithoutStakePoolActivitiesInput
  stakersCount: IntFieldUpdateOperationsInput
  timestamp: DateTimeFieldUpdateOperationsInput
  tokenomicVersion: IntFieldUpdateOperationsInput
  totalShares: DecimalFieldUpdateOperationsInput
  totalStake: DecimalFieldUpdateOperationsInput
  type: StringFieldUpdateOperationsInput
  usedStake: DecimalFieldUpdateOperationsInput
  workersCount: IntFieldUpdateOperationsInput
}

input StakePoolActivitiesUpdateWithoutStakePoolsInput {
  apr: DecimalFieldUpdateOperationsInput
  blockNumber: BigIntFieldUpdateOperationsInput
  cap: DecimalFieldUpdateOperationsInput
  commission: DecimalFieldUpdateOperationsInput
  commissionRatio: DecimalFieldUpdateOperationsInput
  events: EventsUpdateOneWithoutStakePoolActivitiesInput
  freeStake: DecimalFieldUpdateOperationsInput
  miningWorkersCount: IntFieldUpdateOperationsInput
  ownerReward: DecimalFieldUpdateOperationsInput
  releasingStake: DecimalFieldUpdateOperationsInput
  rewardAcc: DecimalFieldUpdateOperationsInput
  stakersCount: IntFieldUpdateOperationsInput
  timestamp: DateTimeFieldUpdateOperationsInput
  tokenomicVersion: IntFieldUpdateOperationsInput
  totalShares: DecimalFieldUpdateOperationsInput
  totalStake: DecimalFieldUpdateOperationsInput
  type: StringFieldUpdateOperationsInput
  usedStake: DecimalFieldUpdateOperationsInput
  workersCount: IntFieldUpdateOperationsInput
}

input StakePoolActivitiesWhereInput {
  AND: [StakePoolActivitiesWhereInput!]
  NOT: [StakePoolActivitiesWhereInput!]
  OR: [StakePoolActivitiesWhereInput!]
  apr: DecimalFilter
  blockNumber: BigIntFilter
  cap: DecimalFilter
  commission: DecimalFilter
  commissionRatio: DecimalFilter
  eventId: IntNullableFilter
  events: EventsRelationFilter
  freeStake: DecimalFilter
  id: IntFilter
  miningWorkersCount: IntFilter
  ownerReward: DecimalFilter
  releasingStake: DecimalFilter
  rewardAcc: DecimalFilter
  stakePoolId: IntFilter
  stakePools: StakePoolsRelationFilter
  stakersCount: IntFilter
  timestamp: DateTimeFilter
  tokenomicVersion: IntFilter
  totalShares: DecimalFilter
  totalStake: DecimalFilter
  type: StringFilter
  usedStake: DecimalFilter
  workersCount: IntFilter
}

input StakePoolActivitiesWhereUniqueInput {
  id: Int
}

type StakePoolStakerActivities {
  availableRewards: Decimal!
  blockNumber: BigInt!
  claimableRewards: Decimal!
  eventId: Int
  events: Events
  id: Int!
  instantClaimableRewards: Decimal!
  locked: Decimal!
  pendingRewards: Decimal!
  rewardDebt: Decimal!
  shares: Decimal!
  stake: Decimal!
  stakePoolStakerId: Int!
  stakePoolStakers: StakePoolStakers!
  stakeRewards: Decimal!
  timestamp: DateTime!
  tokenomicVersion: Int!
  type: String!
}

type StakePoolStakerActivitiesAvgAggregate {
  availableRewards: Decimal
  blockNumber: Float
  claimableRewards: Decimal
  eventId: Float
  id: Float
  instantClaimableRewards: Decimal
  locked: Decimal
  pendingRewards: Decimal
  rewardDebt: Decimal
  shares: Decimal
  stake: Decimal
  stakePoolStakerId: Float
  stakeRewards: Decimal
  tokenomicVersion: Float
}

input StakePoolStakerActivitiesAvgOrderByAggregateInput {
  availableRewards: SortOrder
  blockNumber: SortOrder
  claimableRewards: SortOrder
  eventId: SortOrder
  id: SortOrder
  instantClaimableRewards: SortOrder
  locked: SortOrder
  pendingRewards: SortOrder
  rewardDebt: SortOrder
  shares: SortOrder
  stake: SortOrder
  stakePoolStakerId: SortOrder
  stakeRewards: SortOrder
  tokenomicVersion: SortOrder
}

type StakePoolStakerActivitiesCountAggregate {
  _all: Int!
  availableRewards: Int!
  blockNumber: Int!
  claimableRewards: Int!
  eventId: Int!
  id: Int!
  instantClaimableRewards: Int!
  locked: Int!
  pendingRewards: Int!
  rewardDebt: Int!
  shares: Int!
  stake: Int!
  stakePoolStakerId: Int!
  stakeRewards: Int!
  timestamp: Int!
  tokenomicVersion: Int!
  type: Int!
}

input StakePoolStakerActivitiesCountOrderByAggregateInput {
  availableRewards: SortOrder
  blockNumber: SortOrder
  claimableRewards: SortOrder
  eventId: SortOrder
  id: SortOrder
  instantClaimableRewards: SortOrder
  locked: SortOrder
  pendingRewards: SortOrder
  rewardDebt: SortOrder
  shares: SortOrder
  stake: SortOrder
  stakePoolStakerId: SortOrder
  stakeRewards: SortOrder
  timestamp: SortOrder
  tokenomicVersion: SortOrder
  type: SortOrder
}

input StakePoolStakerActivitiesCreateNestedManyWithoutEventsInput {
  connect: [StakePoolStakerActivitiesWhereUniqueInput!]
}

type StakePoolStakerActivitiesGroupBy {
  _avg: StakePoolStakerActivitiesAvgAggregate
  _count: StakePoolStakerActivitiesCountAggregate
  _max: StakePoolStakerActivitiesMaxAggregate
  _min: StakePoolStakerActivitiesMinAggregate
  _sum: StakePoolStakerActivitiesSumAggregate
  availableRewards: Decimal!
  blockNumber: BigInt!
  claimableRewards: Decimal!
  eventId: Int
  id: Int!
  instantClaimableRewards: Decimal!
  locked: Decimal!
  pendingRewards: Decimal!
  rewardDebt: Decimal!
  shares: Decimal!
  stake: Decimal!
  stakePoolStakerId: Int!
  stakeRewards: Decimal!
  timestamp: DateTime!
  tokenomicVersion: Int!
  type: String!
}

input StakePoolStakerActivitiesListRelationFilter {
  every: StakePoolStakerActivitiesWhereInput
  none: StakePoolStakerActivitiesWhereInput
  some: StakePoolStakerActivitiesWhereInput
}

type StakePoolStakerActivitiesMaxAggregate {
  availableRewards: Decimal
  blockNumber: BigInt
  claimableRewards: Decimal
  eventId: Int
  id: Int
  instantClaimableRewards: Decimal
  locked: Decimal
  pendingRewards: Decimal
  rewardDebt: Decimal
  shares: Decimal
  stake: Decimal
  stakePoolStakerId: Int
  stakeRewards: Decimal
  timestamp: DateTime
  tokenomicVersion: Int
  type: String
}

input StakePoolStakerActivitiesMaxOrderByAggregateInput {
  availableRewards: SortOrder
  blockNumber: SortOrder
  claimableRewards: SortOrder
  eventId: SortOrder
  id: SortOrder
  instantClaimableRewards: SortOrder
  locked: SortOrder
  pendingRewards: SortOrder
  rewardDebt: SortOrder
  shares: SortOrder
  stake: SortOrder
  stakePoolStakerId: SortOrder
  stakeRewards: SortOrder
  timestamp: SortOrder
  tokenomicVersion: SortOrder
  type: SortOrder
}

type StakePoolStakerActivitiesMinAggregate {
  availableRewards: Decimal
  blockNumber: BigInt
  claimableRewards: Decimal
  eventId: Int
  id: Int
  instantClaimableRewards: Decimal
  locked: Decimal
  pendingRewards: Decimal
  rewardDebt: Decimal
  shares: Decimal
  stake: Decimal
  stakePoolStakerId: Int
  stakeRewards: Decimal
  timestamp: DateTime
  tokenomicVersion: Int
  type: String
}

input StakePoolStakerActivitiesMinOrderByAggregateInput {
  availableRewards: SortOrder
  blockNumber: SortOrder
  claimableRewards: SortOrder
  eventId: SortOrder
  id: SortOrder
  instantClaimableRewards: SortOrder
  locked: SortOrder
  pendingRewards: SortOrder
  rewardDebt: SortOrder
  shares: SortOrder
  stake: SortOrder
  stakePoolStakerId: SortOrder
  stakeRewards: SortOrder
  timestamp: SortOrder
  tokenomicVersion: SortOrder
  type: SortOrder
}

input StakePoolStakerActivitiesOrderByRelationAggregateInput {
  _count: SortOrder
}

input StakePoolStakerActivitiesOrderByWithAggregationInput {
  _avg: StakePoolStakerActivitiesAvgOrderByAggregateInput
  _count: StakePoolStakerActivitiesCountOrderByAggregateInput
  _max: StakePoolStakerActivitiesMaxOrderByAggregateInput
  _min: StakePoolStakerActivitiesMinOrderByAggregateInput
  _sum: StakePoolStakerActivitiesSumOrderByAggregateInput
  availableRewards: SortOrder
  blockNumber: SortOrder
  claimableRewards: SortOrder
  eventId: SortOrder
  id: SortOrder
  instantClaimableRewards: SortOrder
  locked: SortOrder
  pendingRewards: SortOrder
  rewardDebt: SortOrder
  shares: SortOrder
  stake: SortOrder
  stakePoolStakerId: SortOrder
  stakeRewards: SortOrder
  timestamp: SortOrder
  tokenomicVersion: SortOrder
  type: SortOrder
}

input StakePoolStakerActivitiesOrderByWithRelationInput {
  availableRewards: SortOrder
  blockNumber: SortOrder
  claimableRewards: SortOrder
  eventId: SortOrder
  events: EventsOrderByWithRelationInput
  id: SortOrder
  instantClaimableRewards: SortOrder
  locked: SortOrder
  pendingRewards: SortOrder
  rewardDebt: SortOrder
  shares: SortOrder
  stake: SortOrder
  stakePoolStakerId: SortOrder
  stakePoolStakers: StakePoolStakersOrderByWithRelationInput
  stakeRewards: SortOrder
  timestamp: SortOrder
  tokenomicVersion: SortOrder
  type: SortOrder
}

enum StakePoolStakerActivitiesScalarFieldEnum {
  availableRewards
  blockNumber
  claimableRewards
  eventId
  id
  instantClaimableRewards
  locked
  pendingRewards
  rewardDebt
  shares
  stake
  stakePoolStakerId
  stakeRewards
  timestamp
  tokenomicVersion
  type
}

input StakePoolStakerActivitiesScalarWhereInput {
  AND: [StakePoolStakerActivitiesScalarWhereInput!]
  NOT: [StakePoolStakerActivitiesScalarWhereInput!]
  OR: [StakePoolStakerActivitiesScalarWhereInput!]
  availableRewards: DecimalFilter
  blockNumber: BigIntFilter
  claimableRewards: DecimalFilter
  eventId: IntNullableFilter
  id: IntFilter
  instantClaimableRewards: DecimalFilter
  locked: DecimalFilter
  pendingRewards: DecimalFilter
  rewardDebt: DecimalFilter
  shares: DecimalFilter
  stake: DecimalFilter
  stakePoolStakerId: IntFilter
  stakeRewards: DecimalFilter
  timestamp: DateTimeFilter
  tokenomicVersion: IntFilter
  type: StringFilter
}

input StakePoolStakerActivitiesScalarWhereWithAggregatesInput {
  AND: [StakePoolStakerActivitiesScalarWhereWithAggregatesInput!]
  NOT: [StakePoolStakerActivitiesScalarWhereWithAggregatesInput!]
  OR: [StakePoolStakerActivitiesScalarWhereWithAggregatesInput!]
  availableRewards: DecimalWithAggregatesFilter
  blockNumber: BigIntWithAggregatesFilter
  claimableRewards: DecimalWithAggregatesFilter
  eventId: IntNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  instantClaimableRewards: DecimalWithAggregatesFilter
  locked: DecimalWithAggregatesFilter
  pendingRewards: DecimalWithAggregatesFilter
  rewardDebt: DecimalWithAggregatesFilter
  shares: DecimalWithAggregatesFilter
  stake: DecimalWithAggregatesFilter
  stakePoolStakerId: IntWithAggregatesFilter
  stakeRewards: DecimalWithAggregatesFilter
  timestamp: DateTimeWithAggregatesFilter
  tokenomicVersion: IntWithAggregatesFilter
  type: StringWithAggregatesFilter
}

type StakePoolStakerActivitiesSumAggregate {
  availableRewards: Decimal
  blockNumber: BigInt
  claimableRewards: Decimal
  eventId: Int
  id: Int
  instantClaimableRewards: Decimal
  locked: Decimal
  pendingRewards: Decimal
  rewardDebt: Decimal
  shares: Decimal
  stake: Decimal
  stakePoolStakerId: Int
  stakeRewards: Decimal
  tokenomicVersion: Int
}

input StakePoolStakerActivitiesSumOrderByAggregateInput {
  availableRewards: SortOrder
  blockNumber: SortOrder
  claimableRewards: SortOrder
  eventId: SortOrder
  id: SortOrder
  instantClaimableRewards: SortOrder
  locked: SortOrder
  pendingRewards: SortOrder
  rewardDebt: SortOrder
  shares: SortOrder
  stake: SortOrder
  stakePoolStakerId: SortOrder
  stakeRewards: SortOrder
  tokenomicVersion: SortOrder
}

input StakePoolStakerActivitiesUpdateInput {
  availableRewards: DecimalFieldUpdateOperationsInput
  blockNumber: BigIntFieldUpdateOperationsInput
  claimableRewards: DecimalFieldUpdateOperationsInput
  events: EventsUpdateOneWithoutStakePoolStakerActivitiesInput
  instantClaimableRewards: DecimalFieldUpdateOperationsInput
  locked: DecimalFieldUpdateOperationsInput
  pendingRewards: DecimalFieldUpdateOperationsInput
  rewardDebt: DecimalFieldUpdateOperationsInput
  shares: DecimalFieldUpdateOperationsInput
  stake: DecimalFieldUpdateOperationsInput
  stakePoolStakers: StakePoolStakersUpdateOneRequiredWithoutStakePoolStakerActivitiesInput
  stakeRewards: DecimalFieldUpdateOperationsInput
  timestamp: DateTimeFieldUpdateOperationsInput
  tokenomicVersion: IntFieldUpdateOperationsInput
  type: StringFieldUpdateOperationsInput
}

input StakePoolStakerActivitiesUpdateManyMutationInput {
  availableRewards: DecimalFieldUpdateOperationsInput
  blockNumber: BigIntFieldUpdateOperationsInput
  claimableRewards: DecimalFieldUpdateOperationsInput
  instantClaimableRewards: DecimalFieldUpdateOperationsInput
  locked: DecimalFieldUpdateOperationsInput
  pendingRewards: DecimalFieldUpdateOperationsInput
  rewardDebt: DecimalFieldUpdateOperationsInput
  shares: DecimalFieldUpdateOperationsInput
  stake: DecimalFieldUpdateOperationsInput
  stakeRewards: DecimalFieldUpdateOperationsInput
  timestamp: DateTimeFieldUpdateOperationsInput
  tokenomicVersion: IntFieldUpdateOperationsInput
  type: StringFieldUpdateOperationsInput
}

input StakePoolStakerActivitiesUpdateManyWithWhereWithoutEventsInput {
  data: StakePoolStakerActivitiesUpdateManyMutationInput!
  where: StakePoolStakerActivitiesScalarWhereInput!
}

input StakePoolStakerActivitiesUpdateManyWithWhereWithoutStakePoolStakersInput {
  data: StakePoolStakerActivitiesUpdateManyMutationInput!
  where: StakePoolStakerActivitiesScalarWhereInput!
}

input StakePoolStakerActivitiesUpdateManyWithoutEventsInput {
  connect: [StakePoolStakerActivitiesWhereUniqueInput!]
  delete: [StakePoolStakerActivitiesWhereUniqueInput!]
  deleteMany: [StakePoolStakerActivitiesScalarWhereInput!]
  disconnect: [StakePoolStakerActivitiesWhereUniqueInput!]
  set: [StakePoolStakerActivitiesWhereUniqueInput!]
  update: [StakePoolStakerActivitiesUpdateWithWhereUniqueWithoutEventsInput!]
  updateMany: [StakePoolStakerActivitiesUpdateManyWithWhereWithoutEventsInput!]
}

input StakePoolStakerActivitiesUpdateManyWithoutStakePoolStakersInput {
  connect: [StakePoolStakerActivitiesWhereUniqueInput!]
  delete: [StakePoolStakerActivitiesWhereUniqueInput!]
  deleteMany: [StakePoolStakerActivitiesScalarWhereInput!]
  disconnect: [StakePoolStakerActivitiesWhereUniqueInput!]
  set: [StakePoolStakerActivitiesWhereUniqueInput!]
  update: [StakePoolStakerActivitiesUpdateWithWhereUniqueWithoutStakePoolStakersInput!]
  updateMany: [StakePoolStakerActivitiesUpdateManyWithWhereWithoutStakePoolStakersInput!]
}

input StakePoolStakerActivitiesUpdateWithWhereUniqueWithoutEventsInput {
  data: StakePoolStakerActivitiesUpdateWithoutEventsInput!
  where: StakePoolStakerActivitiesWhereUniqueInput!
}

input StakePoolStakerActivitiesUpdateWithWhereUniqueWithoutStakePoolStakersInput {
  data: StakePoolStakerActivitiesUpdateWithoutStakePoolStakersInput!
  where: StakePoolStakerActivitiesWhereUniqueInput!
}

input StakePoolStakerActivitiesUpdateWithoutEventsInput {
  availableRewards: DecimalFieldUpdateOperationsInput
  blockNumber: BigIntFieldUpdateOperationsInput
  claimableRewards: DecimalFieldUpdateOperationsInput
  instantClaimableRewards: DecimalFieldUpdateOperationsInput
  locked: DecimalFieldUpdateOperationsInput
  pendingRewards: DecimalFieldUpdateOperationsInput
  rewardDebt: DecimalFieldUpdateOperationsInput
  shares: DecimalFieldUpdateOperationsInput
  stake: DecimalFieldUpdateOperationsInput
  stakePoolStakers: StakePoolStakersUpdateOneRequiredWithoutStakePoolStakerActivitiesInput
  stakeRewards: DecimalFieldUpdateOperationsInput
  timestamp: DateTimeFieldUpdateOperationsInput
  tokenomicVersion: IntFieldUpdateOperationsInput
  type: StringFieldUpdateOperationsInput
}

input StakePoolStakerActivitiesUpdateWithoutStakePoolStakersInput {
  availableRewards: DecimalFieldUpdateOperationsInput
  blockNumber: BigIntFieldUpdateOperationsInput
  claimableRewards: DecimalFieldUpdateOperationsInput
  events: EventsUpdateOneWithoutStakePoolStakerActivitiesInput
  instantClaimableRewards: DecimalFieldUpdateOperationsInput
  locked: DecimalFieldUpdateOperationsInput
  pendingRewards: DecimalFieldUpdateOperationsInput
  rewardDebt: DecimalFieldUpdateOperationsInput
  shares: DecimalFieldUpdateOperationsInput
  stake: DecimalFieldUpdateOperationsInput
  stakeRewards: DecimalFieldUpdateOperationsInput
  timestamp: DateTimeFieldUpdateOperationsInput
  tokenomicVersion: IntFieldUpdateOperationsInput
  type: StringFieldUpdateOperationsInput
}

input StakePoolStakerActivitiesWhereInput {
  AND: [StakePoolStakerActivitiesWhereInput!]
  NOT: [StakePoolStakerActivitiesWhereInput!]
  OR: [StakePoolStakerActivitiesWhereInput!]
  availableRewards: DecimalFilter
  blockNumber: BigIntFilter
  claimableRewards: DecimalFilter
  eventId: IntNullableFilter
  events: EventsRelationFilter
  id: IntFilter
  instantClaimableRewards: DecimalFilter
  locked: DecimalFilter
  pendingRewards: DecimalFilter
  rewardDebt: DecimalFilter
  shares: DecimalFilter
  stake: DecimalFilter
  stakePoolStakerId: IntFilter
  stakePoolStakers: StakePoolStakersRelationFilter
  stakeRewards: DecimalFilter
  timestamp: DateTimeFilter
  tokenomicVersion: IntFilter
  type: StringFilter
}

input StakePoolStakerActivitiesWhereUniqueInput {
  id: Int
}

type StakePoolStakers {
  _count: StakePoolStakersCount
  accounts: Accounts!
  address: String
  availableRewards: Decimal!
  claimableRewards: Decimal!
  id: Int!
  instantClaimableRewards: Decimal!
  isOwner: Boolean!
  lastUpdatedBlockNumber: BigInt!
  lastUpdatedTimestamp: DateTime!
  locked: Decimal!
  pendingRewards: Decimal!
  rewardDebt: Decimal!
  shares: Decimal!
  stake: Decimal!
  stakePoolId: Int!
  stakePoolStakerActivities(cursor: StakePoolStakerActivitiesWhereUniqueInput, distinct: [StakePoolStakerActivitiesScalarFieldEnum!], orderBy: [StakePoolStakerActivitiesOrderByWithRelationInput!], skip: Int, take: Int, where: StakePoolStakerActivitiesWhereInput): [StakePoolStakerActivities!]!
  stakePools: StakePools!
  stakeRewards: Decimal!
  userId: Int!
}

type StakePoolStakersAvgAggregate {
  availableRewards: Decimal
  claimableRewards: Decimal
  id: Float
  instantClaimableRewards: Decimal
  lastUpdatedBlockNumber: Float
  locked: Decimal
  pendingRewards: Decimal
  rewardDebt: Decimal
  shares: Decimal
  stake: Decimal
  stakePoolId: Float
  stakeRewards: Decimal
  userId: Float
}

input StakePoolStakersAvgOrderByAggregateInput {
  availableRewards: SortOrder
  claimableRewards: SortOrder
  id: SortOrder
  instantClaimableRewards: SortOrder
  lastUpdatedBlockNumber: SortOrder
  locked: SortOrder
  pendingRewards: SortOrder
  rewardDebt: SortOrder
  shares: SortOrder
  stake: SortOrder
  stakePoolId: SortOrder
  stakeRewards: SortOrder
  userId: SortOrder
}

type StakePoolStakersCount {
  stakePoolStakerActivities: Int!
}

type StakePoolStakersCountAggregate {
  _all: Int!
  address: Int!
  availableRewards: Int!
  claimableRewards: Int!
  id: Int!
  instantClaimableRewards: Int!
  isOwner: Int!
  lastUpdatedBlockNumber: Int!
  lastUpdatedTimestamp: Int!
  locked: Int!
  pendingRewards: Int!
  rewardDebt: Int!
  shares: Int!
  stake: Int!
  stakePoolId: Int!
  stakeRewards: Int!
  userId: Int!
}

input StakePoolStakersCountOrderByAggregateInput {
  address: SortOrder
  availableRewards: SortOrder
  claimableRewards: SortOrder
  id: SortOrder
  instantClaimableRewards: SortOrder
  isOwner: SortOrder
  lastUpdatedBlockNumber: SortOrder
  lastUpdatedTimestamp: SortOrder
  locked: SortOrder
  pendingRewards: SortOrder
  rewardDebt: SortOrder
  shares: SortOrder
  stake: SortOrder
  stakePoolId: SortOrder
  stakeRewards: SortOrder
  userId: SortOrder
}

type StakePoolStakersGroupBy {
  _avg: StakePoolStakersAvgAggregate
  _count: StakePoolStakersCountAggregate
  _max: StakePoolStakersMaxAggregate
  _min: StakePoolStakersMinAggregate
  _sum: StakePoolStakersSumAggregate
  address: String
  availableRewards: Decimal!
  claimableRewards: Decimal!
  id: Int!
  instantClaimableRewards: Decimal!
  isOwner: Boolean!
  lastUpdatedBlockNumber: BigInt!
  lastUpdatedTimestamp: DateTime!
  locked: Decimal!
  pendingRewards: Decimal!
  rewardDebt: Decimal!
  shares: Decimal!
  stake: Decimal!
  stakePoolId: Int!
  stakeRewards: Decimal!
  userId: Int!
}

input StakePoolStakersListRelationFilter {
  every: StakePoolStakersWhereInput
  none: StakePoolStakersWhereInput
  some: StakePoolStakersWhereInput
}

type StakePoolStakersMaxAggregate {
  address: String
  availableRewards: Decimal
  claimableRewards: Decimal
  id: Int
  instantClaimableRewards: Decimal
  isOwner: Boolean
  lastUpdatedBlockNumber: BigInt
  lastUpdatedTimestamp: DateTime
  locked: Decimal
  pendingRewards: Decimal
  rewardDebt: Decimal
  shares: Decimal
  stake: Decimal
  stakePoolId: Int
  stakeRewards: Decimal
  userId: Int
}

input StakePoolStakersMaxOrderByAggregateInput {
  address: SortOrder
  availableRewards: SortOrder
  claimableRewards: SortOrder
  id: SortOrder
  instantClaimableRewards: SortOrder
  isOwner: SortOrder
  lastUpdatedBlockNumber: SortOrder
  lastUpdatedTimestamp: SortOrder
  locked: SortOrder
  pendingRewards: SortOrder
  rewardDebt: SortOrder
  shares: SortOrder
  stake: SortOrder
  stakePoolId: SortOrder
  stakeRewards: SortOrder
  userId: SortOrder
}

type StakePoolStakersMinAggregate {
  address: String
  availableRewards: Decimal
  claimableRewards: Decimal
  id: Int
  instantClaimableRewards: Decimal
  isOwner: Boolean
  lastUpdatedBlockNumber: BigInt
  lastUpdatedTimestamp: DateTime
  locked: Decimal
  pendingRewards: Decimal
  rewardDebt: Decimal
  shares: Decimal
  stake: Decimal
  stakePoolId: Int
  stakeRewards: Decimal
  userId: Int
}

input StakePoolStakersMinOrderByAggregateInput {
  address: SortOrder
  availableRewards: SortOrder
  claimableRewards: SortOrder
  id: SortOrder
  instantClaimableRewards: SortOrder
  isOwner: SortOrder
  lastUpdatedBlockNumber: SortOrder
  lastUpdatedTimestamp: SortOrder
  locked: SortOrder
  pendingRewards: SortOrder
  rewardDebt: SortOrder
  shares: SortOrder
  stake: SortOrder
  stakePoolId: SortOrder
  stakeRewards: SortOrder
  userId: SortOrder
}

input StakePoolStakersOrderByRelationAggregateInput {
  _count: SortOrder
}

input StakePoolStakersOrderByWithAggregationInput {
  _avg: StakePoolStakersAvgOrderByAggregateInput
  _count: StakePoolStakersCountOrderByAggregateInput
  _max: StakePoolStakersMaxOrderByAggregateInput
  _min: StakePoolStakersMinOrderByAggregateInput
  _sum: StakePoolStakersSumOrderByAggregateInput
  address: SortOrder
  availableRewards: SortOrder
  claimableRewards: SortOrder
  id: SortOrder
  instantClaimableRewards: SortOrder
  isOwner: SortOrder
  lastUpdatedBlockNumber: SortOrder
  lastUpdatedTimestamp: SortOrder
  locked: SortOrder
  pendingRewards: SortOrder
  rewardDebt: SortOrder
  shares: SortOrder
  stake: SortOrder
  stakePoolId: SortOrder
  stakeRewards: SortOrder
  userId: SortOrder
}

input StakePoolStakersOrderByWithRelationInput {
  accounts: AccountsOrderByWithRelationInput
  address: SortOrder
  availableRewards: SortOrder
  claimableRewards: SortOrder
  id: SortOrder
  instantClaimableRewards: SortOrder
  isOwner: SortOrder
  lastUpdatedBlockNumber: SortOrder
  lastUpdatedTimestamp: SortOrder
  locked: SortOrder
  pendingRewards: SortOrder
  rewardDebt: SortOrder
  shares: SortOrder
  stake: SortOrder
  stakePoolId: SortOrder
  stakePoolStakerActivities: StakePoolStakerActivitiesOrderByRelationAggregateInput
  stakePools: StakePoolsOrderByWithRelationInput
  stakeRewards: SortOrder
  userId: SortOrder
}

input StakePoolStakersRelationFilter {
  is: StakePoolStakersWhereInput
  isNot: StakePoolStakersWhereInput
}

enum StakePoolStakersScalarFieldEnum {
  address
  availableRewards
  claimableRewards
  id
  instantClaimableRewards
  isOwner
  lastUpdatedBlockNumber
  lastUpdatedTimestamp
  locked
  pendingRewards
  rewardDebt
  shares
  stake
  stakePoolId
  stakeRewards
  userId
}

input StakePoolStakersScalarWhereInput {
  AND: [StakePoolStakersScalarWhereInput!]
  NOT: [StakePoolStakersScalarWhereInput!]
  OR: [StakePoolStakersScalarWhereInput!]
  address: StringNullableFilter
  availableRewards: DecimalFilter
  claimableRewards: DecimalFilter
  id: IntFilter
  instantClaimableRewards: DecimalFilter
  isOwner: BoolFilter
  lastUpdatedBlockNumber: BigIntFilter
  lastUpdatedTimestamp: DateTimeFilter
  locked: DecimalFilter
  pendingRewards: DecimalFilter
  rewardDebt: DecimalFilter
  shares: DecimalFilter
  stake: DecimalFilter
  stakePoolId: IntFilter
  stakeRewards: DecimalFilter
  userId: IntFilter
}

input StakePoolStakersScalarWhereWithAggregatesInput {
  AND: [StakePoolStakersScalarWhereWithAggregatesInput!]
  NOT: [StakePoolStakersScalarWhereWithAggregatesInput!]
  OR: [StakePoolStakersScalarWhereWithAggregatesInput!]
  address: StringNullableWithAggregatesFilter
  availableRewards: DecimalWithAggregatesFilter
  claimableRewards: DecimalWithAggregatesFilter
  id: IntWithAggregatesFilter
  instantClaimableRewards: DecimalWithAggregatesFilter
  isOwner: BoolWithAggregatesFilter
  lastUpdatedBlockNumber: BigIntWithAggregatesFilter
  lastUpdatedTimestamp: DateTimeWithAggregatesFilter
  locked: DecimalWithAggregatesFilter
  pendingRewards: DecimalWithAggregatesFilter
  rewardDebt: DecimalWithAggregatesFilter
  shares: DecimalWithAggregatesFilter
  stake: DecimalWithAggregatesFilter
  stakePoolId: IntWithAggregatesFilter
  stakeRewards: DecimalWithAggregatesFilter
  userId: IntWithAggregatesFilter
}

type StakePoolStakersSumAggregate {
  availableRewards: Decimal
  claimableRewards: Decimal
  id: Int
  instantClaimableRewards: Decimal
  lastUpdatedBlockNumber: BigInt
  locked: Decimal
  pendingRewards: Decimal
  rewardDebt: Decimal
  shares: Decimal
  stake: Decimal
  stakePoolId: Int
  stakeRewards: Decimal
  userId: Int
}

input StakePoolStakersSumOrderByAggregateInput {
  availableRewards: SortOrder
  claimableRewards: SortOrder
  id: SortOrder
  instantClaimableRewards: SortOrder
  lastUpdatedBlockNumber: SortOrder
  locked: SortOrder
  pendingRewards: SortOrder
  rewardDebt: SortOrder
  shares: SortOrder
  stake: SortOrder
  stakePoolId: SortOrder
  stakeRewards: SortOrder
  userId: SortOrder
}

input StakePoolStakersUpdateInput {
  accounts: AccountsUpdateOneRequiredWithoutStakePoolStakersInput
  address: NullableStringFieldUpdateOperationsInput
  availableRewards: DecimalFieldUpdateOperationsInput
  claimableRewards: DecimalFieldUpdateOperationsInput
  instantClaimableRewards: DecimalFieldUpdateOperationsInput
  isOwner: BoolFieldUpdateOperationsInput
  lastUpdatedBlockNumber: BigIntFieldUpdateOperationsInput
  lastUpdatedTimestamp: DateTimeFieldUpdateOperationsInput
  locked: DecimalFieldUpdateOperationsInput
  pendingRewards: DecimalFieldUpdateOperationsInput
  rewardDebt: DecimalFieldUpdateOperationsInput
  shares: DecimalFieldUpdateOperationsInput
  stake: DecimalFieldUpdateOperationsInput
  stakePoolStakerActivities: StakePoolStakerActivitiesUpdateManyWithoutStakePoolStakersInput
  stakePools: StakePoolsUpdateOneRequiredWithoutStakePoolStakersInput
  stakeRewards: DecimalFieldUpdateOperationsInput
}

input StakePoolStakersUpdateManyMutationInput {
  address: NullableStringFieldUpdateOperationsInput
  availableRewards: DecimalFieldUpdateOperationsInput
  claimableRewards: DecimalFieldUpdateOperationsInput
  instantClaimableRewards: DecimalFieldUpdateOperationsInput
  isOwner: BoolFieldUpdateOperationsInput
  lastUpdatedBlockNumber: BigIntFieldUpdateOperationsInput
  lastUpdatedTimestamp: DateTimeFieldUpdateOperationsInput
  locked: DecimalFieldUpdateOperationsInput
  pendingRewards: DecimalFieldUpdateOperationsInput
  rewardDebt: DecimalFieldUpdateOperationsInput
  shares: DecimalFieldUpdateOperationsInput
  stake: DecimalFieldUpdateOperationsInput
  stakeRewards: DecimalFieldUpdateOperationsInput
}

input StakePoolStakersUpdateManyWithWhereWithoutAccountsInput {
  data: StakePoolStakersUpdateManyMutationInput!
  where: StakePoolStakersScalarWhereInput!
}

input StakePoolStakersUpdateManyWithWhereWithoutStakePoolsInput {
  data: StakePoolStakersUpdateManyMutationInput!
  where: StakePoolStakersScalarWhereInput!
}

input StakePoolStakersUpdateManyWithoutAccountsInput {
  connect: [StakePoolStakersWhereUniqueInput!]
  delete: [StakePoolStakersWhereUniqueInput!]
  deleteMany: [StakePoolStakersScalarWhereInput!]
  disconnect: [StakePoolStakersWhereUniqueInput!]
  set: [StakePoolStakersWhereUniqueInput!]
  update: [StakePoolStakersUpdateWithWhereUniqueWithoutAccountsInput!]
  updateMany: [StakePoolStakersUpdateManyWithWhereWithoutAccountsInput!]
}

input StakePoolStakersUpdateManyWithoutStakePoolsInput {
  connect: [StakePoolStakersWhereUniqueInput!]
  delete: [StakePoolStakersWhereUniqueInput!]
  deleteMany: [StakePoolStakersScalarWhereInput!]
  disconnect: [StakePoolStakersWhereUniqueInput!]
  set: [StakePoolStakersWhereUniqueInput!]
  update: [StakePoolStakersUpdateWithWhereUniqueWithoutStakePoolsInput!]
  updateMany: [StakePoolStakersUpdateManyWithWhereWithoutStakePoolsInput!]
}

input StakePoolStakersUpdateOneRequiredWithoutStakePoolStakerActivitiesInput {
  connect: StakePoolStakersWhereUniqueInput
  update: StakePoolStakersUpdateWithoutStakePoolStakerActivitiesInput
}

input StakePoolStakersUpdateWithWhereUniqueWithoutAccountsInput {
  data: StakePoolStakersUpdateWithoutAccountsInput!
  where: StakePoolStakersWhereUniqueInput!
}

input StakePoolStakersUpdateWithWhereUniqueWithoutStakePoolsInput {
  data: StakePoolStakersUpdateWithoutStakePoolsInput!
  where: StakePoolStakersWhereUniqueInput!
}

input StakePoolStakersUpdateWithoutAccountsInput {
  address: NullableStringFieldUpdateOperationsInput
  availableRewards: DecimalFieldUpdateOperationsInput
  claimableRewards: DecimalFieldUpdateOperationsInput
  instantClaimableRewards: DecimalFieldUpdateOperationsInput
  isOwner: BoolFieldUpdateOperationsInput
  lastUpdatedBlockNumber: BigIntFieldUpdateOperationsInput
  lastUpdatedTimestamp: DateTimeFieldUpdateOperationsInput
  locked: DecimalFieldUpdateOperationsInput
  pendingRewards: DecimalFieldUpdateOperationsInput
  rewardDebt: DecimalFieldUpdateOperationsInput
  shares: DecimalFieldUpdateOperationsInput
  stake: DecimalFieldUpdateOperationsInput
  stakePoolStakerActivities: StakePoolStakerActivitiesUpdateManyWithoutStakePoolStakersInput
  stakePools: StakePoolsUpdateOneRequiredWithoutStakePoolStakersInput
  stakeRewards: DecimalFieldUpdateOperationsInput
}

input StakePoolStakersUpdateWithoutStakePoolStakerActivitiesInput {
  accounts: AccountsUpdateOneRequiredWithoutStakePoolStakersInput
  address: NullableStringFieldUpdateOperationsInput
  availableRewards: DecimalFieldUpdateOperationsInput
  claimableRewards: DecimalFieldUpdateOperationsInput
  instantClaimableRewards: DecimalFieldUpdateOperationsInput
  isOwner: BoolFieldUpdateOperationsInput
  lastUpdatedBlockNumber: BigIntFieldUpdateOperationsInput
  lastUpdatedTimestamp: DateTimeFieldUpdateOperationsInput
  locked: DecimalFieldUpdateOperationsInput
  pendingRewards: DecimalFieldUpdateOperationsInput
  rewardDebt: DecimalFieldUpdateOperationsInput
  shares: DecimalFieldUpdateOperationsInput
  stake: DecimalFieldUpdateOperationsInput
  stakePools: StakePoolsUpdateOneRequiredWithoutStakePoolStakersInput
  stakeRewards: DecimalFieldUpdateOperationsInput
}

input StakePoolStakersUpdateWithoutStakePoolsInput {
  accounts: AccountsUpdateOneRequiredWithoutStakePoolStakersInput
  address: NullableStringFieldUpdateOperationsInput
  availableRewards: DecimalFieldUpdateOperationsInput
  claimableRewards: DecimalFieldUpdateOperationsInput
  instantClaimableRewards: DecimalFieldUpdateOperationsInput
  isOwner: BoolFieldUpdateOperationsInput
  lastUpdatedBlockNumber: BigIntFieldUpdateOperationsInput
  lastUpdatedTimestamp: DateTimeFieldUpdateOperationsInput
  locked: DecimalFieldUpdateOperationsInput
  pendingRewards: DecimalFieldUpdateOperationsInput
  rewardDebt: DecimalFieldUpdateOperationsInput
  shares: DecimalFieldUpdateOperationsInput
  stake: DecimalFieldUpdateOperationsInput
  stakePoolStakerActivities: StakePoolStakerActivitiesUpdateManyWithoutStakePoolStakersInput
  stakeRewards: DecimalFieldUpdateOperationsInput
}

input StakePoolStakersWhereInput {
  AND: [StakePoolStakersWhereInput!]
  NOT: [StakePoolStakersWhereInput!]
  OR: [StakePoolStakersWhereInput!]
  accounts: AccountsRelationFilter
  address: StringNullableFilter
  availableRewards: DecimalFilter
  claimableRewards: DecimalFilter
  id: IntFilter
  instantClaimableRewards: DecimalFilter
  isOwner: BoolFilter
  lastUpdatedBlockNumber: BigIntFilter
  lastUpdatedTimestamp: DateTimeFilter
  locked: DecimalFilter
  pendingRewards: DecimalFilter
  rewardDebt: DecimalFilter
  shares: DecimalFilter
  stake: DecimalFilter
  stakePoolId: IntFilter
  stakePoolStakerActivities: StakePoolStakerActivitiesListRelationFilter
  stakePools: StakePoolsRelationFilter
  stakeRewards: DecimalFilter
  userId: IntFilter
}

input StakePoolStakersWhereUniqueInput {
  id: Int
}

type StakePools {
  _count: StakePoolsCount
  accounts: Accounts!
  apr: Decimal!
  cap: Decimal!
  commission: Decimal!
  commissionRatio: Decimal!
  freeStake: Decimal!
  id: Int!
  lastUpdatedBlockNumber: BigInt!
  lastUpdatedTimestamp: DateTime!
  miners(cursor: MinersWhereUniqueInput, distinct: [MinersScalarFieldEnum!], orderBy: [MinersOrderByWithRelationInput!], skip: Int, take: Int, where: MinersWhereInput): [Miners!]!
  miningWorkersCount: Int!
  ownerAddress: String!
  ownerId: Int!
  ownerReward: Decimal!
  pid: BigInt!
  releasingStake: Decimal!
  rewardAcc: Decimal!
  stakePoolActivities(cursor: StakePoolActivitiesWhereUniqueInput, distinct: [StakePoolActivitiesScalarFieldEnum!], orderBy: [StakePoolActivitiesOrderByWithRelationInput!], skip: Int, take: Int, where: StakePoolActivitiesWhereInput): [StakePoolActivities!]!
  stakePoolStakers(cursor: StakePoolStakersWhereUniqueInput, distinct: [StakePoolStakersScalarFieldEnum!], orderBy: [StakePoolStakersOrderByWithRelationInput!], skip: Int, take: Int, where: StakePoolStakersWhereInput): [StakePoolStakers!]!
  stakersCount: Int!
  totalShares: Decimal!
  totalStake: Decimal!
  usedStake: Decimal!
  workerActivities(cursor: WorkerActivitiesWhereUniqueInput, distinct: [WorkerActivitiesScalarFieldEnum!], orderBy: [WorkerActivitiesOrderByWithRelationInput!], skip: Int, take: Int, where: WorkerActivitiesWhereInput): [WorkerActivities!]!
  workers(cursor: WorkersWhereUniqueInput, distinct: [WorkersScalarFieldEnum!], orderBy: [WorkersOrderByWithRelationInput!], skip: Int, take: Int, where: WorkersWhereInput): [Workers!]!
  workersCount: Int!
}

type StakePoolsAvgAggregate {
  apr: Decimal
  cap: Decimal
  commission: Decimal
  commissionRatio: Decimal
  freeStake: Decimal
  id: Float
  lastUpdatedBlockNumber: Float
  miningWorkersCount: Float
  ownerId: Float
  ownerReward: Decimal
  pid: Float
  releasingStake: Decimal
  rewardAcc: Decimal
  stakersCount: Float
  totalShares: Decimal
  totalStake: Decimal
  usedStake: Decimal
  workersCount: Float
}

input StakePoolsAvgOrderByAggregateInput {
  apr: SortOrder
  cap: SortOrder
  commission: SortOrder
  commissionRatio: SortOrder
  freeStake: SortOrder
  id: SortOrder
  lastUpdatedBlockNumber: SortOrder
  miningWorkersCount: SortOrder
  ownerId: SortOrder
  ownerReward: SortOrder
  pid: SortOrder
  releasingStake: SortOrder
  rewardAcc: SortOrder
  stakersCount: SortOrder
  totalShares: SortOrder
  totalStake: SortOrder
  usedStake: SortOrder
  workersCount: SortOrder
}

type StakePoolsCount {
  miners: Int!
  stakePoolActivities: Int!
  stakePoolStakers: Int!
  workerActivities: Int!
  workers: Int!
}

type StakePoolsCountAggregate {
  _all: Int!
  apr: Int!
  cap: Int!
  commission: Int!
  commissionRatio: Int!
  freeStake: Int!
  id: Int!
  lastUpdatedBlockNumber: Int!
  lastUpdatedTimestamp: Int!
  miningWorkersCount: Int!
  ownerAddress: Int!
  ownerId: Int!
  ownerReward: Int!
  pid: Int!
  releasingStake: Int!
  rewardAcc: Int!
  stakersCount: Int!
  totalShares: Int!
  totalStake: Int!
  usedStake: Int!
  workersCount: Int!
}

input StakePoolsCountOrderByAggregateInput {
  apr: SortOrder
  cap: SortOrder
  commission: SortOrder
  commissionRatio: SortOrder
  freeStake: SortOrder
  id: SortOrder
  lastUpdatedBlockNumber: SortOrder
  lastUpdatedTimestamp: SortOrder
  miningWorkersCount: SortOrder
  ownerAddress: SortOrder
  ownerId: SortOrder
  ownerReward: SortOrder
  pid: SortOrder
  releasingStake: SortOrder
  rewardAcc: SortOrder
  stakersCount: SortOrder
  totalShares: SortOrder
  totalStake: SortOrder
  usedStake: SortOrder
  workersCount: SortOrder
}

type StakePoolsGroupBy {
  _avg: StakePoolsAvgAggregate
  _count: StakePoolsCountAggregate
  _max: StakePoolsMaxAggregate
  _min: StakePoolsMinAggregate
  _sum: StakePoolsSumAggregate
  apr: Decimal!
  cap: Decimal!
  commission: Decimal!
  commissionRatio: Decimal!
  freeStake: Decimal!
  id: Int!
  lastUpdatedBlockNumber: BigInt!
  lastUpdatedTimestamp: DateTime!
  miningWorkersCount: Int!
  ownerAddress: String!
  ownerId: Int!
  ownerReward: Decimal!
  pid: BigInt!
  releasingStake: Decimal!
  rewardAcc: Decimal!
  stakersCount: Int!
  totalShares: Decimal!
  totalStake: Decimal!
  usedStake: Decimal!
  workersCount: Int!
}

input StakePoolsListRelationFilter {
  every: StakePoolsWhereInput
  none: StakePoolsWhereInput
  some: StakePoolsWhereInput
}

type StakePoolsMaxAggregate {
  apr: Decimal
  cap: Decimal
  commission: Decimal
  commissionRatio: Decimal
  freeStake: Decimal
  id: Int
  lastUpdatedBlockNumber: BigInt
  lastUpdatedTimestamp: DateTime
  miningWorkersCount: Int
  ownerAddress: String
  ownerId: Int
  ownerReward: Decimal
  pid: BigInt
  releasingStake: Decimal
  rewardAcc: Decimal
  stakersCount: Int
  totalShares: Decimal
  totalStake: Decimal
  usedStake: Decimal
  workersCount: Int
}

input StakePoolsMaxOrderByAggregateInput {
  apr: SortOrder
  cap: SortOrder
  commission: SortOrder
  commissionRatio: SortOrder
  freeStake: SortOrder
  id: SortOrder
  lastUpdatedBlockNumber: SortOrder
  lastUpdatedTimestamp: SortOrder
  miningWorkersCount: SortOrder
  ownerAddress: SortOrder
  ownerId: SortOrder
  ownerReward: SortOrder
  pid: SortOrder
  releasingStake: SortOrder
  rewardAcc: SortOrder
  stakersCount: SortOrder
  totalShares: SortOrder
  totalStake: SortOrder
  usedStake: SortOrder
  workersCount: SortOrder
}

type StakePoolsMinAggregate {
  apr: Decimal
  cap: Decimal
  commission: Decimal
  commissionRatio: Decimal
  freeStake: Decimal
  id: Int
  lastUpdatedBlockNumber: BigInt
  lastUpdatedTimestamp: DateTime
  miningWorkersCount: Int
  ownerAddress: String
  ownerId: Int
  ownerReward: Decimal
  pid: BigInt
  releasingStake: Decimal
  rewardAcc: Decimal
  stakersCount: Int
  totalShares: Decimal
  totalStake: Decimal
  usedStake: Decimal
  workersCount: Int
}

input StakePoolsMinOrderByAggregateInput {
  apr: SortOrder
  cap: SortOrder
  commission: SortOrder
  commissionRatio: SortOrder
  freeStake: SortOrder
  id: SortOrder
  lastUpdatedBlockNumber: SortOrder
  lastUpdatedTimestamp: SortOrder
  miningWorkersCount: SortOrder
  ownerAddress: SortOrder
  ownerId: SortOrder
  ownerReward: SortOrder
  pid: SortOrder
  releasingStake: SortOrder
  rewardAcc: SortOrder
  stakersCount: SortOrder
  totalShares: SortOrder
  totalStake: SortOrder
  usedStake: SortOrder
  workersCount: SortOrder
}

input StakePoolsOrderByRelationAggregateInput {
  _count: SortOrder
}

input StakePoolsOrderByWithAggregationInput {
  _avg: StakePoolsAvgOrderByAggregateInput
  _count: StakePoolsCountOrderByAggregateInput
  _max: StakePoolsMaxOrderByAggregateInput
  _min: StakePoolsMinOrderByAggregateInput
  _sum: StakePoolsSumOrderByAggregateInput
  apr: SortOrder
  cap: SortOrder
  commission: SortOrder
  commissionRatio: SortOrder
  freeStake: SortOrder
  id: SortOrder
  lastUpdatedBlockNumber: SortOrder
  lastUpdatedTimestamp: SortOrder
  miningWorkersCount: SortOrder
  ownerAddress: SortOrder
  ownerId: SortOrder
  ownerReward: SortOrder
  pid: SortOrder
  releasingStake: SortOrder
  rewardAcc: SortOrder
  stakersCount: SortOrder
  totalShares: SortOrder
  totalStake: SortOrder
  usedStake: SortOrder
  workersCount: SortOrder
}

input StakePoolsOrderByWithRelationInput {
  accounts: AccountsOrderByWithRelationInput
  apr: SortOrder
  cap: SortOrder
  commission: SortOrder
  commissionRatio: SortOrder
  freeStake: SortOrder
  id: SortOrder
  lastUpdatedBlockNumber: SortOrder
  lastUpdatedTimestamp: SortOrder
  miners: MinersOrderByRelationAggregateInput
  miningWorkersCount: SortOrder
  ownerAddress: SortOrder
  ownerId: SortOrder
  ownerReward: SortOrder
  pid: SortOrder
  releasingStake: SortOrder
  rewardAcc: SortOrder
  stakePoolActivities: StakePoolActivitiesOrderByRelationAggregateInput
  stakePoolStakers: StakePoolStakersOrderByRelationAggregateInput
  stakersCount: SortOrder
  totalShares: SortOrder
  totalStake: SortOrder
  usedStake: SortOrder
  workerActivities: WorkerActivitiesOrderByRelationAggregateInput
  workers: WorkersOrderByRelationAggregateInput
  workersCount: SortOrder
}

input StakePoolsRelationFilter {
  is: StakePoolsWhereInput
  isNot: StakePoolsWhereInput
}

enum StakePoolsScalarFieldEnum {
  apr
  cap
  commission
  commissionRatio
  freeStake
  id
  lastUpdatedBlockNumber
  lastUpdatedTimestamp
  miningWorkersCount
  ownerAddress
  ownerId
  ownerReward
  pid
  releasingStake
  rewardAcc
  stakersCount
  totalShares
  totalStake
  usedStake
  workersCount
}

input StakePoolsScalarWhereInput {
  AND: [StakePoolsScalarWhereInput!]
  NOT: [StakePoolsScalarWhereInput!]
  OR: [StakePoolsScalarWhereInput!]
  apr: DecimalFilter
  cap: DecimalFilter
  commission: DecimalFilter
  commissionRatio: DecimalFilter
  freeStake: DecimalFilter
  id: IntFilter
  lastUpdatedBlockNumber: BigIntFilter
  lastUpdatedTimestamp: DateTimeFilter
  miningWorkersCount: IntFilter
  ownerAddress: StringFilter
  ownerId: IntFilter
  ownerReward: DecimalFilter
  pid: BigIntFilter
  releasingStake: DecimalFilter
  rewardAcc: DecimalFilter
  stakersCount: IntFilter
  totalShares: DecimalFilter
  totalStake: DecimalFilter
  usedStake: DecimalFilter
  workersCount: IntFilter
}

input StakePoolsScalarWhereWithAggregatesInput {
  AND: [StakePoolsScalarWhereWithAggregatesInput!]
  NOT: [StakePoolsScalarWhereWithAggregatesInput!]
  OR: [StakePoolsScalarWhereWithAggregatesInput!]
  apr: DecimalWithAggregatesFilter
  cap: DecimalWithAggregatesFilter
  commission: DecimalWithAggregatesFilter
  commissionRatio: DecimalWithAggregatesFilter
  freeStake: DecimalWithAggregatesFilter
  id: IntWithAggregatesFilter
  lastUpdatedBlockNumber: BigIntWithAggregatesFilter
  lastUpdatedTimestamp: DateTimeWithAggregatesFilter
  miningWorkersCount: IntWithAggregatesFilter
  ownerAddress: StringWithAggregatesFilter
  ownerId: IntWithAggregatesFilter
  ownerReward: DecimalWithAggregatesFilter
  pid: BigIntWithAggregatesFilter
  releasingStake: DecimalWithAggregatesFilter
  rewardAcc: DecimalWithAggregatesFilter
  stakersCount: IntWithAggregatesFilter
  totalShares: DecimalWithAggregatesFilter
  totalStake: DecimalWithAggregatesFilter
  usedStake: DecimalWithAggregatesFilter
  workersCount: IntWithAggregatesFilter
}

type StakePoolsSumAggregate {
  apr: Decimal
  cap: Decimal
  commission: Decimal
  commissionRatio: Decimal
  freeStake: Decimal
  id: Int
  lastUpdatedBlockNumber: BigInt
  miningWorkersCount: Int
  ownerId: Int
  ownerReward: Decimal
  pid: BigInt
  releasingStake: Decimal
  rewardAcc: Decimal
  stakersCount: Int
  totalShares: Decimal
  totalStake: Decimal
  usedStake: Decimal
  workersCount: Int
}

input StakePoolsSumOrderByAggregateInput {
  apr: SortOrder
  cap: SortOrder
  commission: SortOrder
  commissionRatio: SortOrder
  freeStake: SortOrder
  id: SortOrder
  lastUpdatedBlockNumber: SortOrder
  miningWorkersCount: SortOrder
  ownerId: SortOrder
  ownerReward: SortOrder
  pid: SortOrder
  releasingStake: SortOrder
  rewardAcc: SortOrder
  stakersCount: SortOrder
  totalShares: SortOrder
  totalStake: SortOrder
  usedStake: SortOrder
  workersCount: SortOrder
}

input StakePoolsUpdateInput {
  accounts: AccountsUpdateOneRequiredWithoutStakePoolsInput
  apr: DecimalFieldUpdateOperationsInput
  cap: DecimalFieldUpdateOperationsInput
  commission: DecimalFieldUpdateOperationsInput
  commissionRatio: DecimalFieldUpdateOperationsInput
  freeStake: DecimalFieldUpdateOperationsInput
  lastUpdatedBlockNumber: BigIntFieldUpdateOperationsInput
  lastUpdatedTimestamp: DateTimeFieldUpdateOperationsInput
  miners: MinersUpdateManyWithoutStakePoolsInput
  miningWorkersCount: IntFieldUpdateOperationsInput
  ownerAddress: StringFieldUpdateOperationsInput
  ownerReward: DecimalFieldUpdateOperationsInput
  pid: BigIntFieldUpdateOperationsInput
  releasingStake: DecimalFieldUpdateOperationsInput
  rewardAcc: DecimalFieldUpdateOperationsInput
  stakePoolActivities: StakePoolActivitiesUpdateManyWithoutStakePoolsInput
  stakePoolStakers: StakePoolStakersUpdateManyWithoutStakePoolsInput
  stakersCount: IntFieldUpdateOperationsInput
  totalShares: DecimalFieldUpdateOperationsInput
  totalStake: DecimalFieldUpdateOperationsInput
  usedStake: DecimalFieldUpdateOperationsInput
  workerActivities: WorkerActivitiesUpdateManyWithoutStakePoolsInput
  workers: WorkersUpdateManyWithoutStakePoolsInput
  workersCount: IntFieldUpdateOperationsInput
}

input StakePoolsUpdateManyMutationInput {
  apr: DecimalFieldUpdateOperationsInput
  cap: DecimalFieldUpdateOperationsInput
  commission: DecimalFieldUpdateOperationsInput
  commissionRatio: DecimalFieldUpdateOperationsInput
  freeStake: DecimalFieldUpdateOperationsInput
  lastUpdatedBlockNumber: BigIntFieldUpdateOperationsInput
  lastUpdatedTimestamp: DateTimeFieldUpdateOperationsInput
  miningWorkersCount: IntFieldUpdateOperationsInput
  ownerAddress: StringFieldUpdateOperationsInput
  ownerReward: DecimalFieldUpdateOperationsInput
  pid: BigIntFieldUpdateOperationsInput
  releasingStake: DecimalFieldUpdateOperationsInput
  rewardAcc: DecimalFieldUpdateOperationsInput
  stakersCount: IntFieldUpdateOperationsInput
  totalShares: DecimalFieldUpdateOperationsInput
  totalStake: DecimalFieldUpdateOperationsInput
  usedStake: DecimalFieldUpdateOperationsInput
  workersCount: IntFieldUpdateOperationsInput
}

input StakePoolsUpdateManyWithWhereWithoutAccountsInput {
  data: StakePoolsUpdateManyMutationInput!
  where: StakePoolsScalarWhereInput!
}

input StakePoolsUpdateManyWithoutAccountsInput {
  connect: [StakePoolsWhereUniqueInput!]
  delete: [StakePoolsWhereUniqueInput!]
  deleteMany: [StakePoolsScalarWhereInput!]
  disconnect: [StakePoolsWhereUniqueInput!]
  set: [StakePoolsWhereUniqueInput!]
  update: [StakePoolsUpdateWithWhereUniqueWithoutAccountsInput!]
  updateMany: [StakePoolsUpdateManyWithWhereWithoutAccountsInput!]
}

input StakePoolsUpdateOneRequiredWithoutStakePoolActivitiesInput {
  connect: StakePoolsWhereUniqueInput
  update: StakePoolsUpdateWithoutStakePoolActivitiesInput
}

input StakePoolsUpdateOneRequiredWithoutStakePoolStakersInput {
  connect: StakePoolsWhereUniqueInput
  update: StakePoolsUpdateWithoutStakePoolStakersInput
}

input StakePoolsUpdateOneWithoutMinersInput {
  connect: StakePoolsWhereUniqueInput
  delete: Boolean
  disconnect: Boolean
  update: StakePoolsUpdateWithoutMinersInput
}

input StakePoolsUpdateOneWithoutWorkerActivitiesInput {
  connect: StakePoolsWhereUniqueInput
  delete: Boolean
  disconnect: Boolean
  update: StakePoolsUpdateWithoutWorkerActivitiesInput
}

input StakePoolsUpdateOneWithoutWorkersInput {
  connect: StakePoolsWhereUniqueInput
  delete: Boolean
  disconnect: Boolean
  update: StakePoolsUpdateWithoutWorkersInput
}

input StakePoolsUpdateWithWhereUniqueWithoutAccountsInput {
  data: StakePoolsUpdateWithoutAccountsInput!
  where: StakePoolsWhereUniqueInput!
}

input StakePoolsUpdateWithoutAccountsInput {
  apr: DecimalFieldUpdateOperationsInput
  cap: DecimalFieldUpdateOperationsInput
  commission: DecimalFieldUpdateOperationsInput
  commissionRatio: DecimalFieldUpdateOperationsInput
  freeStake: DecimalFieldUpdateOperationsInput
  lastUpdatedBlockNumber: BigIntFieldUpdateOperationsInput
  lastUpdatedTimestamp: DateTimeFieldUpdateOperationsInput
  miners: MinersUpdateManyWithoutStakePoolsInput
  miningWorkersCount: IntFieldUpdateOperationsInput
  ownerAddress: StringFieldUpdateOperationsInput
  ownerReward: DecimalFieldUpdateOperationsInput
  pid: BigIntFieldUpdateOperationsInput
  releasingStake: DecimalFieldUpdateOperationsInput
  rewardAcc: DecimalFieldUpdateOperationsInput
  stakePoolActivities: StakePoolActivitiesUpdateManyWithoutStakePoolsInput
  stakePoolStakers: StakePoolStakersUpdateManyWithoutStakePoolsInput
  stakersCount: IntFieldUpdateOperationsInput
  totalShares: DecimalFieldUpdateOperationsInput
  totalStake: DecimalFieldUpdateOperationsInput
  usedStake: DecimalFieldUpdateOperationsInput
  workerActivities: WorkerActivitiesUpdateManyWithoutStakePoolsInput
  workers: WorkersUpdateManyWithoutStakePoolsInput
  workersCount: IntFieldUpdateOperationsInput
}

input StakePoolsUpdateWithoutMinersInput {
  accounts: AccountsUpdateOneRequiredWithoutStakePoolsInput
  apr: DecimalFieldUpdateOperationsInput
  cap: DecimalFieldUpdateOperationsInput
  commission: DecimalFieldUpdateOperationsInput
  commissionRatio: DecimalFieldUpdateOperationsInput
  freeStake: DecimalFieldUpdateOperationsInput
  lastUpdatedBlockNumber: BigIntFieldUpdateOperationsInput
  lastUpdatedTimestamp: DateTimeFieldUpdateOperationsInput
  miningWorkersCount: IntFieldUpdateOperationsInput
  ownerAddress: StringFieldUpdateOperationsInput
  ownerReward: DecimalFieldUpdateOperationsInput
  pid: BigIntFieldUpdateOperationsInput
  releasingStake: DecimalFieldUpdateOperationsInput
  rewardAcc: DecimalFieldUpdateOperationsInput
  stakePoolActivities: StakePoolActivitiesUpdateManyWithoutStakePoolsInput
  stakePoolStakers: StakePoolStakersUpdateManyWithoutStakePoolsInput
  stakersCount: IntFieldUpdateOperationsInput
  totalShares: DecimalFieldUpdateOperationsInput
  totalStake: DecimalFieldUpdateOperationsInput
  usedStake: DecimalFieldUpdateOperationsInput
  workerActivities: WorkerActivitiesUpdateManyWithoutStakePoolsInput
  workers: WorkersUpdateManyWithoutStakePoolsInput
  workersCount: IntFieldUpdateOperationsInput
}

input StakePoolsUpdateWithoutStakePoolActivitiesInput {
  accounts: AccountsUpdateOneRequiredWithoutStakePoolsInput
  apr: DecimalFieldUpdateOperationsInput
  cap: DecimalFieldUpdateOperationsInput
  commission: DecimalFieldUpdateOperationsInput
  commissionRatio: DecimalFieldUpdateOperationsInput
  freeStake: DecimalFieldUpdateOperationsInput
  lastUpdatedBlockNumber: BigIntFieldUpdateOperationsInput
  lastUpdatedTimestamp: DateTimeFieldUpdateOperationsInput
  miners: MinersUpdateManyWithoutStakePoolsInput
  miningWorkersCount: IntFieldUpdateOperationsInput
  ownerAddress: StringFieldUpdateOperationsInput
  ownerReward: DecimalFieldUpdateOperationsInput
  pid: BigIntFieldUpdateOperationsInput
  releasingStake: DecimalFieldUpdateOperationsInput
  rewardAcc: DecimalFieldUpdateOperationsInput
  stakePoolStakers: StakePoolStakersUpdateManyWithoutStakePoolsInput
  stakersCount: IntFieldUpdateOperationsInput
  totalShares: DecimalFieldUpdateOperationsInput
  totalStake: DecimalFieldUpdateOperationsInput
  usedStake: DecimalFieldUpdateOperationsInput
  workerActivities: WorkerActivitiesUpdateManyWithoutStakePoolsInput
  workers: WorkersUpdateManyWithoutStakePoolsInput
  workersCount: IntFieldUpdateOperationsInput
}

input StakePoolsUpdateWithoutStakePoolStakersInput {
  accounts: AccountsUpdateOneRequiredWithoutStakePoolsInput
  apr: DecimalFieldUpdateOperationsInput
  cap: DecimalFieldUpdateOperationsInput
  commission: DecimalFieldUpdateOperationsInput
  commissionRatio: DecimalFieldUpdateOperationsInput
  freeStake: DecimalFieldUpdateOperationsInput
  lastUpdatedBlockNumber: BigIntFieldUpdateOperationsInput
  lastUpdatedTimestamp: DateTimeFieldUpdateOperationsInput
  miners: MinersUpdateManyWithoutStakePoolsInput
  miningWorkersCount: IntFieldUpdateOperationsInput
  ownerAddress: StringFieldUpdateOperationsInput
  ownerReward: DecimalFieldUpdateOperationsInput
  pid: BigIntFieldUpdateOperationsInput
  releasingStake: DecimalFieldUpdateOperationsInput
  rewardAcc: DecimalFieldUpdateOperationsInput
  stakePoolActivities: StakePoolActivitiesUpdateManyWithoutStakePoolsInput
  stakersCount: IntFieldUpdateOperationsInput
  totalShares: DecimalFieldUpdateOperationsInput
  totalStake: DecimalFieldUpdateOperationsInput
  usedStake: DecimalFieldUpdateOperationsInput
  workerActivities: WorkerActivitiesUpdateManyWithoutStakePoolsInput
  workers: WorkersUpdateManyWithoutStakePoolsInput
  workersCount: IntFieldUpdateOperationsInput
}

input StakePoolsUpdateWithoutWorkerActivitiesInput {
  accounts: AccountsUpdateOneRequiredWithoutStakePoolsInput
  apr: DecimalFieldUpdateOperationsInput
  cap: DecimalFieldUpdateOperationsInput
  commission: DecimalFieldUpdateOperationsInput
  commissionRatio: DecimalFieldUpdateOperationsInput
  freeStake: DecimalFieldUpdateOperationsInput
  lastUpdatedBlockNumber: BigIntFieldUpdateOperationsInput
  lastUpdatedTimestamp: DateTimeFieldUpdateOperationsInput
  miners: MinersUpdateManyWithoutStakePoolsInput
  miningWorkersCount: IntFieldUpdateOperationsInput
  ownerAddress: StringFieldUpdateOperationsInput
  ownerReward: DecimalFieldUpdateOperationsInput
  pid: BigIntFieldUpdateOperationsInput
  releasingStake: DecimalFieldUpdateOperationsInput
  rewardAcc: DecimalFieldUpdateOperationsInput
  stakePoolActivities: StakePoolActivitiesUpdateManyWithoutStakePoolsInput
  stakePoolStakers: StakePoolStakersUpdateManyWithoutStakePoolsInput
  stakersCount: IntFieldUpdateOperationsInput
  totalShares: DecimalFieldUpdateOperationsInput
  totalStake: DecimalFieldUpdateOperationsInput
  usedStake: DecimalFieldUpdateOperationsInput
  workers: WorkersUpdateManyWithoutStakePoolsInput
  workersCount: IntFieldUpdateOperationsInput
}

input StakePoolsUpdateWithoutWorkersInput {
  accounts: AccountsUpdateOneRequiredWithoutStakePoolsInput
  apr: DecimalFieldUpdateOperationsInput
  cap: DecimalFieldUpdateOperationsInput
  commission: DecimalFieldUpdateOperationsInput
  commissionRatio: DecimalFieldUpdateOperationsInput
  freeStake: DecimalFieldUpdateOperationsInput
  lastUpdatedBlockNumber: BigIntFieldUpdateOperationsInput
  lastUpdatedTimestamp: DateTimeFieldUpdateOperationsInput
  miners: MinersUpdateManyWithoutStakePoolsInput
  miningWorkersCount: IntFieldUpdateOperationsInput
  ownerAddress: StringFieldUpdateOperationsInput
  ownerReward: DecimalFieldUpdateOperationsInput
  pid: BigIntFieldUpdateOperationsInput
  releasingStake: DecimalFieldUpdateOperationsInput
  rewardAcc: DecimalFieldUpdateOperationsInput
  stakePoolActivities: StakePoolActivitiesUpdateManyWithoutStakePoolsInput
  stakePoolStakers: StakePoolStakersUpdateManyWithoutStakePoolsInput
  stakersCount: IntFieldUpdateOperationsInput
  totalShares: DecimalFieldUpdateOperationsInput
  totalStake: DecimalFieldUpdateOperationsInput
  usedStake: DecimalFieldUpdateOperationsInput
  workerActivities: WorkerActivitiesUpdateManyWithoutStakePoolsInput
  workersCount: IntFieldUpdateOperationsInput
}

input StakePoolsWhereInput {
  AND: [StakePoolsWhereInput!]
  NOT: [StakePoolsWhereInput!]
  OR: [StakePoolsWhereInput!]
  accounts: AccountsRelationFilter
  apr: DecimalFilter
  cap: DecimalFilter
  commission: DecimalFilter
  commissionRatio: DecimalFilter
  freeStake: DecimalFilter
  id: IntFilter
  lastUpdatedBlockNumber: BigIntFilter
  lastUpdatedTimestamp: DateTimeFilter
  miners: MinersListRelationFilter
  miningWorkersCount: IntFilter
  ownerAddress: StringFilter
  ownerId: IntFilter
  ownerReward: DecimalFilter
  pid: BigIntFilter
  releasingStake: DecimalFilter
  rewardAcc: DecimalFilter
  stakePoolActivities: StakePoolActivitiesListRelationFilter
  stakePoolStakers: StakePoolStakersListRelationFilter
  stakersCount: IntFilter
  totalShares: DecimalFilter
  totalStake: DecimalFilter
  usedStake: DecimalFilter
  workerActivities: WorkerActivitiesListRelationFilter
  workers: WorkersListRelationFilter
  workersCount: IntFilter
}

input StakePoolsWhereUniqueInput {
  id: Int
  pid: BigInt
}

type States {
  datetimeValue: DateTime
  decimalValue: Decimal
  id: Int!
  integerValue: Int
  key: String
  stringValue: String
  visible: Boolean
}

type StatesAvgAggregate {
  decimalValue: Decimal
  id: Float
  integerValue: Float
}

input StatesAvgOrderByAggregateInput {
  decimalValue: SortOrder
  id: SortOrder
  integerValue: SortOrder
}

type StatesCountAggregate {
  _all: Int!
  datetimeValue: Int!
  decimalValue: Int!
  id: Int!
  integerValue: Int!
  key: Int!
  stringValue: Int!
  visible: Int!
}

input StatesCountOrderByAggregateInput {
  datetimeValue: SortOrder
  decimalValue: SortOrder
  id: SortOrder
  integerValue: SortOrder
  key: SortOrder
  stringValue: SortOrder
  visible: SortOrder
}

type StatesGroupBy {
  _avg: StatesAvgAggregate
  _count: StatesCountAggregate
  _max: StatesMaxAggregate
  _min: StatesMinAggregate
  _sum: StatesSumAggregate
  datetimeValue: DateTime
  decimalValue: Decimal
  id: Int!
  integerValue: Int
  key: String
  stringValue: String
  visible: Boolean
}

type StatesMaxAggregate {
  datetimeValue: DateTime
  decimalValue: Decimal
  id: Int
  integerValue: Int
  key: String
  stringValue: String
  visible: Boolean
}

input StatesMaxOrderByAggregateInput {
  datetimeValue: SortOrder
  decimalValue: SortOrder
  id: SortOrder
  integerValue: SortOrder
  key: SortOrder
  stringValue: SortOrder
  visible: SortOrder
}

type StatesMinAggregate {
  datetimeValue: DateTime
  decimalValue: Decimal
  id: Int
  integerValue: Int
  key: String
  stringValue: String
  visible: Boolean
}

input StatesMinOrderByAggregateInput {
  datetimeValue: SortOrder
  decimalValue: SortOrder
  id: SortOrder
  integerValue: SortOrder
  key: SortOrder
  stringValue: SortOrder
  visible: SortOrder
}

input StatesOrderByWithAggregationInput {
  _avg: StatesAvgOrderByAggregateInput
  _count: StatesCountOrderByAggregateInput
  _max: StatesMaxOrderByAggregateInput
  _min: StatesMinOrderByAggregateInput
  _sum: StatesSumOrderByAggregateInput
  datetimeValue: SortOrder
  decimalValue: SortOrder
  id: SortOrder
  integerValue: SortOrder
  key: SortOrder
  stringValue: SortOrder
  visible: SortOrder
}

input StatesOrderByWithRelationInput {
  datetimeValue: SortOrder
  decimalValue: SortOrder
  id: SortOrder
  integerValue: SortOrder
  key: SortOrder
  stringValue: SortOrder
  visible: SortOrder
}

enum StatesScalarFieldEnum {
  datetimeValue
  decimalValue
  id
  integerValue
  key
  stringValue
  visible
}

input StatesScalarWhereWithAggregatesInput {
  AND: [StatesScalarWhereWithAggregatesInput!]
  NOT: [StatesScalarWhereWithAggregatesInput!]
  OR: [StatesScalarWhereWithAggregatesInput!]
  datetimeValue: DateTimeNullableWithAggregatesFilter
  decimalValue: DecimalNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  integerValue: IntNullableWithAggregatesFilter
  key: StringNullableWithAggregatesFilter
  stringValue: StringNullableWithAggregatesFilter
  visible: BoolNullableWithAggregatesFilter
}

type StatesSumAggregate {
  decimalValue: Decimal
  id: Int
  integerValue: Int
}

input StatesSumOrderByAggregateInput {
  decimalValue: SortOrder
  id: SortOrder
  integerValue: SortOrder
}

input StatesUpdateInput {
  datetimeValue: NullableDateTimeFieldUpdateOperationsInput
  decimalValue: NullableDecimalFieldUpdateOperationsInput
  integerValue: NullableIntFieldUpdateOperationsInput
  key: NullableStringFieldUpdateOperationsInput
  stringValue: NullableStringFieldUpdateOperationsInput
  visible: NullableBoolFieldUpdateOperationsInput
}

input StatesUpdateManyMutationInput {
  datetimeValue: NullableDateTimeFieldUpdateOperationsInput
  decimalValue: NullableDecimalFieldUpdateOperationsInput
  integerValue: NullableIntFieldUpdateOperationsInput
  key: NullableStringFieldUpdateOperationsInput
  stringValue: NullableStringFieldUpdateOperationsInput
  visible: NullableBoolFieldUpdateOperationsInput
}

input StatesWhereInput {
  AND: [StatesWhereInput!]
  NOT: [StatesWhereInput!]
  OR: [StatesWhereInput!]
  datetimeValue: DateTimeNullableFilter
  decimalValue: DecimalNullableFilter
  id: IntFilter
  integerValue: IntNullableFilter
  key: StringNullableFilter
  stringValue: StringNullableFilter
  visible: BoolNullableFilter
}

input StatesWhereUniqueInput {
  id: Int
}

input StringFieldUpdateOperationsInput {
  set: String
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input StringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

input StringNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedStringNullableFilter
  _min: NestedStringNullableFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableWithAggregatesFilter
  notIn: [String!]
  startsWith: String
}

input StringWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedStringFilter
  _min: NestedStringFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringWithAggregatesFilter
  notIn: [String!]
  startsWith: String
}

type WorkerActivities {
  accounts: Accounts
  blockNumber: BigInt!
  confidenceLevel: Int!
  ecdhPublicKey: String
  eventId: Int
  events: Events
  features: Int
  id: Int!
  infoLastUpdatedAt: DateTime!
  initialScore: Int!
  minerAccountAddress: String
  operatorAddress: String
  operatorId: Int
  pInit: Int!
  pInstant: Int!
  pid: BigInt
  runtimeVersion: Int!
  sMax: Decimal!
  sMin: Decimal!
  share: Decimal!
  stakePoolId: Int
  stakePools: StakePools
  state: String!
  timestamp: DateTime!
  tokenomicVersion: Int!
  totalReward: Decimal!
  type: String!
  v: Decimal!
  ve: Decimal!
  workerId: Int!
  workers: Workers!
}

type WorkerActivitiesAvgAggregate {
  blockNumber: Float
  confidenceLevel: Float
  eventId: Float
  features: Float
  id: Float
  initialScore: Float
  operatorId: Float
  pInit: Float
  pInstant: Float
  pid: Float
  runtimeVersion: Float
  sMax: Decimal
  sMin: Decimal
  share: Decimal
  stakePoolId: Float
  tokenomicVersion: Float
  totalReward: Decimal
  v: Decimal
  ve: Decimal
  workerId: Float
}

input WorkerActivitiesAvgOrderByAggregateInput {
  blockNumber: SortOrder
  confidenceLevel: SortOrder
  eventId: SortOrder
  features: SortOrder
  id: SortOrder
  initialScore: SortOrder
  operatorId: SortOrder
  pInit: SortOrder
  pInstant: SortOrder
  pid: SortOrder
  runtimeVersion: SortOrder
  sMax: SortOrder
  sMin: SortOrder
  share: SortOrder
  stakePoolId: SortOrder
  tokenomicVersion: SortOrder
  totalReward: SortOrder
  v: SortOrder
  ve: SortOrder
  workerId: SortOrder
}

type WorkerActivitiesCountAggregate {
  _all: Int!
  blockNumber: Int!
  confidenceLevel: Int!
  ecdhPublicKey: Int!
  eventId: Int!
  features: Int!
  id: Int!
  infoLastUpdatedAt: Int!
  initialScore: Int!
  minerAccountAddress: Int!
  operatorAddress: Int!
  operatorId: Int!
  pInit: Int!
  pInstant: Int!
  pid: Int!
  runtimeVersion: Int!
  sMax: Int!
  sMin: Int!
  share: Int!
  stakePoolId: Int!
  state: Int!
  timestamp: Int!
  tokenomicVersion: Int!
  totalReward: Int!
  type: Int!
  v: Int!
  ve: Int!
  workerId: Int!
}

input WorkerActivitiesCountOrderByAggregateInput {
  blockNumber: SortOrder
  confidenceLevel: SortOrder
  ecdhPublicKey: SortOrder
  eventId: SortOrder
  features: SortOrder
  id: SortOrder
  infoLastUpdatedAt: SortOrder
  initialScore: SortOrder
  minerAccountAddress: SortOrder
  operatorAddress: SortOrder
  operatorId: SortOrder
  pInit: SortOrder
  pInstant: SortOrder
  pid: SortOrder
  runtimeVersion: SortOrder
  sMax: SortOrder
  sMin: SortOrder
  share: SortOrder
  stakePoolId: SortOrder
  state: SortOrder
  timestamp: SortOrder
  tokenomicVersion: SortOrder
  totalReward: SortOrder
  type: SortOrder
  v: SortOrder
  ve: SortOrder
  workerId: SortOrder
}

input WorkerActivitiesCreateNestedManyWithoutEventsInput {
  connect: [WorkerActivitiesWhereUniqueInput!]
}

type WorkerActivitiesGroupBy {
  _avg: WorkerActivitiesAvgAggregate
  _count: WorkerActivitiesCountAggregate
  _max: WorkerActivitiesMaxAggregate
  _min: WorkerActivitiesMinAggregate
  _sum: WorkerActivitiesSumAggregate
  blockNumber: BigInt!
  confidenceLevel: Int!
  ecdhPublicKey: String
  eventId: Int
  features: Int
  id: Int!
  infoLastUpdatedAt: DateTime!
  initialScore: Int!
  minerAccountAddress: String
  operatorAddress: String
  operatorId: Int
  pInit: Int!
  pInstant: Int!
  pid: BigInt
  runtimeVersion: Int!
  sMax: Decimal!
  sMin: Decimal!
  share: Decimal!
  stakePoolId: Int
  state: String!
  timestamp: DateTime!
  tokenomicVersion: Int!
  totalReward: Decimal!
  type: String!
  v: Decimal!
  ve: Decimal!
  workerId: Int!
}

input WorkerActivitiesListRelationFilter {
  every: WorkerActivitiesWhereInput
  none: WorkerActivitiesWhereInput
  some: WorkerActivitiesWhereInput
}

type WorkerActivitiesMaxAggregate {
  blockNumber: BigInt
  confidenceLevel: Int
  ecdhPublicKey: String
  eventId: Int
  features: Int
  id: Int
  infoLastUpdatedAt: DateTime
  initialScore: Int
  minerAccountAddress: String
  operatorAddress: String
  operatorId: Int
  pInit: Int
  pInstant: Int
  pid: BigInt
  runtimeVersion: Int
  sMax: Decimal
  sMin: Decimal
  share: Decimal
  stakePoolId: Int
  state: String
  timestamp: DateTime
  tokenomicVersion: Int
  totalReward: Decimal
  type: String
  v: Decimal
  ve: Decimal
  workerId: Int
}

input WorkerActivitiesMaxOrderByAggregateInput {
  blockNumber: SortOrder
  confidenceLevel: SortOrder
  ecdhPublicKey: SortOrder
  eventId: SortOrder
  features: SortOrder
  id: SortOrder
  infoLastUpdatedAt: SortOrder
  initialScore: SortOrder
  minerAccountAddress: SortOrder
  operatorAddress: SortOrder
  operatorId: SortOrder
  pInit: SortOrder
  pInstant: SortOrder
  pid: SortOrder
  runtimeVersion: SortOrder
  sMax: SortOrder
  sMin: SortOrder
  share: SortOrder
  stakePoolId: SortOrder
  state: SortOrder
  timestamp: SortOrder
  tokenomicVersion: SortOrder
  totalReward: SortOrder
  type: SortOrder
  v: SortOrder
  ve: SortOrder
  workerId: SortOrder
}

type WorkerActivitiesMinAggregate {
  blockNumber: BigInt
  confidenceLevel: Int
  ecdhPublicKey: String
  eventId: Int
  features: Int
  id: Int
  infoLastUpdatedAt: DateTime
  initialScore: Int
  minerAccountAddress: String
  operatorAddress: String
  operatorId: Int
  pInit: Int
  pInstant: Int
  pid: BigInt
  runtimeVersion: Int
  sMax: Decimal
  sMin: Decimal
  share: Decimal
  stakePoolId: Int
  state: String
  timestamp: DateTime
  tokenomicVersion: Int
  totalReward: Decimal
  type: String
  v: Decimal
  ve: Decimal
  workerId: Int
}

input WorkerActivitiesMinOrderByAggregateInput {
  blockNumber: SortOrder
  confidenceLevel: SortOrder
  ecdhPublicKey: SortOrder
  eventId: SortOrder
  features: SortOrder
  id: SortOrder
  infoLastUpdatedAt: SortOrder
  initialScore: SortOrder
  minerAccountAddress: SortOrder
  operatorAddress: SortOrder
  operatorId: SortOrder
  pInit: SortOrder
  pInstant: SortOrder
  pid: SortOrder
  runtimeVersion: SortOrder
  sMax: SortOrder
  sMin: SortOrder
  share: SortOrder
  stakePoolId: SortOrder
  state: SortOrder
  timestamp: SortOrder
  tokenomicVersion: SortOrder
  totalReward: SortOrder
  type: SortOrder
  v: SortOrder
  ve: SortOrder
  workerId: SortOrder
}

input WorkerActivitiesOrderByRelationAggregateInput {
  _count: SortOrder
}

input WorkerActivitiesOrderByWithAggregationInput {
  _avg: WorkerActivitiesAvgOrderByAggregateInput
  _count: WorkerActivitiesCountOrderByAggregateInput
  _max: WorkerActivitiesMaxOrderByAggregateInput
  _min: WorkerActivitiesMinOrderByAggregateInput
  _sum: WorkerActivitiesSumOrderByAggregateInput
  blockNumber: SortOrder
  confidenceLevel: SortOrder
  ecdhPublicKey: SortOrder
  eventId: SortOrder
  features: SortOrder
  id: SortOrder
  infoLastUpdatedAt: SortOrder
  initialScore: SortOrder
  minerAccountAddress: SortOrder
  operatorAddress: SortOrder
  operatorId: SortOrder
  pInit: SortOrder
  pInstant: SortOrder
  pid: SortOrder
  runtimeVersion: SortOrder
  sMax: SortOrder
  sMin: SortOrder
  share: SortOrder
  stakePoolId: SortOrder
  state: SortOrder
  timestamp: SortOrder
  tokenomicVersion: SortOrder
  totalReward: SortOrder
  type: SortOrder
  v: SortOrder
  ve: SortOrder
  workerId: SortOrder
}

input WorkerActivitiesOrderByWithRelationInput {
  accounts: AccountsOrderByWithRelationInput
  blockNumber: SortOrder
  confidenceLevel: SortOrder
  ecdhPublicKey: SortOrder
  eventId: SortOrder
  events: EventsOrderByWithRelationInput
  features: SortOrder
  id: SortOrder
  infoLastUpdatedAt: SortOrder
  initialScore: SortOrder
  minerAccountAddress: SortOrder
  operatorAddress: SortOrder
  operatorId: SortOrder
  pInit: SortOrder
  pInstant: SortOrder
  pid: SortOrder
  runtimeVersion: SortOrder
  sMax: SortOrder
  sMin: SortOrder
  share: SortOrder
  stakePoolId: SortOrder
  stakePools: StakePoolsOrderByWithRelationInput
  state: SortOrder
  timestamp: SortOrder
  tokenomicVersion: SortOrder
  totalReward: SortOrder
  type: SortOrder
  v: SortOrder
  ve: SortOrder
  workerId: SortOrder
  workers: WorkersOrderByWithRelationInput
}

enum WorkerActivitiesScalarFieldEnum {
  blockNumber
  confidenceLevel
  ecdhPublicKey
  eventId
  features
  id
  infoLastUpdatedAt
  initialScore
  minerAccountAddress
  operatorAddress
  operatorId
  pInit
  pInstant
  pid
  runtimeVersion
  sMax
  sMin
  share
  stakePoolId
  state
  timestamp
  tokenomicVersion
  totalReward
  type
  v
  ve
  workerId
}

input WorkerActivitiesScalarWhereInput {
  AND: [WorkerActivitiesScalarWhereInput!]
  NOT: [WorkerActivitiesScalarWhereInput!]
  OR: [WorkerActivitiesScalarWhereInput!]
  blockNumber: BigIntFilter
  confidenceLevel: IntFilter
  ecdhPublicKey: StringNullableFilter
  eventId: IntNullableFilter
  features: IntNullableFilter
  id: IntFilter
  infoLastUpdatedAt: DateTimeFilter
  initialScore: IntFilter
  minerAccountAddress: StringNullableFilter
  operatorAddress: StringNullableFilter
  operatorId: IntNullableFilter
  pInit: IntFilter
  pInstant: IntFilter
  pid: BigIntNullableFilter
  runtimeVersion: IntFilter
  sMax: DecimalFilter
  sMin: DecimalFilter
  share: DecimalFilter
  stakePoolId: IntNullableFilter
  state: StringFilter
  timestamp: DateTimeFilter
  tokenomicVersion: IntFilter
  totalReward: DecimalFilter
  type: StringFilter
  v: DecimalFilter
  ve: DecimalFilter
  workerId: IntFilter
}

input WorkerActivitiesScalarWhereWithAggregatesInput {
  AND: [WorkerActivitiesScalarWhereWithAggregatesInput!]
  NOT: [WorkerActivitiesScalarWhereWithAggregatesInput!]
  OR: [WorkerActivitiesScalarWhereWithAggregatesInput!]
  blockNumber: BigIntWithAggregatesFilter
  confidenceLevel: IntWithAggregatesFilter
  ecdhPublicKey: StringNullableWithAggregatesFilter
  eventId: IntNullableWithAggregatesFilter
  features: IntNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  infoLastUpdatedAt: DateTimeWithAggregatesFilter
  initialScore: IntWithAggregatesFilter
  minerAccountAddress: StringNullableWithAggregatesFilter
  operatorAddress: StringNullableWithAggregatesFilter
  operatorId: IntNullableWithAggregatesFilter
  pInit: IntWithAggregatesFilter
  pInstant: IntWithAggregatesFilter
  pid: BigIntNullableWithAggregatesFilter
  runtimeVersion: IntWithAggregatesFilter
  sMax: DecimalWithAggregatesFilter
  sMin: DecimalWithAggregatesFilter
  share: DecimalWithAggregatesFilter
  stakePoolId: IntNullableWithAggregatesFilter
  state: StringWithAggregatesFilter
  timestamp: DateTimeWithAggregatesFilter
  tokenomicVersion: IntWithAggregatesFilter
  totalReward: DecimalWithAggregatesFilter
  type: StringWithAggregatesFilter
  v: DecimalWithAggregatesFilter
  ve: DecimalWithAggregatesFilter
  workerId: IntWithAggregatesFilter
}

type WorkerActivitiesSumAggregate {
  blockNumber: BigInt
  confidenceLevel: Int
  eventId: Int
  features: Int
  id: Int
  initialScore: Int
  operatorId: Int
  pInit: Int
  pInstant: Int
  pid: BigInt
  runtimeVersion: Int
  sMax: Decimal
  sMin: Decimal
  share: Decimal
  stakePoolId: Int
  tokenomicVersion: Int
  totalReward: Decimal
  v: Decimal
  ve: Decimal
  workerId: Int
}

input WorkerActivitiesSumOrderByAggregateInput {
  blockNumber: SortOrder
  confidenceLevel: SortOrder
  eventId: SortOrder
  features: SortOrder
  id: SortOrder
  initialScore: SortOrder
  operatorId: SortOrder
  pInit: SortOrder
  pInstant: SortOrder
  pid: SortOrder
  runtimeVersion: SortOrder
  sMax: SortOrder
  sMin: SortOrder
  share: SortOrder
  stakePoolId: SortOrder
  tokenomicVersion: SortOrder
  totalReward: SortOrder
  v: SortOrder
  ve: SortOrder
  workerId: SortOrder
}

input WorkerActivitiesUpdateInput {
  accounts: AccountsUpdateOneWithoutWorkerActivitiesInput
  blockNumber: BigIntFieldUpdateOperationsInput
  confidenceLevel: IntFieldUpdateOperationsInput
  ecdhPublicKey: NullableStringFieldUpdateOperationsInput
  events: EventsUpdateOneWithoutWorkerActivitiesInput
  features: NullableIntFieldUpdateOperationsInput
  infoLastUpdatedAt: DateTimeFieldUpdateOperationsInput
  initialScore: IntFieldUpdateOperationsInput
  minerAccountAddress: NullableStringFieldUpdateOperationsInput
  operatorAddress: NullableStringFieldUpdateOperationsInput
  pInit: IntFieldUpdateOperationsInput
  pInstant: IntFieldUpdateOperationsInput
  pid: NullableBigIntFieldUpdateOperationsInput
  runtimeVersion: IntFieldUpdateOperationsInput
  sMax: DecimalFieldUpdateOperationsInput
  sMin: DecimalFieldUpdateOperationsInput
  share: DecimalFieldUpdateOperationsInput
  stakePools: StakePoolsUpdateOneWithoutWorkerActivitiesInput
  state: StringFieldUpdateOperationsInput
  timestamp: DateTimeFieldUpdateOperationsInput
  tokenomicVersion: IntFieldUpdateOperationsInput
  totalReward: DecimalFieldUpdateOperationsInput
  type: StringFieldUpdateOperationsInput
  v: DecimalFieldUpdateOperationsInput
  ve: DecimalFieldUpdateOperationsInput
  workers: WorkersUpdateOneRequiredWithoutWorkerActivitiesInput
}

input WorkerActivitiesUpdateManyMutationInput {
  blockNumber: BigIntFieldUpdateOperationsInput
  confidenceLevel: IntFieldUpdateOperationsInput
  ecdhPublicKey: NullableStringFieldUpdateOperationsInput
  features: NullableIntFieldUpdateOperationsInput
  infoLastUpdatedAt: DateTimeFieldUpdateOperationsInput
  initialScore: IntFieldUpdateOperationsInput
  minerAccountAddress: NullableStringFieldUpdateOperationsInput
  operatorAddress: NullableStringFieldUpdateOperationsInput
  pInit: IntFieldUpdateOperationsInput
  pInstant: IntFieldUpdateOperationsInput
  pid: NullableBigIntFieldUpdateOperationsInput
  runtimeVersion: IntFieldUpdateOperationsInput
  sMax: DecimalFieldUpdateOperationsInput
  sMin: DecimalFieldUpdateOperationsInput
  share: DecimalFieldUpdateOperationsInput
  state: StringFieldUpdateOperationsInput
  timestamp: DateTimeFieldUpdateOperationsInput
  tokenomicVersion: IntFieldUpdateOperationsInput
  totalReward: DecimalFieldUpdateOperationsInput
  type: StringFieldUpdateOperationsInput
  v: DecimalFieldUpdateOperationsInput
  ve: DecimalFieldUpdateOperationsInput
}

input WorkerActivitiesUpdateManyWithWhereWithoutAccountsInput {
  data: WorkerActivitiesUpdateManyMutationInput!
  where: WorkerActivitiesScalarWhereInput!
}

input WorkerActivitiesUpdateManyWithWhereWithoutEventsInput {
  data: WorkerActivitiesUpdateManyMutationInput!
  where: WorkerActivitiesScalarWhereInput!
}

input WorkerActivitiesUpdateManyWithWhereWithoutStakePoolsInput {
  data: WorkerActivitiesUpdateManyMutationInput!
  where: WorkerActivitiesScalarWhereInput!
}

input WorkerActivitiesUpdateManyWithWhereWithoutWorkersInput {
  data: WorkerActivitiesUpdateManyMutationInput!
  where: WorkerActivitiesScalarWhereInput!
}

input WorkerActivitiesUpdateManyWithoutAccountsInput {
  connect: [WorkerActivitiesWhereUniqueInput!]
  delete: [WorkerActivitiesWhereUniqueInput!]
  deleteMany: [WorkerActivitiesScalarWhereInput!]
  disconnect: [WorkerActivitiesWhereUniqueInput!]
  set: [WorkerActivitiesWhereUniqueInput!]
  update: [WorkerActivitiesUpdateWithWhereUniqueWithoutAccountsInput!]
  updateMany: [WorkerActivitiesUpdateManyWithWhereWithoutAccountsInput!]
}

input WorkerActivitiesUpdateManyWithoutEventsInput {
  connect: [WorkerActivitiesWhereUniqueInput!]
  delete: [WorkerActivitiesWhereUniqueInput!]
  deleteMany: [WorkerActivitiesScalarWhereInput!]
  disconnect: [WorkerActivitiesWhereUniqueInput!]
  set: [WorkerActivitiesWhereUniqueInput!]
  update: [WorkerActivitiesUpdateWithWhereUniqueWithoutEventsInput!]
  updateMany: [WorkerActivitiesUpdateManyWithWhereWithoutEventsInput!]
}

input WorkerActivitiesUpdateManyWithoutStakePoolsInput {
  connect: [WorkerActivitiesWhereUniqueInput!]
  delete: [WorkerActivitiesWhereUniqueInput!]
  deleteMany: [WorkerActivitiesScalarWhereInput!]
  disconnect: [WorkerActivitiesWhereUniqueInput!]
  set: [WorkerActivitiesWhereUniqueInput!]
  update: [WorkerActivitiesUpdateWithWhereUniqueWithoutStakePoolsInput!]
  updateMany: [WorkerActivitiesUpdateManyWithWhereWithoutStakePoolsInput!]
}

input WorkerActivitiesUpdateManyWithoutWorkersInput {
  connect: [WorkerActivitiesWhereUniqueInput!]
  delete: [WorkerActivitiesWhereUniqueInput!]
  deleteMany: [WorkerActivitiesScalarWhereInput!]
  disconnect: [WorkerActivitiesWhereUniqueInput!]
  set: [WorkerActivitiesWhereUniqueInput!]
  update: [WorkerActivitiesUpdateWithWhereUniqueWithoutWorkersInput!]
  updateMany: [WorkerActivitiesUpdateManyWithWhereWithoutWorkersInput!]
}

input WorkerActivitiesUpdateWithWhereUniqueWithoutAccountsInput {
  data: WorkerActivitiesUpdateWithoutAccountsInput!
  where: WorkerActivitiesWhereUniqueInput!
}

input WorkerActivitiesUpdateWithWhereUniqueWithoutEventsInput {
  data: WorkerActivitiesUpdateWithoutEventsInput!
  where: WorkerActivitiesWhereUniqueInput!
}

input WorkerActivitiesUpdateWithWhereUniqueWithoutStakePoolsInput {
  data: WorkerActivitiesUpdateWithoutStakePoolsInput!
  where: WorkerActivitiesWhereUniqueInput!
}

input WorkerActivitiesUpdateWithWhereUniqueWithoutWorkersInput {
  data: WorkerActivitiesUpdateWithoutWorkersInput!
  where: WorkerActivitiesWhereUniqueInput!
}

input WorkerActivitiesUpdateWithoutAccountsInput {
  blockNumber: BigIntFieldUpdateOperationsInput
  confidenceLevel: IntFieldUpdateOperationsInput
  ecdhPublicKey: NullableStringFieldUpdateOperationsInput
  events: EventsUpdateOneWithoutWorkerActivitiesInput
  features: NullableIntFieldUpdateOperationsInput
  infoLastUpdatedAt: DateTimeFieldUpdateOperationsInput
  initialScore: IntFieldUpdateOperationsInput
  minerAccountAddress: NullableStringFieldUpdateOperationsInput
  operatorAddress: NullableStringFieldUpdateOperationsInput
  pInit: IntFieldUpdateOperationsInput
  pInstant: IntFieldUpdateOperationsInput
  pid: NullableBigIntFieldUpdateOperationsInput
  runtimeVersion: IntFieldUpdateOperationsInput
  sMax: DecimalFieldUpdateOperationsInput
  sMin: DecimalFieldUpdateOperationsInput
  share: DecimalFieldUpdateOperationsInput
  stakePools: StakePoolsUpdateOneWithoutWorkerActivitiesInput
  state: StringFieldUpdateOperationsInput
  timestamp: DateTimeFieldUpdateOperationsInput
  tokenomicVersion: IntFieldUpdateOperationsInput
  totalReward: DecimalFieldUpdateOperationsInput
  type: StringFieldUpdateOperationsInput
  v: DecimalFieldUpdateOperationsInput
  ve: DecimalFieldUpdateOperationsInput
  workers: WorkersUpdateOneRequiredWithoutWorkerActivitiesInput
}

input WorkerActivitiesUpdateWithoutEventsInput {
  accounts: AccountsUpdateOneWithoutWorkerActivitiesInput
  blockNumber: BigIntFieldUpdateOperationsInput
  confidenceLevel: IntFieldUpdateOperationsInput
  ecdhPublicKey: NullableStringFieldUpdateOperationsInput
  features: NullableIntFieldUpdateOperationsInput
  infoLastUpdatedAt: DateTimeFieldUpdateOperationsInput
  initialScore: IntFieldUpdateOperationsInput
  minerAccountAddress: NullableStringFieldUpdateOperationsInput
  operatorAddress: NullableStringFieldUpdateOperationsInput
  pInit: IntFieldUpdateOperationsInput
  pInstant: IntFieldUpdateOperationsInput
  pid: NullableBigIntFieldUpdateOperationsInput
  runtimeVersion: IntFieldUpdateOperationsInput
  sMax: DecimalFieldUpdateOperationsInput
  sMin: DecimalFieldUpdateOperationsInput
  share: DecimalFieldUpdateOperationsInput
  stakePools: StakePoolsUpdateOneWithoutWorkerActivitiesInput
  state: StringFieldUpdateOperationsInput
  timestamp: DateTimeFieldUpdateOperationsInput
  tokenomicVersion: IntFieldUpdateOperationsInput
  totalReward: DecimalFieldUpdateOperationsInput
  type: StringFieldUpdateOperationsInput
  v: DecimalFieldUpdateOperationsInput
  ve: DecimalFieldUpdateOperationsInput
  workers: WorkersUpdateOneRequiredWithoutWorkerActivitiesInput
}

input WorkerActivitiesUpdateWithoutStakePoolsInput {
  accounts: AccountsUpdateOneWithoutWorkerActivitiesInput
  blockNumber: BigIntFieldUpdateOperationsInput
  confidenceLevel: IntFieldUpdateOperationsInput
  ecdhPublicKey: NullableStringFieldUpdateOperationsInput
  events: EventsUpdateOneWithoutWorkerActivitiesInput
  features: NullableIntFieldUpdateOperationsInput
  infoLastUpdatedAt: DateTimeFieldUpdateOperationsInput
  initialScore: IntFieldUpdateOperationsInput
  minerAccountAddress: NullableStringFieldUpdateOperationsInput
  operatorAddress: NullableStringFieldUpdateOperationsInput
  pInit: IntFieldUpdateOperationsInput
  pInstant: IntFieldUpdateOperationsInput
  pid: NullableBigIntFieldUpdateOperationsInput
  runtimeVersion: IntFieldUpdateOperationsInput
  sMax: DecimalFieldUpdateOperationsInput
  sMin: DecimalFieldUpdateOperationsInput
  share: DecimalFieldUpdateOperationsInput
  state: StringFieldUpdateOperationsInput
  timestamp: DateTimeFieldUpdateOperationsInput
  tokenomicVersion: IntFieldUpdateOperationsInput
  totalReward: DecimalFieldUpdateOperationsInput
  type: StringFieldUpdateOperationsInput
  v: DecimalFieldUpdateOperationsInput
  ve: DecimalFieldUpdateOperationsInput
  workers: WorkersUpdateOneRequiredWithoutWorkerActivitiesInput
}

input WorkerActivitiesUpdateWithoutWorkersInput {
  accounts: AccountsUpdateOneWithoutWorkerActivitiesInput
  blockNumber: BigIntFieldUpdateOperationsInput
  confidenceLevel: IntFieldUpdateOperationsInput
  ecdhPublicKey: NullableStringFieldUpdateOperationsInput
  events: EventsUpdateOneWithoutWorkerActivitiesInput
  features: NullableIntFieldUpdateOperationsInput
  infoLastUpdatedAt: DateTimeFieldUpdateOperationsInput
  initialScore: IntFieldUpdateOperationsInput
  minerAccountAddress: NullableStringFieldUpdateOperationsInput
  operatorAddress: NullableStringFieldUpdateOperationsInput
  pInit: IntFieldUpdateOperationsInput
  pInstant: IntFieldUpdateOperationsInput
  pid: NullableBigIntFieldUpdateOperationsInput
  runtimeVersion: IntFieldUpdateOperationsInput
  sMax: DecimalFieldUpdateOperationsInput
  sMin: DecimalFieldUpdateOperationsInput
  share: DecimalFieldUpdateOperationsInput
  stakePools: StakePoolsUpdateOneWithoutWorkerActivitiesInput
  state: StringFieldUpdateOperationsInput
  timestamp: DateTimeFieldUpdateOperationsInput
  tokenomicVersion: IntFieldUpdateOperationsInput
  totalReward: DecimalFieldUpdateOperationsInput
  type: StringFieldUpdateOperationsInput
  v: DecimalFieldUpdateOperationsInput
  ve: DecimalFieldUpdateOperationsInput
}

input WorkerActivitiesWhereInput {
  AND: [WorkerActivitiesWhereInput!]
  NOT: [WorkerActivitiesWhereInput!]
  OR: [WorkerActivitiesWhereInput!]
  accounts: AccountsRelationFilter
  blockNumber: BigIntFilter
  confidenceLevel: IntFilter
  ecdhPublicKey: StringNullableFilter
  eventId: IntNullableFilter
  events: EventsRelationFilter
  features: IntNullableFilter
  id: IntFilter
  infoLastUpdatedAt: DateTimeFilter
  initialScore: IntFilter
  minerAccountAddress: StringNullableFilter
  operatorAddress: StringNullableFilter
  operatorId: IntNullableFilter
  pInit: IntFilter
  pInstant: IntFilter
  pid: BigIntNullableFilter
  runtimeVersion: IntFilter
  sMax: DecimalFilter
  sMin: DecimalFilter
  share: DecimalFilter
  stakePoolId: IntNullableFilter
  stakePools: StakePoolsRelationFilter
  state: StringFilter
  timestamp: DateTimeFilter
  tokenomicVersion: IntFilter
  totalReward: DecimalFilter
  type: StringFilter
  v: DecimalFilter
  ve: DecimalFilter
  workerId: IntFilter
  workers: WorkersRelationFilter
}

input WorkerActivitiesWhereUniqueInput {
  id: Int
}

type Workers {
  _count: WorkersCount
  accounts: Accounts
  addedAtBlockNumber: BigInt!
  addedAtUpdatedTimestamp: DateTime!
  confidenceLevel: Int!
  ecdhPublicKey: String
  features: Int
  id: Int!
  infoLastUpdatedAt: DateTime!
  initialScore: Int!
  lastUpdatedBlockNumber: BigInt!
  lastUpdatedTimestamp: DateTime!
  minerAccountAddress: String
  miners(cursor: MinersWhereUniqueInput, distinct: [MinersScalarFieldEnum!], orderBy: [MinersOrderByWithRelationInput!], skip: Int, take: Int, where: MinersWhereInput): [Miners!]!
  operatorAddress: String
  operatorId: Int
  pInit: Int!
  pInstant: Int!
  pid: BigInt
  publicKey: String!
  removedAtBlockNumber: BigInt
  removedAtUpdatedTimestamp: DateTime
  runtimeVersion: Int!
  sMax: Decimal!
  sMin: Decimal!
  share: Decimal!
  stakePoolId: Int
  stakePools: StakePools
  state: String!
  totalReward: Decimal!
  v: Decimal!
  ve: Decimal!
  workerActivities(cursor: WorkerActivitiesWhereUniqueInput, distinct: [WorkerActivitiesScalarFieldEnum!], orderBy: [WorkerActivitiesOrderByWithRelationInput!], skip: Int, take: Int, where: WorkerActivitiesWhereInput): [WorkerActivities!]!
}

type WorkersAvgAggregate {
  addedAtBlockNumber: Float
  confidenceLevel: Float
  features: Float
  id: Float
  initialScore: Float
  lastUpdatedBlockNumber: Float
  operatorId: Float
  pInit: Float
  pInstant: Float
  pid: Float
  removedAtBlockNumber: Float
  runtimeVersion: Float
  sMax: Decimal
  sMin: Decimal
  share: Decimal
  stakePoolId: Float
  totalReward: Decimal
  v: Decimal
  ve: Decimal
}

input WorkersAvgOrderByAggregateInput {
  addedAtBlockNumber: SortOrder
  confidenceLevel: SortOrder
  features: SortOrder
  id: SortOrder
  initialScore: SortOrder
  lastUpdatedBlockNumber: SortOrder
  operatorId: SortOrder
  pInit: SortOrder
  pInstant: SortOrder
  pid: SortOrder
  removedAtBlockNumber: SortOrder
  runtimeVersion: SortOrder
  sMax: SortOrder
  sMin: SortOrder
  share: SortOrder
  stakePoolId: SortOrder
  totalReward: SortOrder
  v: SortOrder
  ve: SortOrder
}

type WorkersCount {
  miners: Int!
  workerActivities: Int!
}

type WorkersCountAggregate {
  _all: Int!
  addedAtBlockNumber: Int!
  addedAtUpdatedTimestamp: Int!
  confidenceLevel: Int!
  ecdhPublicKey: Int!
  features: Int!
  id: Int!
  infoLastUpdatedAt: Int!
  initialScore: Int!
  lastUpdatedBlockNumber: Int!
  lastUpdatedTimestamp: Int!
  minerAccountAddress: Int!
  operatorAddress: Int!
  operatorId: Int!
  pInit: Int!
  pInstant: Int!
  pid: Int!
  publicKey: Int!
  removedAtBlockNumber: Int!
  removedAtUpdatedTimestamp: Int!
  runtimeVersion: Int!
  sMax: Int!
  sMin: Int!
  share: Int!
  stakePoolId: Int!
  state: Int!
  totalReward: Int!
  v: Int!
  ve: Int!
}

input WorkersCountOrderByAggregateInput {
  addedAtBlockNumber: SortOrder
  addedAtUpdatedTimestamp: SortOrder
  confidenceLevel: SortOrder
  ecdhPublicKey: SortOrder
  features: SortOrder
  id: SortOrder
  infoLastUpdatedAt: SortOrder
  initialScore: SortOrder
  lastUpdatedBlockNumber: SortOrder
  lastUpdatedTimestamp: SortOrder
  minerAccountAddress: SortOrder
  operatorAddress: SortOrder
  operatorId: SortOrder
  pInit: SortOrder
  pInstant: SortOrder
  pid: SortOrder
  publicKey: SortOrder
  removedAtBlockNumber: SortOrder
  removedAtUpdatedTimestamp: SortOrder
  runtimeVersion: SortOrder
  sMax: SortOrder
  sMin: SortOrder
  share: SortOrder
  stakePoolId: SortOrder
  state: SortOrder
  totalReward: SortOrder
  v: SortOrder
  ve: SortOrder
}

type WorkersGroupBy {
  _avg: WorkersAvgAggregate
  _count: WorkersCountAggregate
  _max: WorkersMaxAggregate
  _min: WorkersMinAggregate
  _sum: WorkersSumAggregate
  addedAtBlockNumber: BigInt!
  addedAtUpdatedTimestamp: DateTime!
  confidenceLevel: Int!
  ecdhPublicKey: String
  features: Int
  id: Int!
  infoLastUpdatedAt: DateTime!
  initialScore: Int!
  lastUpdatedBlockNumber: BigInt!
  lastUpdatedTimestamp: DateTime!
  minerAccountAddress: String
  operatorAddress: String
  operatorId: Int
  pInit: Int!
  pInstant: Int!
  pid: BigInt
  publicKey: String!
  removedAtBlockNumber: BigInt
  removedAtUpdatedTimestamp: DateTime
  runtimeVersion: Int!
  sMax: Decimal!
  sMin: Decimal!
  share: Decimal!
  stakePoolId: Int
  state: String!
  totalReward: Decimal!
  v: Decimal!
  ve: Decimal!
}

input WorkersListRelationFilter {
  every: WorkersWhereInput
  none: WorkersWhereInput
  some: WorkersWhereInput
}

type WorkersMaxAggregate {
  addedAtBlockNumber: BigInt
  addedAtUpdatedTimestamp: DateTime
  confidenceLevel: Int
  ecdhPublicKey: String
  features: Int
  id: Int
  infoLastUpdatedAt: DateTime
  initialScore: Int
  lastUpdatedBlockNumber: BigInt
  lastUpdatedTimestamp: DateTime
  minerAccountAddress: String
  operatorAddress: String
  operatorId: Int
  pInit: Int
  pInstant: Int
  pid: BigInt
  publicKey: String
  removedAtBlockNumber: BigInt
  removedAtUpdatedTimestamp: DateTime
  runtimeVersion: Int
  sMax: Decimal
  sMin: Decimal
  share: Decimal
  stakePoolId: Int
  state: String
  totalReward: Decimal
  v: Decimal
  ve: Decimal
}

input WorkersMaxOrderByAggregateInput {
  addedAtBlockNumber: SortOrder
  addedAtUpdatedTimestamp: SortOrder
  confidenceLevel: SortOrder
  ecdhPublicKey: SortOrder
  features: SortOrder
  id: SortOrder
  infoLastUpdatedAt: SortOrder
  initialScore: SortOrder
  lastUpdatedBlockNumber: SortOrder
  lastUpdatedTimestamp: SortOrder
  minerAccountAddress: SortOrder
  operatorAddress: SortOrder
  operatorId: SortOrder
  pInit: SortOrder
  pInstant: SortOrder
  pid: SortOrder
  publicKey: SortOrder
  removedAtBlockNumber: SortOrder
  removedAtUpdatedTimestamp: SortOrder
  runtimeVersion: SortOrder
  sMax: SortOrder
  sMin: SortOrder
  share: SortOrder
  stakePoolId: SortOrder
  state: SortOrder
  totalReward: SortOrder
  v: SortOrder
  ve: SortOrder
}

type WorkersMinAggregate {
  addedAtBlockNumber: BigInt
  addedAtUpdatedTimestamp: DateTime
  confidenceLevel: Int
  ecdhPublicKey: String
  features: Int
  id: Int
  infoLastUpdatedAt: DateTime
  initialScore: Int
  lastUpdatedBlockNumber: BigInt
  lastUpdatedTimestamp: DateTime
  minerAccountAddress: String
  operatorAddress: String
  operatorId: Int
  pInit: Int
  pInstant: Int
  pid: BigInt
  publicKey: String
  removedAtBlockNumber: BigInt
  removedAtUpdatedTimestamp: DateTime
  runtimeVersion: Int
  sMax: Decimal
  sMin: Decimal
  share: Decimal
  stakePoolId: Int
  state: String
  totalReward: Decimal
  v: Decimal
  ve: Decimal
}

input WorkersMinOrderByAggregateInput {
  addedAtBlockNumber: SortOrder
  addedAtUpdatedTimestamp: SortOrder
  confidenceLevel: SortOrder
  ecdhPublicKey: SortOrder
  features: SortOrder
  id: SortOrder
  infoLastUpdatedAt: SortOrder
  initialScore: SortOrder
  lastUpdatedBlockNumber: SortOrder
  lastUpdatedTimestamp: SortOrder
  minerAccountAddress: SortOrder
  operatorAddress: SortOrder
  operatorId: SortOrder
  pInit: SortOrder
  pInstant: SortOrder
  pid: SortOrder
  publicKey: SortOrder
  removedAtBlockNumber: SortOrder
  removedAtUpdatedTimestamp: SortOrder
  runtimeVersion: SortOrder
  sMax: SortOrder
  sMin: SortOrder
  share: SortOrder
  stakePoolId: SortOrder
  state: SortOrder
  totalReward: SortOrder
  v: SortOrder
  ve: SortOrder
}

input WorkersOrderByRelationAggregateInput {
  _count: SortOrder
}

input WorkersOrderByWithAggregationInput {
  _avg: WorkersAvgOrderByAggregateInput
  _count: WorkersCountOrderByAggregateInput
  _max: WorkersMaxOrderByAggregateInput
  _min: WorkersMinOrderByAggregateInput
  _sum: WorkersSumOrderByAggregateInput
  addedAtBlockNumber: SortOrder
  addedAtUpdatedTimestamp: SortOrder
  confidenceLevel: SortOrder
  ecdhPublicKey: SortOrder
  features: SortOrder
  id: SortOrder
  infoLastUpdatedAt: SortOrder
  initialScore: SortOrder
  lastUpdatedBlockNumber: SortOrder
  lastUpdatedTimestamp: SortOrder
  minerAccountAddress: SortOrder
  operatorAddress: SortOrder
  operatorId: SortOrder
  pInit: SortOrder
  pInstant: SortOrder
  pid: SortOrder
  publicKey: SortOrder
  removedAtBlockNumber: SortOrder
  removedAtUpdatedTimestamp: SortOrder
  runtimeVersion: SortOrder
  sMax: SortOrder
  sMin: SortOrder
  share: SortOrder
  stakePoolId: SortOrder
  state: SortOrder
  totalReward: SortOrder
  v: SortOrder
  ve: SortOrder
}

input WorkersOrderByWithRelationInput {
  accounts: AccountsOrderByWithRelationInput
  addedAtBlockNumber: SortOrder
  addedAtUpdatedTimestamp: SortOrder
  confidenceLevel: SortOrder
  ecdhPublicKey: SortOrder
  features: SortOrder
  id: SortOrder
  infoLastUpdatedAt: SortOrder
  initialScore: SortOrder
  lastUpdatedBlockNumber: SortOrder
  lastUpdatedTimestamp: SortOrder
  minerAccountAddress: SortOrder
  miners: MinersOrderByRelationAggregateInput
  operatorAddress: SortOrder
  operatorId: SortOrder
  pInit: SortOrder
  pInstant: SortOrder
  pid: SortOrder
  publicKey: SortOrder
  removedAtBlockNumber: SortOrder
  removedAtUpdatedTimestamp: SortOrder
  runtimeVersion: SortOrder
  sMax: SortOrder
  sMin: SortOrder
  share: SortOrder
  stakePoolId: SortOrder
  stakePools: StakePoolsOrderByWithRelationInput
  state: SortOrder
  totalReward: SortOrder
  v: SortOrder
  ve: SortOrder
  workerActivities: WorkerActivitiesOrderByRelationAggregateInput
}

input WorkersRelationFilter {
  is: WorkersWhereInput
  isNot: WorkersWhereInput
}

enum WorkersScalarFieldEnum {
  addedAtBlockNumber
  addedAtUpdatedTimestamp
  confidenceLevel
  ecdhPublicKey
  features
  id
  infoLastUpdatedAt
  initialScore
  lastUpdatedBlockNumber
  lastUpdatedTimestamp
  minerAccountAddress
  operatorAddress
  operatorId
  pInit
  pInstant
  pid
  publicKey
  removedAtBlockNumber
  removedAtUpdatedTimestamp
  runtimeVersion
  sMax
  sMin
  share
  stakePoolId
  state
  totalReward
  v
  ve
}

input WorkersScalarWhereInput {
  AND: [WorkersScalarWhereInput!]
  NOT: [WorkersScalarWhereInput!]
  OR: [WorkersScalarWhereInput!]
  addedAtBlockNumber: BigIntFilter
  addedAtUpdatedTimestamp: DateTimeFilter
  confidenceLevel: IntFilter
  ecdhPublicKey: StringNullableFilter
  features: IntNullableFilter
  id: IntFilter
  infoLastUpdatedAt: DateTimeFilter
  initialScore: IntFilter
  lastUpdatedBlockNumber: BigIntFilter
  lastUpdatedTimestamp: DateTimeFilter
  minerAccountAddress: StringNullableFilter
  operatorAddress: StringNullableFilter
  operatorId: IntNullableFilter
  pInit: IntFilter
  pInstant: IntFilter
  pid: BigIntNullableFilter
  publicKey: StringFilter
  removedAtBlockNumber: BigIntNullableFilter
  removedAtUpdatedTimestamp: DateTimeNullableFilter
  runtimeVersion: IntFilter
  sMax: DecimalFilter
  sMin: DecimalFilter
  share: DecimalFilter
  stakePoolId: IntNullableFilter
  state: StringFilter
  totalReward: DecimalFilter
  v: DecimalFilter
  ve: DecimalFilter
}

input WorkersScalarWhereWithAggregatesInput {
  AND: [WorkersScalarWhereWithAggregatesInput!]
  NOT: [WorkersScalarWhereWithAggregatesInput!]
  OR: [WorkersScalarWhereWithAggregatesInput!]
  addedAtBlockNumber: BigIntWithAggregatesFilter
  addedAtUpdatedTimestamp: DateTimeWithAggregatesFilter
  confidenceLevel: IntWithAggregatesFilter
  ecdhPublicKey: StringNullableWithAggregatesFilter
  features: IntNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  infoLastUpdatedAt: DateTimeWithAggregatesFilter
  initialScore: IntWithAggregatesFilter
  lastUpdatedBlockNumber: BigIntWithAggregatesFilter
  lastUpdatedTimestamp: DateTimeWithAggregatesFilter
  minerAccountAddress: StringNullableWithAggregatesFilter
  operatorAddress: StringNullableWithAggregatesFilter
  operatorId: IntNullableWithAggregatesFilter
  pInit: IntWithAggregatesFilter
  pInstant: IntWithAggregatesFilter
  pid: BigIntNullableWithAggregatesFilter
  publicKey: StringWithAggregatesFilter
  removedAtBlockNumber: BigIntNullableWithAggregatesFilter
  removedAtUpdatedTimestamp: DateTimeNullableWithAggregatesFilter
  runtimeVersion: IntWithAggregatesFilter
  sMax: DecimalWithAggregatesFilter
  sMin: DecimalWithAggregatesFilter
  share: DecimalWithAggregatesFilter
  stakePoolId: IntNullableWithAggregatesFilter
  state: StringWithAggregatesFilter
  totalReward: DecimalWithAggregatesFilter
  v: DecimalWithAggregatesFilter
  ve: DecimalWithAggregatesFilter
}

type WorkersSumAggregate {
  addedAtBlockNumber: BigInt
  confidenceLevel: Int
  features: Int
  id: Int
  initialScore: Int
  lastUpdatedBlockNumber: BigInt
  operatorId: Int
  pInit: Int
  pInstant: Int
  pid: BigInt
  removedAtBlockNumber: BigInt
  runtimeVersion: Int
  sMax: Decimal
  sMin: Decimal
  share: Decimal
  stakePoolId: Int
  totalReward: Decimal
  v: Decimal
  ve: Decimal
}

input WorkersSumOrderByAggregateInput {
  addedAtBlockNumber: SortOrder
  confidenceLevel: SortOrder
  features: SortOrder
  id: SortOrder
  initialScore: SortOrder
  lastUpdatedBlockNumber: SortOrder
  operatorId: SortOrder
  pInit: SortOrder
  pInstant: SortOrder
  pid: SortOrder
  removedAtBlockNumber: SortOrder
  runtimeVersion: SortOrder
  sMax: SortOrder
  sMin: SortOrder
  share: SortOrder
  stakePoolId: SortOrder
  totalReward: SortOrder
  v: SortOrder
  ve: SortOrder
}

input WorkersUpdateInput {
  accounts: AccountsUpdateOneWithoutWorkersInput
  addedAtBlockNumber: BigIntFieldUpdateOperationsInput
  addedAtUpdatedTimestamp: DateTimeFieldUpdateOperationsInput
  confidenceLevel: IntFieldUpdateOperationsInput
  ecdhPublicKey: NullableStringFieldUpdateOperationsInput
  features: NullableIntFieldUpdateOperationsInput
  infoLastUpdatedAt: DateTimeFieldUpdateOperationsInput
  initialScore: IntFieldUpdateOperationsInput
  lastUpdatedBlockNumber: BigIntFieldUpdateOperationsInput
  lastUpdatedTimestamp: DateTimeFieldUpdateOperationsInput
  minerAccountAddress: NullableStringFieldUpdateOperationsInput
  miners: MinersUpdateManyWithoutWorkersInput
  operatorAddress: NullableStringFieldUpdateOperationsInput
  pInit: IntFieldUpdateOperationsInput
  pInstant: IntFieldUpdateOperationsInput
  pid: NullableBigIntFieldUpdateOperationsInput
  publicKey: StringFieldUpdateOperationsInput
  removedAtBlockNumber: NullableBigIntFieldUpdateOperationsInput
  removedAtUpdatedTimestamp: NullableDateTimeFieldUpdateOperationsInput
  runtimeVersion: IntFieldUpdateOperationsInput
  sMax: DecimalFieldUpdateOperationsInput
  sMin: DecimalFieldUpdateOperationsInput
  share: DecimalFieldUpdateOperationsInput
  stakePools: StakePoolsUpdateOneWithoutWorkersInput
  state: StringFieldUpdateOperationsInput
  totalReward: DecimalFieldUpdateOperationsInput
  v: DecimalFieldUpdateOperationsInput
  ve: DecimalFieldUpdateOperationsInput
  workerActivities: WorkerActivitiesUpdateManyWithoutWorkersInput
}

input WorkersUpdateManyMutationInput {
  addedAtBlockNumber: BigIntFieldUpdateOperationsInput
  addedAtUpdatedTimestamp: DateTimeFieldUpdateOperationsInput
  confidenceLevel: IntFieldUpdateOperationsInput
  ecdhPublicKey: NullableStringFieldUpdateOperationsInput
  features: NullableIntFieldUpdateOperationsInput
  infoLastUpdatedAt: DateTimeFieldUpdateOperationsInput
  initialScore: IntFieldUpdateOperationsInput
  lastUpdatedBlockNumber: BigIntFieldUpdateOperationsInput
  lastUpdatedTimestamp: DateTimeFieldUpdateOperationsInput
  minerAccountAddress: NullableStringFieldUpdateOperationsInput
  operatorAddress: NullableStringFieldUpdateOperationsInput
  pInit: IntFieldUpdateOperationsInput
  pInstant: IntFieldUpdateOperationsInput
  pid: NullableBigIntFieldUpdateOperationsInput
  publicKey: StringFieldUpdateOperationsInput
  removedAtBlockNumber: NullableBigIntFieldUpdateOperationsInput
  removedAtUpdatedTimestamp: NullableDateTimeFieldUpdateOperationsInput
  runtimeVersion: IntFieldUpdateOperationsInput
  sMax: DecimalFieldUpdateOperationsInput
  sMin: DecimalFieldUpdateOperationsInput
  share: DecimalFieldUpdateOperationsInput
  state: StringFieldUpdateOperationsInput
  totalReward: DecimalFieldUpdateOperationsInput
  v: DecimalFieldUpdateOperationsInput
  ve: DecimalFieldUpdateOperationsInput
}

input WorkersUpdateManyWithWhereWithoutAccountsInput {
  data: WorkersUpdateManyMutationInput!
  where: WorkersScalarWhereInput!
}

input WorkersUpdateManyWithWhereWithoutStakePoolsInput {
  data: WorkersUpdateManyMutationInput!
  where: WorkersScalarWhereInput!
}

input WorkersUpdateManyWithoutAccountsInput {
  connect: [WorkersWhereUniqueInput!]
  delete: [WorkersWhereUniqueInput!]
  deleteMany: [WorkersScalarWhereInput!]
  disconnect: [WorkersWhereUniqueInput!]
  set: [WorkersWhereUniqueInput!]
  update: [WorkersUpdateWithWhereUniqueWithoutAccountsInput!]
  updateMany: [WorkersUpdateManyWithWhereWithoutAccountsInput!]
}

input WorkersUpdateManyWithoutStakePoolsInput {
  connect: [WorkersWhereUniqueInput!]
  delete: [WorkersWhereUniqueInput!]
  deleteMany: [WorkersScalarWhereInput!]
  disconnect: [WorkersWhereUniqueInput!]
  set: [WorkersWhereUniqueInput!]
  update: [WorkersUpdateWithWhereUniqueWithoutStakePoolsInput!]
  updateMany: [WorkersUpdateManyWithWhereWithoutStakePoolsInput!]
}

input WorkersUpdateOneRequiredWithoutMinersInput {
  connect: WorkersWhereUniqueInput
  update: WorkersUpdateWithoutMinersInput
}

input WorkersUpdateOneRequiredWithoutWorkerActivitiesInput {
  connect: WorkersWhereUniqueInput
  update: WorkersUpdateWithoutWorkerActivitiesInput
}

input WorkersUpdateWithWhereUniqueWithoutAccountsInput {
  data: WorkersUpdateWithoutAccountsInput!
  where: WorkersWhereUniqueInput!
}

input WorkersUpdateWithWhereUniqueWithoutStakePoolsInput {
  data: WorkersUpdateWithoutStakePoolsInput!
  where: WorkersWhereUniqueInput!
}

input WorkersUpdateWithoutAccountsInput {
  addedAtBlockNumber: BigIntFieldUpdateOperationsInput
  addedAtUpdatedTimestamp: DateTimeFieldUpdateOperationsInput
  confidenceLevel: IntFieldUpdateOperationsInput
  ecdhPublicKey: NullableStringFieldUpdateOperationsInput
  features: NullableIntFieldUpdateOperationsInput
  infoLastUpdatedAt: DateTimeFieldUpdateOperationsInput
  initialScore: IntFieldUpdateOperationsInput
  lastUpdatedBlockNumber: BigIntFieldUpdateOperationsInput
  lastUpdatedTimestamp: DateTimeFieldUpdateOperationsInput
  minerAccountAddress: NullableStringFieldUpdateOperationsInput
  miners: MinersUpdateManyWithoutWorkersInput
  operatorAddress: NullableStringFieldUpdateOperationsInput
  pInit: IntFieldUpdateOperationsInput
  pInstant: IntFieldUpdateOperationsInput
  pid: NullableBigIntFieldUpdateOperationsInput
  publicKey: StringFieldUpdateOperationsInput
  removedAtBlockNumber: NullableBigIntFieldUpdateOperationsInput
  removedAtUpdatedTimestamp: NullableDateTimeFieldUpdateOperationsInput
  runtimeVersion: IntFieldUpdateOperationsInput
  sMax: DecimalFieldUpdateOperationsInput
  sMin: DecimalFieldUpdateOperationsInput
  share: DecimalFieldUpdateOperationsInput
  stakePools: StakePoolsUpdateOneWithoutWorkersInput
  state: StringFieldUpdateOperationsInput
  totalReward: DecimalFieldUpdateOperationsInput
  v: DecimalFieldUpdateOperationsInput
  ve: DecimalFieldUpdateOperationsInput
  workerActivities: WorkerActivitiesUpdateManyWithoutWorkersInput
}

input WorkersUpdateWithoutMinersInput {
  accounts: AccountsUpdateOneWithoutWorkersInput
  addedAtBlockNumber: BigIntFieldUpdateOperationsInput
  addedAtUpdatedTimestamp: DateTimeFieldUpdateOperationsInput
  confidenceLevel: IntFieldUpdateOperationsInput
  ecdhPublicKey: NullableStringFieldUpdateOperationsInput
  features: NullableIntFieldUpdateOperationsInput
  infoLastUpdatedAt: DateTimeFieldUpdateOperationsInput
  initialScore: IntFieldUpdateOperationsInput
  lastUpdatedBlockNumber: BigIntFieldUpdateOperationsInput
  lastUpdatedTimestamp: DateTimeFieldUpdateOperationsInput
  minerAccountAddress: NullableStringFieldUpdateOperationsInput
  operatorAddress: NullableStringFieldUpdateOperationsInput
  pInit: IntFieldUpdateOperationsInput
  pInstant: IntFieldUpdateOperationsInput
  pid: NullableBigIntFieldUpdateOperationsInput
  publicKey: StringFieldUpdateOperationsInput
  removedAtBlockNumber: NullableBigIntFieldUpdateOperationsInput
  removedAtUpdatedTimestamp: NullableDateTimeFieldUpdateOperationsInput
  runtimeVersion: IntFieldUpdateOperationsInput
  sMax: DecimalFieldUpdateOperationsInput
  sMin: DecimalFieldUpdateOperationsInput
  share: DecimalFieldUpdateOperationsInput
  stakePools: StakePoolsUpdateOneWithoutWorkersInput
  state: StringFieldUpdateOperationsInput
  totalReward: DecimalFieldUpdateOperationsInput
  v: DecimalFieldUpdateOperationsInput
  ve: DecimalFieldUpdateOperationsInput
  workerActivities: WorkerActivitiesUpdateManyWithoutWorkersInput
}

input WorkersUpdateWithoutStakePoolsInput {
  accounts: AccountsUpdateOneWithoutWorkersInput
  addedAtBlockNumber: BigIntFieldUpdateOperationsInput
  addedAtUpdatedTimestamp: DateTimeFieldUpdateOperationsInput
  confidenceLevel: IntFieldUpdateOperationsInput
  ecdhPublicKey: NullableStringFieldUpdateOperationsInput
  features: NullableIntFieldUpdateOperationsInput
  infoLastUpdatedAt: DateTimeFieldUpdateOperationsInput
  initialScore: IntFieldUpdateOperationsInput
  lastUpdatedBlockNumber: BigIntFieldUpdateOperationsInput
  lastUpdatedTimestamp: DateTimeFieldUpdateOperationsInput
  minerAccountAddress: NullableStringFieldUpdateOperationsInput
  miners: MinersUpdateManyWithoutWorkersInput
  operatorAddress: NullableStringFieldUpdateOperationsInput
  pInit: IntFieldUpdateOperationsInput
  pInstant: IntFieldUpdateOperationsInput
  pid: NullableBigIntFieldUpdateOperationsInput
  publicKey: StringFieldUpdateOperationsInput
  removedAtBlockNumber: NullableBigIntFieldUpdateOperationsInput
  removedAtUpdatedTimestamp: NullableDateTimeFieldUpdateOperationsInput
  runtimeVersion: IntFieldUpdateOperationsInput
  sMax: DecimalFieldUpdateOperationsInput
  sMin: DecimalFieldUpdateOperationsInput
  share: DecimalFieldUpdateOperationsInput
  state: StringFieldUpdateOperationsInput
  totalReward: DecimalFieldUpdateOperationsInput
  v: DecimalFieldUpdateOperationsInput
  ve: DecimalFieldUpdateOperationsInput
  workerActivities: WorkerActivitiesUpdateManyWithoutWorkersInput
}

input WorkersUpdateWithoutWorkerActivitiesInput {
  accounts: AccountsUpdateOneWithoutWorkersInput
  addedAtBlockNumber: BigIntFieldUpdateOperationsInput
  addedAtUpdatedTimestamp: DateTimeFieldUpdateOperationsInput
  confidenceLevel: IntFieldUpdateOperationsInput
  ecdhPublicKey: NullableStringFieldUpdateOperationsInput
  features: NullableIntFieldUpdateOperationsInput
  infoLastUpdatedAt: DateTimeFieldUpdateOperationsInput
  initialScore: IntFieldUpdateOperationsInput
  lastUpdatedBlockNumber: BigIntFieldUpdateOperationsInput
  lastUpdatedTimestamp: DateTimeFieldUpdateOperationsInput
  minerAccountAddress: NullableStringFieldUpdateOperationsInput
  miners: MinersUpdateManyWithoutWorkersInput
  operatorAddress: NullableStringFieldUpdateOperationsInput
  pInit: IntFieldUpdateOperationsInput
  pInstant: IntFieldUpdateOperationsInput
  pid: NullableBigIntFieldUpdateOperationsInput
  publicKey: StringFieldUpdateOperationsInput
  removedAtBlockNumber: NullableBigIntFieldUpdateOperationsInput
  removedAtUpdatedTimestamp: NullableDateTimeFieldUpdateOperationsInput
  runtimeVersion: IntFieldUpdateOperationsInput
  sMax: DecimalFieldUpdateOperationsInput
  sMin: DecimalFieldUpdateOperationsInput
  share: DecimalFieldUpdateOperationsInput
  stakePools: StakePoolsUpdateOneWithoutWorkersInput
  state: StringFieldUpdateOperationsInput
  totalReward: DecimalFieldUpdateOperationsInput
  v: DecimalFieldUpdateOperationsInput
  ve: DecimalFieldUpdateOperationsInput
}

input WorkersWhereInput {
  AND: [WorkersWhereInput!]
  NOT: [WorkersWhereInput!]
  OR: [WorkersWhereInput!]
  accounts: AccountsRelationFilter
  addedAtBlockNumber: BigIntFilter
  addedAtUpdatedTimestamp: DateTimeFilter
  confidenceLevel: IntFilter
  ecdhPublicKey: StringNullableFilter
  features: IntNullableFilter
  id: IntFilter
  infoLastUpdatedAt: DateTimeFilter
  initialScore: IntFilter
  lastUpdatedBlockNumber: BigIntFilter
  lastUpdatedTimestamp: DateTimeFilter
  minerAccountAddress: StringNullableFilter
  miners: MinersListRelationFilter
  operatorAddress: StringNullableFilter
  operatorId: IntNullableFilter
  pInit: IntFilter
  pInstant: IntFilter
  pid: BigIntNullableFilter
  publicKey: StringFilter
  removedAtBlockNumber: BigIntNullableFilter
  removedAtUpdatedTimestamp: DateTimeNullableFilter
  runtimeVersion: IntFilter
  sMax: DecimalFilter
  sMin: DecimalFilter
  share: DecimalFilter
  stakePoolId: IntNullableFilter
  stakePools: StakePoolsRelationFilter
  state: StringFilter
  totalReward: DecimalFilter
  v: DecimalFilter
  ve: DecimalFilter
  workerActivities: WorkerActivitiesListRelationFilter
}

input WorkersWhereUniqueInput {
  ecdhPublicKey: String
  id: Int
  publicKey: String
}

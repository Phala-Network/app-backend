generator client {
  provider = "prisma-client-js"
}

generator typegraphql {
  provider = "typegraphql-prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model AccountStats {
  id                          BigInt   @id @default(autoincrement())
  accountId                   BigInt?  @map("account_id")
  address                     String   @unique(map: "index_account_stats_on_address") @db.VarChar
  lastUpdatedBlockNumber      BigInt   @map("last_updated_block_number")
  lastUpdatedTimestamp        DateTime @map("last_updated_timestamp") @db.Timestamp(6)
  accumulatedOwnedPoolReward  Decimal  @default(0.0) @map("accumulated_owned_pool_reward") @db.Decimal
  accumulatedOwnedPoolStakes  Decimal  @default(0.0) @map("accumulated_owned_pool_stakes") @db.Decimal
  accumulatedOwnedPoolWorkers Decimal  @default(0.0) @map("accumulated_owned_pool_workers") @db.Decimal
  accumulatedPoolStakes       Decimal  @default(0.0) @map("accumulated_pool_stakes") @db.Decimal
  createdAt                   DateTime @map("created_at") @db.Timestamp(6)
  updatedAt                   DateTime @map("updated_at") @db.Timestamp(6)

  @@index([accountId], map: "index_account_stats_on_account_id")
  @@map("account_stats")
}

model Accounts {
  id                   BigInt                 @id @default(autoincrement())
  address              String                 @unique(map: "index_accounts_on_address") @db.VarChar
  identity             String?                @db.VarChar
  identityVerified     Boolean                @default(false) @map("identity_verified")
  createdAt            DateTime               @map("created_at") @db.Timestamp(6)
  updatedAt            DateTime               @map("updated_at") @db.Timestamp(6)
  stakePoolStakers     StakePoolStakers[]
  stakePoolWithdrawals StakePoolWithdrawals[]
  stakePools           StakePools[]
  workerActivities     WorkerActivities[]
  workers              Workers[]

  @@map("accounts")
}

model ArInternalMetadata {
  key       String   @id @db.VarChar
  value     String?  @db.VarChar
  createdAt DateTime @map("created_at") @db.Timestamp(6)
  updatedAt DateTime @map("updated_at") @db.Timestamp(6)

  @@map("ar_internal_metadata")
}

model Events {
  id               BigInt    @id @default(autoincrement())
  blockNumber      BigInt    @map("block_number")
  timestamp        DateTime  @db.Timestamp(6)
  tokenomicVersion Int       @map("tokenomic_version")
  sectionName      String    @map("section_name") @db.VarChar
  methodName       String    @map("method_name") @db.VarChar
  rawData          String?   @map("raw_data") @db.VarChar
  parsedData       String?   @map("parsed_data") @db.VarChar
  memo             String?   @db.VarChar
  type             String    @map("_type") @db.VarChar
  createdAt        DateTime? @map("created_at") @db.Timestamp(6)
  skippedAt        DateTime? @map("skipped_at") @db.Timestamp(6)
  preparedAt       DateTime? @map("prepared_at") @db.Timestamp(6)
  processedAt      DateTime? @map("processed_at") @db.Timestamp(6)
  accountId        BigInt?   @map("account_id")
  stakePoolId      BigInt?   @map("stake_pool_id")
  minerId          BigInt?   @map("miner_id")
  workerId         BigInt?   @map("worker_id")

  @@index([type], map: "index_events_on__type")
  @@index([accountId], map: "index_events_on_account_id")
  @@index([blockNumber], map: "index_events_on_block_number")
  @@index([minerId], map: "index_events_on_miner_id")
  @@index([processedAt], map: "index_events_on_processed_at")
  @@index([stakePoolId], map: "index_events_on_stake_pool_id")
  @@index([workerId], map: "index_events_on_worker_id")
  @@map("events")
}

model MinerActivities {
  id                     BigInt    @id @default(autoincrement())
  eventId                BigInt?   @map("event_id")
  minerId                BigInt    @map("miner_id")
  type                   String    @map("_type") @db.VarChar
  blockNumber            BigInt    @map("block_number")
  timestamp              DateTime  @db.Timestamp(6)
  tokenomicVersion       Int       @map("tokenomic_version")
  active                 Boolean   @default(false)
  current                Boolean   @default(false)
  state                  String    @default("") @db.VarChar
  v                      Decimal   @default(0.0) @db.Decimal
  ve                     Decimal   @default(0.0) @db.Decimal
  pInit                  Int       @default(0) @map("p_init")
  pInstant               Int       @default(0) @map("p_instant")
  iterations             BigInt    @default(0)
  vUpdatedAt             DateTime? @map("v_updated_at") @db.Timestamp(6)
  miningStartedAt        DateTime? @map("mining_started_at") @db.Timestamp(6)
  lastChallengedAt       DateTime? @map("last_challenged_at") @db.Timestamp(6)
  coolingDownStartedAt   DateTime? @map("cooling_down_started_at") @db.Timestamp(6)
  totalReward            Decimal   @default(0.0) @map("total_reward") @db.Decimal
  stakes                 Decimal   @default(0.0) @db.Decimal
  sMin                   Decimal   @default(0.0) @map("s_min") @db.Decimal
  sMax                   Decimal   @default(0.0) @map("s_max") @db.Decimal
  shares                 Decimal   @default(0.0) @db.Decimal
  estimatesReclaimableAt DateTime? @map("estimates_reclaimable_at") @db.Timestamp(6)
  createdAt              DateTime  @map("created_at") @db.Timestamp(6)
  updatedAt              DateTime  @map("updated_at") @db.Timestamp(6)
  miners                 Miners    @relation(fields: [minerId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_e2af566dab")

  @@index([type], map: "index_miner_activities_on__type")
  @@index([blockNumber], map: "index_miner_activities_on_block_number")
  @@index([eventId], map: "index_miner_activities_on_event_id")
  @@index([minerId], map: "index_miner_activities_on_miner_id")
  @@index([timestamp], map: "index_miner_activities_on_timestamp")
  @@map("miner_activities")
}

model MinerStats {
  id                      BigInt   @id @default(autoincrement())
  minerId                 BigInt?  @map("miner_id")
  address                 String   @unique(map: "index_miner_stats_on_address") @db.VarChar
  lastUpdatedBlockNumber  BigInt   @map("last_updated_block_number")
  lastUpdatedTimestamp    DateTime @map("last_updated_timestamp") @db.Timestamp(6)
  accumulatedMiningReward Decimal  @default(0.0) @map("accumulated_mining_reward") @db.Decimal
  createdAt               DateTime @map("created_at") @db.Timestamp(6)
  updatedAt               DateTime @map("updated_at") @db.Timestamp(6)

  @@index([minerId], map: "index_miner_stats_on_miner_id")
  @@map("miner_stats")
}

model Miners {
  id                                    BigInt             @id @default(autoincrement())
  address                               String             @unique(map: "index_miners_on_address") @db.VarChar
  workerPublicKey                       String             @map("worker_public_key") @db.VarChar
  pid                                   Int
  workerId                              BigInt             @map("worker_id")
  stakePoolId                           BigInt             @map("stake_pool_id")
  lastUpdatedBlockNumber                BigInt             @map("last_updated_block_number")
  lastUpdatedTimestamp                  DateTime           @map("last_updated_timestamp") @db.Timestamp(6)
  active                                Boolean            @default(false)
  current                               Boolean            @default(false)
  state                                 String             @default("") @db.VarChar
  v                                     Decimal            @default(0.0) @db.Decimal
  ve                                    Decimal            @default(0.0) @db.Decimal
  pInit                                 Int                @default(0) @map("p_init")
  pInstant                              Int                @default(0) @map("p_instant")
  iterations                            BigInt             @default(0)
  vUpdatedAt                            DateTime?          @map("v_updated_at") @db.Timestamp(6)
  miningStartedAt                       DateTime?          @map("mining_started_at") @db.Timestamp(6)
  lastChallengedAt                      DateTime?          @map("last_challenged_at") @db.Timestamp(6)
  coolingDownStartedAt                  DateTime?          @map("cooling_down_started_at") @db.Timestamp(6)
  totalReward                           Decimal            @default(0.0) @map("total_reward") @db.Decimal
  stakes                                Decimal            @default(0.0) @db.Decimal
  sMin                                  Decimal            @default(0.0) @map("s_min") @db.Decimal
  sMax                                  Decimal            @default(0.0) @map("s_max") @db.Decimal
  shares                                Decimal            @default(0.0) @db.Decimal
  estimatesReclaimableAt                DateTime?          @map("estimates_reclaimable_at") @db.Timestamp(6)
  createdAt                             DateTime           @map("created_at") @db.Timestamp(6)
  updatedAt                             DateTime           @map("updated_at") @db.Timestamp(6)
  stakePools                            StakePools         @relation(fields: [stakePoolId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_9c464bea80")
  workersMinersWorkerIdToWorkers        Workers            @relation("miners_worker_idToworkers", fields: [workerId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_95e5038679")
  minerActivities                       MinerActivities[]
  workerActivities                      WorkerActivities[]
  workersMinersToWorkersCurrentMinerIds Workers[]          @relation("minersToworkers_current_miner_id")

  @@index([stakePoolId], map: "index_miners_on_stake_pool_id")
  @@index([workerId], map: "index_miners_on_worker_id")
  @@map("miners")
}

model SchemaMigrations {
  version String @id @db.VarChar

  @@map("schema_migrations")
}

model StakePoolActivities {
  id                                BigInt     @id @default(autoincrement())
  eventId                           BigInt?    @map("event_id")
  stakePoolId                       BigInt     @map("stake_pool_id")
  type                              String     @map("_type") @db.VarChar
  blockNumber                       BigInt     @map("block_number")
  timestamp                         DateTime   @db.Timestamp(6)
  tokenomicVersion                  Int        @map("tokenomic_version")
  commission                        Decimal    @default(0.0) @db.Decimal
  ownerReward                       Decimal    @default(0.0) @map("owner_reward") @db.Decimal
  cap                               Decimal?   @db.Decimal
  rewardAcc                         Decimal    @default(0.0) @map("reward_acc") @db.Decimal
  totalShares                       Decimal    @default(0.0) @map("total_shares") @db.Decimal
  totalStake                        Decimal    @default(0.0) @map("total_stake") @db.Decimal
  freeStake                         Decimal    @default(0.0) @map("free_stake") @db.Decimal
  releasingStake                    Decimal    @default(0.0) @map("releasing_stake") @db.Decimal
  averageBlockTimeSinceLastActivity Float      @default(0.0) @map("average_block_time_since_last_activity")
  usedStake                         Decimal    @default(0.0) @map("used_stake") @db.Decimal
  remainingStake                    Decimal?   @map("remaining_stake") @db.Decimal
  theoreticalApr                    Decimal    @default(0.0) @map("theoretical_apr") @db.Decimal
  stakersCount                      Int        @default(0) @map("stakers_count")
  withdrawalsCount                  Int        @default(0) @map("withdrawals_count")
  minersCount                       Int        @default(0) @map("miners_count")
  readyMinersCount                  Int        @default(0) @map("ready_miners_count")
  idleMinersCount                   Int        @default(0) @map("idle_miners_count")
  unresponsiveMinersCount           Int        @default(0) @map("unresponsive_miners_count")
  coolingDownMinersCount            Int        @default(0) @map("cooling_down_miners_count")
  createdAt                         DateTime   @map("created_at") @db.Timestamp(6)
  updatedAt                         DateTime   @map("updated_at") @db.Timestamp(6)
  stakePools                        StakePools @relation(fields: [stakePoolId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_681c721b0e")

  @@index([type], map: "index_stake_pool_activities_on__type")
  @@index([blockNumber], map: "index_stake_pool_activities_on_block_number")
  @@index([eventId], map: "index_stake_pool_activities_on_event_id")
  @@index([stakePoolId], map: "index_stake_pool_activities_on_stake_pool_id")
  @@index([timestamp], map: "index_stake_pool_activities_on_timestamp")
  @@map("stake_pool_activities")
}

model StakePoolStakerActivities {
  id                     BigInt           @id @default(autoincrement())
  eventId                BigInt?          @map("event_id")
  stakePoolStakerId      BigInt           @map("stake_pool_staker_id")
  type                   String           @map("_type") @db.VarChar
  blockNumber            BigInt           @map("block_number")
  timestamp              DateTime         @db.Timestamp(6)
  tokenomicVersion       Int              @map("tokenomic_version")
  locked                 Decimal          @default(0.0) @db.Decimal
  shares                 Decimal          @default(0.0) @db.Decimal
  availableReward        Decimal          @default(0.0) @map("available_reward") @db.Decimal
  rewardDebt             Decimal          @default(0.0) @map("reward_debt") @db.Decimal
  stake                  Decimal          @default(0.0) @db.Decimal
  pendingReward          Decimal          @default(0.0) @map("pending_reward") @db.Decimal
  stakeReward            Decimal          @default(0.0) @map("stake_reward") @db.Decimal
  claimableReward        Decimal          @default(0.0) @map("claimable_reward") @db.Decimal
  instantClaimableReward Decimal          @default(0.0) @map("instant_claimable_reward") @db.Decimal
  createdAt              DateTime         @map("created_at") @db.Timestamp(6)
  updatedAt              DateTime         @map("updated_at") @db.Timestamp(6)
  stakePoolStakers       StakePoolStakers @relation(fields: [stakePoolStakerId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_63c371b78a")

  @@index([type], map: "index_stake_pool_staker_activities_on__type")
  @@index([blockNumber], map: "index_stake_pool_staker_activities_on_block_number")
  @@index([eventId], map: "index_stake_pool_staker_activities_on_event_id")
  @@index([stakePoolStakerId], map: "index_stake_pool_staker_activities_on_stake_pool_staker_id")
  @@index([timestamp], map: "index_stake_pool_staker_activities_on_timestamp")
  @@map("stake_pool_staker_activities")
}

model StakePoolStakers {
  id                        BigInt                      @id @default(autoincrement())
  stakePoolId               BigInt                      @map("stake_pool_id")
  address                   String?                     @db.VarChar
  userId                    BigInt                      @map("user_id")
  lastUpdatedBlockNumber    BigInt                      @map("last_updated_block_number")
  lastUpdatedTimestamp      DateTime                    @map("last_updated_timestamp") @db.Timestamp(6)
  locked                    Decimal                     @default(0.0) @db.Decimal
  shares                    Decimal                     @default(0.0) @db.Decimal
  availableReward           Decimal                     @default(0.0) @map("available_reward") @db.Decimal
  rewardDebt                Decimal                     @default(0.0) @map("reward_debt") @db.Decimal
  stake                     Decimal                     @default(0.0) @db.Decimal
  pendingReward             Decimal                     @default(0.0) @map("pending_reward") @db.Decimal
  stakeReward               Decimal                     @default(0.0) @map("stake_reward") @db.Decimal
  claimableReward           Decimal                     @default(0.0) @map("claimable_reward") @db.Decimal
  instantClaimableReward    Decimal                     @default(0.0) @map("instant_claimable_reward") @db.Decimal
  isOwner                   Boolean                     @default(false) @map("is_owner")
  createdAt                 DateTime                    @map("created_at") @db.Timestamp(6)
  updatedAt                 DateTime                    @map("updated_at") @db.Timestamp(6)
  stakePools                StakePools                  @relation(fields: [stakePoolId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_b3f5e3c1bc")
  accounts                  Accounts                    @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_037443b0f3")
  stakePoolStakerActivities StakePoolStakerActivities[]

  @@index([address], map: "index_stake_pool_stakers_on_address")
  @@index([stakePoolId], map: "index_stake_pool_stakers_on_stake_pool_id")
  @@index([userId], map: "index_stake_pool_stakers_on_user_id")
  @@map("stake_pool_stakers")
}

model StakePoolStats {
  id                       BigInt   @id @default(autoincrement())
  stakePoolId              BigInt?  @map("stake_pool_id")
  pid                      Int      @unique(map: "index_stake_pool_stats_on_pid")
  lastUpdatedBlockNumber   BigInt   @map("last_updated_block_number")
  lastUpdatedTimestamp     DateTime @map("last_updated_timestamp") @db.Timestamp(6)
  accumulatedReward        Decimal  @default(0.0) @map("accumulated_reward") @db.Decimal
  recentReward             Decimal  @default(0.0) @map("recent_reward") @db.Decimal
  recentStartedBlockNumber BigInt   @map("recent_started_block_number")
  recentStartedTimestamp   DateTime @map("recent_started_timestamp") @db.Timestamp(6)
  createdAt                DateTime @map("created_at") @db.Timestamp(6)
  updatedAt                DateTime @map("updated_at") @db.Timestamp(6)

  @@index([stakePoolId], map: "index_stake_pool_stats_on_stake_pool_id")
  @@map("stake_pool_stats")
}

model StakePoolWithdrawals {
  id               BigInt     @id @default(autoincrement())
  stakePoolId      BigInt     @map("stake_pool_id")
  userAddress      String?    @map("user_address") @db.VarChar
  userId           BigInt     @map("user_id")
  startEventId     BigInt?    @map("start_event_id")
  startBlockNumber BigInt?    @map("start_block_number")
  startTimestamp   DateTime?  @map("start_timestamp") @db.Timestamp(6)
  endEventId       BigInt?    @map("end_event_id")
  endBlockNumber   BigInt?    @map("end_block_number")
  endTimestamp     DateTime?  @map("end_timestamp") @db.Timestamp(6)
  startTime        DateTime   @map("start_time") @db.Timestamp(6)
  shares           Decimal    @db.Decimal
  estimatesEndTime DateTime   @default(dbgenerated("'1970-01-01 00:00:00'::timestamp without time zone")) @map("estimates_end_time") @db.Timestamp(6)
  stake            Decimal    @default(0.0) @db.Decimal
  createdAt        DateTime   @map("created_at") @db.Timestamp(6)
  updatedAt        DateTime   @map("updated_at") @db.Timestamp(6)
  stakePools       StakePools @relation(fields: [stakePoolId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_dea4e0464f")
  accounts         Accounts   @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_c0c35ab7a8")

  @@index([endEventId], map: "index_stake_pool_withdrawals_on_end_event_id")
  @@index([stakePoolId], map: "index_stake_pool_withdrawals_on_stake_pool_id")
  @@index([startEventId], map: "index_stake_pool_withdrawals_on_start_event_id")
  @@index([userId], map: "index_stake_pool_withdrawals_on_user_id")
  @@map("stake_pool_withdrawals")
}

model StakePools {
  id                                BigInt                 @id @default(autoincrement())
  pid                               Int                    @unique(map: "index_stake_pools_on_pid")
  ownerAddress                      String                 @map("owner_address") @db.VarChar
  ownerId                           BigInt                 @map("owner_id")
  lastUpdatedBlockNumber            BigInt                 @default(0) @map("last_updated_block_number")
  lastUpdatedTimestamp              DateTime               @map("last_updated_timestamp") @db.Timestamp(6)
  commission                        Decimal                @default(0.0) @db.Decimal
  ownerReward                       Decimal                @default(0.0) @map("owner_reward") @db.Decimal
  cap                               Decimal?               @db.Decimal
  rewardAcc                         Decimal                @default(0.0) @map("reward_acc") @db.Decimal
  totalShares                       Decimal                @default(0.0) @map("total_shares") @db.Decimal
  totalStake                        Decimal                @default(0.0) @map("total_stake") @db.Decimal
  freeStake                         Decimal                @default(0.0) @map("free_stake") @db.Decimal
  releasingStake                    Decimal                @default(0.0) @map("releasing_stake") @db.Decimal
  averageBlockTimeSinceLastActivity Float                  @default(0.0) @map("average_block_time_since_last_activity")
  usedStake                         Decimal                @default(0.0) @map("used_stake") @db.Decimal
  remainingStake                    Decimal?               @map("remaining_stake") @db.Decimal
  theoreticalApr                    Decimal                @default(0.0) @map("theoretical_apr") @db.Decimal
  stakersCount                      Int                    @default(0) @map("stakers_count")
  withdrawalsCount                  Int                    @default(0) @map("withdrawals_count")
  minersCount                       Int                    @default(0) @map("miners_count")
  readyMinersCount                  Int                    @default(0) @map("ready_miners_count")
  idleMinersCount                   Int                    @default(0) @map("idle_miners_count")
  unresponsiveMinersCount           Int                    @default(0) @map("unresponsive_miners_count")
  coolingDownMinersCount            Int                    @default(0) @map("cooling_down_miners_count")
  createdAt                         DateTime               @map("created_at") @db.Timestamp(6)
  updatedAt                         DateTime               @map("updated_at") @db.Timestamp(6)
  accounts                          Accounts               @relation(fields: [ownerId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_b6e323a291")
  miners                            Miners[]
  stakePoolActivities               StakePoolActivities[]
  stakePoolStakers                  StakePoolStakers[]
  stakePoolWithdrawals              StakePoolWithdrawals[]
  workerActivities                  WorkerActivities[]
  workers                           Workers[]

  @@index([ownerAddress], map: "index_stake_pools_on_owner_address")
  @@index([ownerId], map: "index_stake_pools_on_owner_id")
  @@map("stake_pools")
}

model States {
  id            BigInt    @id @default(autoincrement())
  key           String?   @db.VarChar
  visible       Boolean?
  decimalValue  Decimal?  @map("decimal_value") @db.Decimal
  integerValue  Int?      @map("integer_value")
  stringValue   String?   @map("string_value") @db.VarChar
  datetimeValue DateTime? @map("datetime_value") @db.Timestamp(6)
  createdAt     DateTime  @map("created_at") @db.Timestamp(6)
  updatedAt     DateTime  @map("updated_at") @db.Timestamp(6)

  @@index([key], map: "index_states_on_key")
  @@map("states")
}

model WorkerActivities {
  id                         BigInt      @id @default(autoincrement())
  eventId                    BigInt?     @map("event_id")
  workerId                   BigInt      @map("worker_id")
  type                       String      @map("_type") @db.VarChar
  blockNumber                BigInt      @map("block_number")
  timestamp                  DateTime    @db.Timestamp(6)
  tokenomicVersion           Int         @map("tokenomic_version")
  operatorAddress            String?     @map("operator_address") @db.VarChar
  operatorId                 BigInt?     @map("operator_id")
  ecdhPublicKey              String?     @map("ecdh_public_key") @db.VarChar
  runtimeVersion             Int         @default(0) @map("runtime_version")
  confidenceLevel            Int         @default(0) @map("confidence_level")
  features                   Int[]
  initialScore               Int         @default(0) @map("initial_score")
  infoLastUpdatedAt          DateTime    @map("info_last_updated_at") @db.Timestamp(6)
  createdAt                  DateTime    @map("created_at") @db.Timestamp(6)
  updatedAt                  DateTime    @map("updated_at") @db.Timestamp(6)
  currentMinerAccountAddress String?     @map("current_miner_account_address") @db.VarChar
  currentMinerId             BigInt?     @map("current_miner_id")
  currentPid                 Int?        @map("current_pid")
  currentStakePoolId         BigInt?     @map("current_stake_pool_id")
  miners                     Miners?     @relation(fields: [currentMinerId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_baa26b0009")
  stakePools                 StakePools? @relation(fields: [currentStakePoolId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_3d4ffd77c7")
  accounts                   Accounts?   @relation(fields: [operatorId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_3682142713")
  workers                    Workers     @relation(fields: [workerId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_65b5a7f80a")

  @@index([type], map: "index_worker_activities_on__type")
  @@index([blockNumber], map: "index_worker_activities_on_block_number")
  @@index([currentMinerAccountAddress], map: "index_worker_activities_on_current_miner_account_address")
  @@index([currentMinerId], map: "index_worker_activities_on_current_miner_id")
  @@index([currentPid], map: "index_worker_activities_on_current_pid")
  @@index([currentStakePoolId], map: "index_worker_activities_on_current_stake_pool_id")
  @@index([eventId], map: "index_worker_activities_on_event_id")
  @@index([operatorId], map: "index_worker_activities_on_operator_id")
  @@index([timestamp], map: "index_worker_activities_on_timestamp")
  @@index([workerId], map: "index_worker_activities_on_worker_id")
  @@map("worker_activities")
}

model Workers {
  id                                  BigInt             @id @default(autoincrement())
  publicKey                           String             @unique(map: "index_workers_on_public_key") @map("public_key") @db.VarChar
  lastUpdatedBlockNumber              BigInt             @map("last_updated_block_number")
  lastUpdatedTimestamp                DateTime           @map("last_updated_timestamp") @db.Timestamp(6)
  operatorAddress                     String?            @map("operator_address") @db.VarChar
  operatorId                          BigInt?            @map("operator_id")
  ecdhPublicKey                       String?            @unique(map: "index_workers_on_ecdh_public_key") @map("ecdh_public_key") @db.VarChar
  runtimeVersion                      Int                @default(0) @map("runtime_version")
  confidenceLevel                     Int                @default(0) @map("confidence_level")
  features                            Int[]
  initialScore                        Int                @default(0) @map("initial_score")
  infoLastUpdatedAt                   DateTime           @map("info_last_updated_at") @db.Timestamp(6)
  createdAt                           DateTime           @map("created_at") @db.Timestamp(6)
  updatedAt                           DateTime           @map("updated_at") @db.Timestamp(6)
  currentMinerAccountAddress          String?            @map("current_miner_account_address") @db.VarChar
  currentMinerId                      BigInt?            @map("current_miner_id")
  currentPid                          Int?               @map("current_pid")
  currentStakePoolId                  BigInt?            @map("current_stake_pool_id")
  minersMinersToWorkersCurrentMinerId Miners?            @relation("minersToworkers_current_miner_id", fields: [currentMinerId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_eabd7b0921")
  stakePools                          StakePools?        @relation(fields: [currentStakePoolId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_6e13f17539")
  accounts                            Accounts?          @relation(fields: [operatorId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_23792da367")
  minersMinersWorkerIdToWorkers       Miners[]           @relation("miners_worker_idToworkers")
  workerActivities                    WorkerActivities[]

  @@index([currentMinerAccountAddress], map: "index_workers_on_current_miner_account_address")
  @@index([currentMinerId], map: "index_workers_on_current_miner_id")
  @@index([currentPid], map: "index_workers_on_current_pid")
  @@index([currentStakePoolId], map: "index_workers_on_current_stake_pool_id")
  @@index([operatorAddress], map: "index_workers_on_operator_address")
  @@index([operatorId], map: "index_workers_on_operator_id")
  @@map("workers")
}

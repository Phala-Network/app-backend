generator client {
  provider = "prisma-client-js"
}

generator typegraphql {
  provider = "typegraphql-prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Accounts {
  id                   BigInt                 @id @default(autoincrement())
  address              String?                @unique(map: "index_accounts_on_address") @db.VarChar
  identity             String?                @db.VarChar
  identityVerified     Boolean                @default(false) @map("identity_verified")
  createdAt            DateTime               @map("created_at") @db.Timestamp(6)
  updatedAt            DateTime               @map("updated_at") @db.Timestamp(6)
  stakePoolStakers     StakePoolStakers[]
  stakePoolWithdrawals StakePoolWithdrawals[]
  stakePools           StakePools[]
  workerActivities     WorkerActivities[]
  workers              Workers[]

  @@map("accounts")
}

model ArInternalMetadata {
  key       String   @id @db.VarChar
  value     String?  @db.VarChar
  createdAt DateTime @map("created_at") @db.Timestamp(6)
  updatedAt DateTime @map("updated_at") @db.Timestamp(6)

  @@map("ar_internal_metadata")
}

model Events {
  id                                                            BigInt                      @id @default(autoincrement())
  blockNumber                                                   BigInt                      @map("block_number")
  timestamp                                                     DateTime                    @db.Timestamp(6)
  tokenomicVersion                                              Int                         @map("tokenomic_version")
  section                                                       String                      @db.VarChar
  name                                                          String                      @db.VarChar
  data                                                          String?                     @db.VarChar
  skipped                                                       Boolean                     @default(false)
  note                                                          String?                     @db.VarChar
  createdAt                                                     DateTime?                   @map("created_at") @db.Timestamp(6)
  processedAt                                                   DateTime?                   @map("processed_at") @db.Timestamp(6)
  stakePoolActivities                                           StakePoolActivities[]
  stakePoolStakerActivities                                     StakePoolStakerActivities[]
  stakePoolWithdrawalsEventsTostakePoolWithdrawalsEndEventIds   StakePoolWithdrawals[]      @relation("eventsTostake_pool_withdrawals_end_event_id")
  stakePoolWithdrawalsEventsTostakePoolWithdrawalsStartEventIds StakePoolWithdrawals[]      @relation("eventsTostake_pool_withdrawals_start_event_id")
  workerActivities                                              WorkerActivities[]

  @@map("events")
}

model Miners {
  id                     BigInt      @id @default(autoincrement())
  address                String      @unique(map: "index_miners_on_address") @db.VarChar
  workerId               BigInt      @map("worker_id")
  stakePoolId            BigInt?     @map("stake_pool_id")
  lastUpdatedBlockNumber BigInt      @map("last_updated_block_number")
  lastUpdatedTimestamp   DateTime    @map("last_updated_timestamp") @db.Timestamp(6)
  state                  String      @default("") @db.VarChar
  v                      Decimal     @default(0.0) @db.Decimal
  ve                     Decimal     @default(0.0) @db.Decimal
  pInit                  Int         @default(0) @map("p_init")
  pInstant               Int         @default(0) @map("p_instant")
  totalReward            Decimal     @default(0.0) @map("total_reward") @db.Decimal
  shares                 Decimal     @default(0.0) @db.Decimal
  createdAt              DateTime    @map("created_at") @db.Timestamp(6)
  updatedAt              DateTime    @map("updated_at") @db.Timestamp(6)
  stakePools             StakePools? @relation(fields: [stakePoolId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_9c464bea80")
  workers                Workers     @relation(fields: [workerId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_95e5038679")

  @@index([stakePoolId], map: "index_miners_on_stake_pool_id")
  @@index([workerId], map: "index_miners_on_worker_id")
  @@map("miners")
}

model SchemaMigrations {
  version String @id @db.VarChar

  @@map("schema_migrations")
}

model StakePoolActivities {
  id                 BigInt     @id @default(autoincrement())
  eventId            BigInt?    @map("event_id")
  stakePoolId        BigInt     @map("stake_pool_id")
  type               String     @db.VarChar
  blockNumber        BigInt     @map("block_number")
  timestamp          DateTime   @db.Timestamp(6)
  tokenomicVersion   Int        @map("tokenomic_version")
  commission         Decimal    @default(0.0) @db.Decimal
  ownerReward        Decimal    @default(0.0) @map("owner_reward") @db.Decimal
  cap                Decimal?   @db.Decimal
  rewardAcc          Decimal    @default(0.0) @map("reward_acc") @db.Decimal
  totalShares        Decimal    @default(0.0) @map("total_shares") @db.Decimal
  totalStake         Decimal    @default(0.0) @map("total_stake") @db.Decimal
  freeStake          Decimal    @default(0.0) @map("free_stake") @db.Decimal
  releasingStake     Decimal    @default(0.0) @map("releasing_stake") @db.Decimal
  usedStake          Decimal    @default(0.0) @map("used_stake") @db.Decimal
  remainingStake     Decimal?   @map("remaining_stake") @db.Decimal
  instantApr         Decimal    @default(0.0) @map("instant_apr") @db.Decimal
  stakersCount       Int        @default(0) @map("stakers_count")
  workersCount       Int        @default(0) @map("workers_count")
  miningWorkersCount Int        @default(0) @map("mining_workers_count")
  withdrawalsCount   Int        @default(0) @map("withdrawals_count")
  createdAt          DateTime   @map("created_at") @db.Timestamp(6)
  updatedAt          DateTime   @map("updated_at") @db.Timestamp(6)
  events             Events?    @relation(fields: [eventId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_8205ff9930")
  stakePools         StakePools @relation(fields: [stakePoolId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_681c721b0e")

  @@index([eventId], map: "index_stake_pool_activities_on_event_id")
  @@index([stakePoolId], map: "index_stake_pool_activities_on_stake_pool_id")
  @@map("stake_pool_activities")
}

model StakePoolStakerActivities {
  id                      BigInt           @id @default(autoincrement())
  eventId                 BigInt?          @map("event_id")
  stakePoolStakerId       BigInt           @map("stake_pool_staker_id")
  type                    String           @db.VarChar
  blockNumber             BigInt           @map("block_number")
  timestamp               DateTime         @db.Timestamp(6)
  tokenomicVersion        Int              @map("tokenomic_version")
  locked                  Decimal          @default(0.0) @db.Decimal
  shares                  Decimal          @default(0.0) @db.Decimal
  availableRewards        Decimal          @default(0.0) @map("available_rewards") @db.Decimal
  rewardDebt              Decimal          @default(0.0) @map("reward_debt") @db.Decimal
  stake                   Decimal          @default(0.0) @db.Decimal
  pendingRewards          Decimal          @default(0.0) @map("pending_rewards") @db.Decimal
  stakeRewards            Decimal          @default(0.0) @map("stake_rewards") @db.Decimal
  claimableRewards        Decimal          @default(0.0) @map("claimable_rewards") @db.Decimal
  instantClaimableRewards Decimal          @default(0.0) @map("instant_claimable_rewards") @db.Decimal
  createdAt               DateTime         @map("created_at") @db.Timestamp(6)
  updatedAt               DateTime         @map("updated_at") @db.Timestamp(6)
  events                  Events?          @relation(fields: [eventId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_9e31d061b1")
  stakePoolStakers        StakePoolStakers @relation(fields: [stakePoolStakerId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_63c371b78a")

  @@index([eventId], map: "index_stake_pool_staker_activities_on_event_id")
  @@index([stakePoolStakerId], map: "index_stake_pool_staker_activities_on_stake_pool_staker_id")
  @@map("stake_pool_staker_activities")
}

model StakePoolStakers {
  id                        BigInt                      @id @default(autoincrement())
  stakePoolId               BigInt                      @map("stake_pool_id")
  address                   String?                     @db.VarChar
  userId                    BigInt                      @map("user_id")
  lastUpdatedBlockNumber    BigInt                      @map("last_updated_block_number")
  lastUpdatedTimestamp      DateTime                    @map("last_updated_timestamp") @db.Timestamp(6)
  locked                    Decimal                     @default(0.0) @db.Decimal
  shares                    Decimal                     @default(0.0) @db.Decimal
  availableRewards          Decimal                     @default(0.0) @map("available_rewards") @db.Decimal
  rewardDebt                Decimal                     @default(0.0) @map("reward_debt") @db.Decimal
  stake                     Decimal                     @default(0.0) @db.Decimal
  pendingRewards            Decimal                     @default(0.0) @map("pending_rewards") @db.Decimal
  stakeRewards              Decimal                     @default(0.0) @map("stake_rewards") @db.Decimal
  claimableRewards          Decimal                     @default(0.0) @map("claimable_rewards") @db.Decimal
  instantClaimableRewards   Decimal                     @default(0.0) @map("instant_claimable_rewards") @db.Decimal
  isOwner                   Boolean                     @default(false) @map("is_owner")
  createdAt                 DateTime                    @map("created_at") @db.Timestamp(6)
  updatedAt                 DateTime                    @map("updated_at") @db.Timestamp(6)
  stakePools                StakePools                  @relation(fields: [stakePoolId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_b3f5e3c1bc")
  accounts                  Accounts                    @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_037443b0f3")
  stakePoolStakerActivities StakePoolStakerActivities[]

  @@index([address], map: "index_stake_pool_stakers_on_address")
  @@index([stakePoolId], map: "index_stake_pool_stakers_on_stake_pool_id")
  @@index([userId], map: "index_stake_pool_stakers_on_user_id")
  @@map("stake_pool_stakers")
}

model StakePoolWithdrawals {
  id                                             BigInt     @id @default(autoincrement())
  stakePoolId                                    BigInt     @map("stake_pool_id")
  userAddress                                    String?    @map("user_address") @db.VarChar
  userId                                         BigInt     @map("user_id")
  startEventId                                   BigInt?    @map("start_event_id")
  startBlockNumber                               BigInt?    @map("start_block_number")
  startTimestamp                                 DateTime?  @map("start_timestamp") @db.Timestamp(6)
  endEventId                                     BigInt?    @map("end_event_id")
  endBlockNumber                                 BigInt?    @map("end_block_number")
  endTimestamp                                   DateTime?  @map("end_timestamp") @db.Timestamp(6)
  startTime                                      DateTime   @map("start_time") @db.Timestamp(6)
  shares                                         Decimal    @db.Decimal
  estimatesEndTime                               DateTime   @default(dbgenerated("'1970-01-01 00:00:00'::timestamp without time zone")) @map("estimates_end_time") @db.Timestamp(6)
  stake                                          Decimal    @default(0.0) @db.Decimal
  createdAt                                      DateTime   @map("created_at") @db.Timestamp(6)
  updatedAt                                      DateTime   @map("updated_at") @db.Timestamp(6)
  eventsEventsTostakePoolWithdrawalsEndEventId   Events?    @relation("eventsTostake_pool_withdrawals_end_event_id", fields: [endEventId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_d22c29d8dd")
  stakePools                                     StakePools @relation(fields: [stakePoolId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_dea4e0464f")
  eventsEventsTostakePoolWithdrawalsStartEventId Events?    @relation("eventsTostake_pool_withdrawals_start_event_id", fields: [startEventId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_8450adace2")
  accounts                                       Accounts   @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_c0c35ab7a8")

  @@index([endEventId], map: "index_stake_pool_withdrawals_on_end_event_id")
  @@index([stakePoolId], map: "index_stake_pool_withdrawals_on_stake_pool_id")
  @@index([startEventId], map: "index_stake_pool_withdrawals_on_start_event_id")
  @@index([userId], map: "index_stake_pool_withdrawals_on_user_id")
  @@map("stake_pool_withdrawals")
}

model StakePools {
  id                     BigInt                 @id @default(autoincrement())
  pid                    BigInt                 @unique(map: "index_stake_pools_on_pid")
  ownerAddress           String                 @map("owner_address") @db.VarChar
  ownerId                BigInt                 @map("owner_id")
  lastUpdatedBlockNumber BigInt                 @default(0) @map("last_updated_block_number")
  lastUpdatedTimestamp   DateTime               @map("last_updated_timestamp") @db.Timestamp(6)
  commission             Decimal                @default(0.0) @db.Decimal
  ownerReward            Decimal                @default(0.0) @map("owner_reward") @db.Decimal
  cap                    Decimal?               @db.Decimal
  rewardAcc              Decimal                @default(0.0) @map("reward_acc") @db.Decimal
  totalShares            Decimal                @default(0.0) @map("total_shares") @db.Decimal
  totalStake             Decimal                @default(0.0) @map("total_stake") @db.Decimal
  freeStake              Decimal                @default(0.0) @map("free_stake") @db.Decimal
  releasingStake         Decimal                @default(0.0) @map("releasing_stake") @db.Decimal
  usedStake              Decimal                @default(0.0) @map("used_stake") @db.Decimal
  remainingStake         Decimal?               @map("remaining_stake") @db.Decimal
  instantApr             Decimal                @default(0.0) @map("instant_apr") @db.Decimal
  stakersCount           Int                    @default(0) @map("stakers_count")
  workersCount           Int                    @default(0) @map("workers_count")
  miningWorkersCount     Int                    @default(0) @map("mining_workers_count")
  withdrawalsCount       Int                    @default(0) @map("withdrawals_count")
  createdAt              DateTime               @map("created_at") @db.Timestamp(6)
  updatedAt              DateTime               @map("updated_at") @db.Timestamp(6)
  accounts               Accounts               @relation(fields: [ownerId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_b6e323a291")
  miners                 Miners[]
  stakePoolActivities    StakePoolActivities[]
  stakePoolStakers       StakePoolStakers[]
  stakePoolWithdrawals   StakePoolWithdrawals[]
  workerActivities       WorkerActivities[]
  workers                Workers[]

  @@index([ownerAddress], map: "index_stake_pools_on_owner_address")
  @@index([ownerId], map: "index_stake_pools_on_owner_id")
  @@map("stake_pools")
}

model States {
  id            BigInt    @id @default(autoincrement())
  key           String?   @db.VarChar
  visible       Boolean?
  decimalValue  Decimal?  @map("decimal_value") @db.Decimal
  integerValue  Int?      @map("integer_value")
  stringValue   String?   @map("string_value") @db.VarChar
  datetimeValue DateTime? @map("datetime_value") @db.Timestamp(6)
  createdAt     DateTime  @map("created_at") @db.Timestamp(6)
  updatedAt     DateTime  @map("updated_at") @db.Timestamp(6)

  @@index([key], map: "index_states_on_key")
  @@map("states")
}

model WorkerActivities {
  id                  BigInt      @id @default(autoincrement())
  eventId             BigInt?     @map("event_id")
  workerId            BigInt      @map("worker_id")
  type                String      @db.VarChar
  blockNumber         BigInt      @map("block_number")
  timestamp           DateTime    @db.Timestamp(6)
  tokenomicVersion    Int         @map("tokenomic_version")
  operatorAddress     String?     @map("operator_address") @db.VarChar
  operatorId          BigInt?     @map("operator_id")
  ecdhPublicKey       String?     @map("ecdh_public_key") @db.VarChar
  runtimeVersion      Int         @default(0) @map("runtime_version")
  confidenceLevel     Int         @default(0) @map("confidence_level")
  features            Int[]
  initialScore        Int         @default(0) @map("initial_score")
  infoLastUpdatedAt   DateTime    @map("info_last_updated_at") @db.Timestamp(6)
  pid                 BigInt?
  stakePoolId         BigInt?     @map("stake_pool_id")
  minerAccountAddress String?     @map("miner_account_address") @db.VarChar
  state               String      @default("") @db.VarChar
  v                   Decimal     @default(0.0) @db.Decimal
  ve                  Decimal     @default(0.0) @db.Decimal
  pInit               Int         @default(0) @map("p_init")
  pInstant            Int         @default(0) @map("p_instant")
  totalReward         Decimal     @default(0.0) @map("total_reward") @db.Decimal
  sMin                Decimal     @default(0.0) @map("s_min") @db.Decimal
  sMax                Decimal     @default(0.0) @map("s_max") @db.Decimal
  shares              Decimal     @default(0.0) @db.Decimal
  createdAt           DateTime    @map("created_at") @db.Timestamp(6)
  updatedAt           DateTime    @map("updated_at") @db.Timestamp(6)
  events              Events?     @relation(fields: [eventId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_21db3bf5f3")
  accounts            Accounts?   @relation(fields: [operatorId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_3682142713")
  stakePools          StakePools? @relation(fields: [stakePoolId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_6ced3e8d59")
  workers             Workers     @relation(fields: [workerId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_65b5a7f80a")

  @@index([eventId], map: "index_worker_activities_on_event_id")
  @@index([minerAccountAddress], map: "index_worker_activities_on_miner_account_address")
  @@index([operatorId], map: "index_worker_activities_on_operator_id")
  @@index([stakePoolId], map: "index_worker_activities_on_stake_pool_id")
  @@index([workerId], map: "index_worker_activities_on_worker_id")
  @@map("worker_activities")
}

model Workers {
  id                        BigInt             @id @default(autoincrement())
  publicKey                 String             @unique(map: "index_workers_on_public_key") @map("public_key") @db.VarChar
  addedAtBlockNumber        BigInt             @map("added_at_block_number")
  addedAtUpdatedTimestamp   DateTime           @map("added_at_updated_timestamp") @db.Timestamp(6)
  removedAtBlockNumber      BigInt?            @map("removed_at_block_number")
  removedAtUpdatedTimestamp DateTime?          @map("removed_at_updated_timestamp") @db.Timestamp(6)
  lastUpdatedBlockNumber    BigInt             @map("last_updated_block_number")
  lastUpdatedTimestamp      DateTime           @map("last_updated_timestamp") @db.Timestamp(6)
  operatorAddress           String?            @map("operator_address") @db.VarChar
  operatorId                BigInt?            @map("operator_id")
  ecdhPublicKey             String?            @unique(map: "index_workers_on_ecdh_public_key") @map("ecdh_public_key") @db.VarChar
  runtimeVersion            Int                @default(0) @map("runtime_version")
  confidenceLevel           Int                @default(0) @map("confidence_level")
  features                  Int[]
  initialScore              Int                @default(0) @map("initial_score")
  infoLastUpdatedAt         DateTime           @map("info_last_updated_at") @db.Timestamp(6)
  pid                       BigInt?
  stakePoolId               BigInt?            @map("stake_pool_id")
  minerAccountAddress       String?            @map("miner_account_address") @db.VarChar
  state                     String             @default("") @db.VarChar
  v                         Decimal            @default(0.0) @db.Decimal
  ve                        Decimal            @default(0.0) @db.Decimal
  pInit                     Int                @default(0) @map("p_init")
  pInstant                  Int                @default(0) @map("p_instant")
  totalReward               Decimal            @default(0.0) @map("total_reward") @db.Decimal
  sMin                      Decimal            @default(0.0) @map("s_min") @db.Decimal
  sMax                      Decimal            @default(0.0) @map("s_max") @db.Decimal
  shares                    Decimal            @default(0.0) @db.Decimal
  createdAt                 DateTime           @map("created_at") @db.Timestamp(6)
  updatedAt                 DateTime           @map("updated_at") @db.Timestamp(6)
  accounts                  Accounts?          @relation(fields: [operatorId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_23792da367")
  stakePools                StakePools?        @relation(fields: [stakePoolId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_rails_981f270424")
  miners                    Miners[]
  workerActivities          WorkerActivities[]

  @@index([minerAccountAddress], map: "index_workers_on_miner_account_address")
  @@index([operatorAddress], map: "index_workers_on_operator_address")
  @@index([operatorId], map: "index_workers_on_operator_id")
  @@index([pid], map: "index_workers_on_pid")
  @@index([stakePoolId], map: "index_workers_on_stake_pool_id")
  @@map("workers")
}

query StakePools(
  $where: StakePoolsWhereInput
  $orderBy: [StakePoolsOrderByWithRelationInput!]
  $take: Int
  $skip: Int
  $withStakePoolStakers: Boolean = false
  $stakePoolStakersWhere: StakePoolStakersWhereInput
  $withStakePoolWithdrawals: Boolean = false
  $stakePoolWithdrawalsWhere: StakePoolWithdrawalsWhereInput
  $withMiners: Boolean = false
  $minersWhere: MinersWhereInput
) {
  findManyStakePools(
    where: $where
    orderBy: $orderBy
    take: $take
    skip: $skip
  ) {
    pid
    ownerAddress
    commission
    ownerReward
    cap
    rewardAcc
    totalShares
    totalStake
    freeStake
    releasingStake
    usedStake
    remainingStake
    stakersCount
    minersCount
    instantApr
    stakePoolStakers(where: $stakePoolStakersWhere)
      @include(if: $withStakePoolStakers) {
      address
      shares
      locked
      availableReward
      rewardDebt
      stake
      pendingReward
      stakeReward
      claimableReward
      instantClaimableReward
      isOwner
    }
    accounts {
      identity
      identityVerified
    }
    stakePoolWithdrawals(where: $stakePoolWithdrawalsWhere)
      @include(if: $withStakePoolWithdrawals) {
      shares
      startTime
      estimatesEndTime
      stake
      userAddress
    }
    miners(where: $minersWhere) @include(if: $withMiners) {
      estimatesReclaimableAt
      workerPublicKey
      stakes
    }
    withdrawalsCount
  }
  aggregateStakePools(where: $where) {
    _count {
      _all
    }
  }
}

query TotalStake {
  aggregateStakePools {
    _sum {
      totalStake
    }
  }
}

query States {
  findManyStates {
    integerValue
    datetimeValue
  }
}

query Miners(
  $where: MinersWhereInput
  $orderBy: [MinersOrderByWithRelationInput!]
  $take: Int
  $skip: Int
) {
  findManyMiners(where: $where, orderBy: $orderBy, take: $take, skip: $skip) {
    workerPublicKey
    pid
    state
    v
    ve
    pInit
    pInstant
    totalReward
    shares
    sMin
    sMax
    stakes
    estimatesReclaimableAt
    stakePools {
      freeStake
    }
  }
  aggregateMiners(where: $where) {
    _count {
      _all
    }
  }
}

query StakePool($where: StakePoolsWhereUniqueInput!) {
  findUniqueStakePools(where: $where) {
    pid
    ownerAddress
    commission
    ownerReward
    cap
    rewardAcc
    totalShares
    totalStake
    freeStake
    releasingStake
    remainingStake
    instantApr
    stakersCount
    withdrawalsCount
    minersCount
    accounts {
      identity
      identityVerified
    }
    stakePoolWithdrawals {
      shares
      startTime
      estimatesEndTime
      stake
      userAddress
    }
    idleMinersCount
  }
}
